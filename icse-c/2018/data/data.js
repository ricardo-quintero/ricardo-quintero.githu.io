var webpub = {data: {
  "conferences": [
    {
      "title": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering",
      "acronym": "FormaliSE",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1hlIk9J3JgGPoG815qE9fq/7DzZpjvTkGdf9eX9QY7R0M.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3GVfxlXZKX7toHJEQdlLMP/65n5d5lFWp9fEe9BIZL8X1.pdf",
          "extraLocations": [],
          "pageNumber": 2,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/2qteyOYlclun8kEsVxfWIR/4dOgBlGI1ZRcFPNV27UnTR.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/29adzotYKmhhogqH22dzDM/bhGsBetm6mu2EDIJodpm8.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/692mcv884hrFBB220Etv1W/58hejZneknfAa0oE22dssC.pdf",
          "extraLocations": [],
          "pageNumber": 6,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from FormaliSE 2018 General and Program Chairs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3dg770EmAqptHKhzhU6FQN/PAQDAWURxUgTmWwKLGbkM.pdf",
          "extraLocations": [],
          "pageNumber": 9,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "FormaliSE 2018 Sponsors",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3CfY9RmYWLYThUhBvr2HFP/2kvW5pp20PdTioOsdeuwUk.pdf",
          "extraLocations": [],
          "pageNumber": 10,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/2EsKyJLmBaoiivtly1XmOj/3gQ1H2erJQPRo4LQMsCk7o.pdf",
          "extraLocations": [],
          "pageNumber": 11,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "Reviewers",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4IvWj68GKkjncTvm4TDChh/4zNm8UCyrEqRKNLYSshS0c.pdf",
          "extraLocations": [],
          "pageNumber": 12,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1wI7uaxIdTTjHbK817LMED/1rfh9UnG8Jl87RV4Q5h7hF.pdf",
          "extraLocations": [],
          "pageNumber": 13,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/7g8u1NVqkH1pxKjCsSKcQt/1UDGQOiIgaczpiWhKOE0dJ.pdf",
          "extraLocations": [],
          "pageNumber": 89,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4TFJ5uFm3H8Fehoxwnlfhp/5dw89dgTaNxMunTKHOQkEU.pdf",
          "extraLocations": [],
          "pageNumber": 90,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Keynote",
          "lineItems": [
            {
              "id": "7lfAItrGDZwMcLgDT8HPlq",
              "type": "authorPaper",
              "text": "Risk Management for High Tech Systems",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/6JSZKdU24pC4GbkhIh6t0P/2g1zAbL86B9v45ClHIT4JV.pdf",
              "extraLocations": [],
              "authorNames": "Marielle Stoelinga (University of Twente; Radboud University Nijmegen)",
              "abstract": "How do we ensure that self-driving cars, nuclear power plants and Internet-of-things devices are safe and reliable? That is the topic of risk management. Fault tree analysis is a very popular technique here, deployed by many institutions like NASA, ESA, Honeywell, Ford, Airbus, the FDA, Toyota, Shell etc. In this presentation, I will elaborate how the deployment of stochastic model checking can improve the capabilities of fault tree analysis, making them more powerful, flexible and efficient, allowing one to analyze a richer variety of questions faster, and thereby increasing their practical relevance and deployment in practical risk assessments. I will report on our experience with the application and validation of these techniques in industrial practice. In particular, I will show how compositionally, model-driven engineering, graph rewriting all helped to crunch industrial cases. Finally, I will present some new directions on the deployment of big data analytics within fault tree analysis.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Risk Management for High Tech Systems 1522177799962 Marielle Stoelinga University of Twente; Radboud University Nijmegen m.i.a.stoelinga@utwente.nl risk management fault trees How do we ensure that self-driving cars, nuclear power plants and Internet-of-things devices are safe and reliable? That is the topic of risk management. Fault tree analysis is a very popular technique here, deployed by many institutions like NASA, ESA, Honeywell, Ford, Airbus, the FDA, Toyota, Shell etc. In this presentation, I will elaborate how the deployment of stochastic model checking can improve the capabilities of fault tree analysis, making them more powerful, flexible and efficient, allowing one to analyze a richer variety of questions faster, and thereby increasing their practical relevance and deployment in practical risk assessments. I will report on our experience with the application and validation of these techniques in industrial practice. In particular, I will show how compositionally, model-driven engineering, graph rewriting all helped to crunch industrial cases. Finally, I will present some new directions on the deployment of big data analytics within fault tree analysis.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Formal Methods for Autonomous Systems 1",
          "lineItems": [
            {
              "id": "3F8p6G9qTpI0DIN1gHx8s5",
              "type": "authorPaper",
              "text": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf",
              "extraLocations": [],
              "authorNames": "Mohammed Foughali (LAAS-CNRS - Université de Toulouse), Bernard Berthomieu (LAAS-CNRS - Université de Toulouse), Silvano Dal Zilio (LAAS-CNRS - Université de Toulouse), Pierre-Emmanuel Hladik (LAAS-CNRS - Université de Toulouse), Félix Ingrand (LAAS-CNRS - Université de Toulouse), Anthony Mallet (LAAS-CNRS - Université de Toulouse)",
              "abstract": "Software constitutes a major part of the development of robotic and autonomous systems and is critical to their successful deployment in our everyday life. Robotic software must thus run and perform as specified. Since most of these systems are used in a hard real-time context, the schedulability of their tasks is a crucial property. In this work, we propose to use formal methods to check whether the tasks of a robotic application are schedulable with respect to a given hardware platform. For this, we automatically translate functional components specified in GenoM into FIACRE, a formal language for timed systems. The generated models integrate realistic real-time schedulers based on the FCFS and the SJF cooperative policies. We use then the model-checker TINA to assert schedulability properties. We carry out experiments on a real robotic system, namely a quadcopter flight controller. We demonstrate that, on its actual hardware, schedulability properties can be formally expressed and verified. We give examples on how we can check other important behavioral and timed properties on the same synthesized models.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms 1521477233910 Mohammed Foughali LAAS-CNRS - Université de Toulouse mfoughal@laas.fr Bernard Berthomieu LAAS-CNRS - Université de Toulouse bernard@laas.fr Silvano Dal Zilio LAAS-CNRS - Université de Toulouse dalzilio@laas.fr Pierre-Emmanuel Hladik LAAS-CNRS - Université de Toulouse pehladik@laas.fr Félix Ingrand LAAS-CNRS - Université de Toulouse felix@laas.fr Anthony Mallet LAAS-CNRS - Université de Toulouse mallet@laas.fr Formal verification Scheduling Real time Robotics Software engineering Petri nets Software constitutes a major part of the development of robotic and autonomous systems and is critical to their successful deployment in our everyday life. Robotic software must thus run and perform as specified. Since most of these systems are used in a hard real-time context, the schedulability of their tasks is a crucial property. In this work, we propose to use formal methods to check whether the tasks of a robotic application are schedulable with respect to a given hardware platform. For this, we automatically translate functional components specified in GenoM into FIACRE, a formal language for timed systems. The generated models integrate realistic real-time schedulers based on the FCFS and the SJF cooperative policies. We use then the model-checker TINA to assert schedulability properties. We carry out experiments on a real robotic system, namely a quadcopter flight controller. We demonstrate that, on its actual hardware, schedulability properties can be formally expressed and verified. We give examples on how we can check other important behavioral and timed properties on the same synthesized models.",
              "pageNumber": 2,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Runtime Verification",
          "lineItems": [
            {
              "id": "2L3kvmbpvvmazp0NiqL3ng",
              "type": "authorPaper",
              "text": "Extending Specification Patterns for Verification of Parametric Traces",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf",
              "extraLocations": [],
              "authorNames": "Yoann Blein (Univ. Grenoble Alpes - CNRS), Yves Ledru (Univ. Grenoble Alpes - CNRS), Lydie du Bousquet (Univ. Grenoble Alpes - CNRS), Roland Groz (Univ. Grenoble Alpes - CNRS)",
              "abstract": "This article proposes a temporal and parametric specification language (ParTraP) developed for the verification of execution traces. The language extends specification patterns with nested scopes, real-time and first-order quantification over the data inside a JSON trace, while remaining pragmatic. Its design was directed by a case study in the medical field (computer aided surgery). The paper briefly presents the case study and details the design rationale, syntax and semantics of the language. The language has been implemented and several properties have been successfully evaluated over a corpus of 100 surgery traces.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Extending Specification Patterns for Verification of Parametric Traces 1521448414551 Yoann Blein Univ. Grenoble Alpes - CNRS yoann.blein@imag.fr Yves Ledru Univ. Grenoble Alpes - CNRS yves.ledru@imag.fr Lydie du Bousquet Univ. Grenoble Alpes - CNRS lydie.du-bousquet@imag.fr Roland Groz Univ. Grenoble Alpes - CNRS roland.groz@imag.fr Runtime Verification Parametric Events Temporal Specification Trace Analysis This article proposes a temporal and parametric specification language (ParTraP) developed for the verification of execution traces. The language extends specification patterns with nested scopes, real-time and first-order quantification over the data inside a JSON trace, while remaining pragmatic. Its design was directed by a case study in the medical field (computer aided surgery). The paper briefly presents the case study and details the design rationale, syntax and semantics of the language. The language has been implemented and several properties have been successfully evaluated over a corpus of 100 surgery traces.",
              "pageNumber": 10,
              "isPageNumberRoman": false
            },
            {
              "id": "shJXjAiJcmkM8fpa9b6nP",
              "type": "authorPaper",
              "text": "Runtime Verification of Hyperproperties for Deterministic Programs",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf",
              "extraLocations": [],
              "authorNames": "Srinivas Pinisetty (University of Gothenburg), Gerardo Schneider (University of Gothenburg), David Sands (Chalmers University of Technology)",
              "abstract": "In this paper, we consider the runtime verification problem of safety hyperproperties for deterministic programs. Several security and information-flow policies such as data minimality, non-interference, integrity, and software doping are naturally expressed formally as safety hyperproperties. Although there are monitoring results for hyperproperties, the algorithms are very complex since these are properties over set of traces, and not over single traces. For the deterministic input-output programs that we consider, and the specific safety hyperproperties we are interested in, the problem can be reduced to monitoring of trace properties. In this paper, we present a simpler monitoring approach for safety hyperproperties of deterministic programs. The approach involves transforming the given safety hyperproperty into a trace property, extracting a characteristic predicate for the given hyperproperty, and providing a parametric monitor taking such predicate as parameter. For any hyperproperty in the considered subclass, we show how runtime verification monitors can be synthesised. We have implemented our approach in the form of a parameterised monitor for the given class, and have applied it to a number of hyperproperties including data minimisation, non-interference, integrity and software doping. We show results concerning both offline and online monitoring.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Runtime Verification of Hyperproperties for Deterministic Programs 1521450818331 Srinivas Pinisetty University of Gothenburg srinivas.pinisetty@gu.se Gerardo Schneider University of Gothenburg gersch@chalmers.se David Sands Chalmers University of Technology dave@chalmers.se Monitoring Runtime Verification Security Information-flow In this paper, we consider the runtime verification problem of safety hyperproperties for deterministic programs. Several security and information-flow policies such as data minimality, non-interference, integrity, and software doping are naturally expressed formally as safety hyperproperties. Although there are monitoring results for hyperproperties, the algorithms are very complex since these are properties over set of traces, and not over single traces. For the deterministic input-output programs that we consider, and the specific safety hyperproperties we are interested in, the problem can be reduced to monitoring of trace properties. In this paper, we present a simpler monitoring approach for safety hyperproperties of deterministic programs. The approach involves transforming the given safety hyperproperty into a trace property, extracting a characteristic predicate for the given hyperproperty, and providing a parametric monitor taking such predicate as parameter. For any hyperproperty in the considered subclass, we show how runtime verification monitors can be synthesised. We have implemented our approach in the form of a parameterised monitor for the given class, and have applied it to a number of hyperproperties including data minimisation, non-interference, integrity and software doping. We show results concerning both offline and online monitoring.",
              "pageNumber": 20,
              "isPageNumberRoman": false
            },
            {
              "id": "4oaLo4bCTx9HLLF19LbVti",
              "type": "authorPaper",
              "text": "Testing Meets Static and Runtime Verification",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf",
              "extraLocations": [],
              "authorNames": "Jesus Mauricio Chimento (Chalmers University of Technology), Wolfgang Ahrendt (Chalmers University of Technology), Gerardo Schneider (University of Gothenburg)",
              "abstract": "Test driven development (TDD) is a technique where test cases are used to guide the development of a system. This technique introduces several advantages at the time of developing a system, e.g. writing clean code, good coverage for the features of the system, and evolutionary development. In this paper we show how the capabilities of a testing focused development methodology based on TDD and model-based testing, can be enhanced by integrating static and runtime verification into its workflow. Considering that the desired system properties capture data-as well as control-oriented aspects, we integrate TDD with (static) deductive verification as an aid in the development of the data-oriented aspects, and we integrate model-based testing with runtime verification as an aid in the development of the control-oriented aspects. As a result of this integration, the proposed development methodology features the benefits of TDD and model-based testing, enhanced with, for instance, early detection of bugs which may be missed by TDD, regarding data aspects, and the validation of the overall system with respect to the model, regarding the control aspects.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Testing Meets Static and Runtime Verification 1521449787622 Jesus Mauricio Chimento Chalmers University of Technology chimento@chalmers.se Wolfgang Ahrendt Chalmers University of Technology ahrendt@chalmers.se Gerardo Schneider University of Gothenburg gerardo@cse.gu.se Test driven development Static Verification Runtime Verification Java Test driven development (TDD) is a technique where test cases are used to guide the development of a system. This technique introduces several advantages at the time of developing a system, e.g. writing clean code, good coverage for the features of the system, and evolutionary development. In this paper we show how the capabilities of a testing focused development methodology based on TDD and model-based testing, can be enhanced by integrating static and runtime verification into its workflow. Considering that the desired system properties capture data-as well as control-oriented aspects, we integrate TDD with (static) deductive verification as an aid in the development of the data-oriented aspects, and we integrate model-based testing with runtime verification as an aid in the development of the control-oriented aspects. As a result of this integration, the proposed development methodology features the benefits of TDD and model-based testing, enhanced with, for instance, early detection of bugs which may be missed by TDD, regarding data aspects, and the validation of the overall system with respect to the model, regarding the control aspects.",
              "pageNumber": 30,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Student Presentations",
          "lineItems": [],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Program Verification and Application",
          "lineItems": [
            {
              "id": "4UizZfnffLtGDShB0TVGFB",
              "type": "authorPaper",
              "text": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf",
              "extraLocations": [],
              "authorNames": "Pietro Ferrara (JuliaSoft), Agostino Cortesi (Universita Ca' Foscari di Venezia), Fausto Spoto (Universita di Verona)",
              "abstract": "A formal translation of CIL (i.e., .Net) bytecode into Java bytecode is introduced and proved sound with respect to the language semantics. The resulting code is then analyzed with Julia, an industrial static analyzer of Java bytecode. The overall process of translation and analysis is fast, scales up to industrial programs, and introduces a negligible number of false alarms. The main result of this work is to leverage existing, mature, and sound analyzers for Java bytecode by applying them to the (translated) CIL bytecode.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 CIL to Java-Bytecode Translation for Static Analysis Leveraging 1521444648582 Pietro Ferrara JuliaSoft pietro.ferrara@juliasoft.com Agostino Cortesi Universita Ca' Foscari di Venezia cortesi@unive.it Fausto Spoto Universita di Verona fausto.spoto@univr.it Static Analysis Abstract Interpretation .NET Java A formal translation of CIL (i.e., .Net) bytecode into Java bytecode is introduced and proved sound with respect to the language semantics. The resulting code is then analyzed with Julia, an industrial static analyzer of Java bytecode. The overall process of translation and analysis is fast, scales up to industrial programs, and introduces a negligible number of false alarms. The main result of this work is to leverage existing, mature, and sound analyzers for Java bytecode by applying them to the (translated) CIL bytecode.",
              "pageNumber": 40,
              "isPageNumberRoman": false
            },
            {
              "id": "G8zQwr4AMlVT1lxB1isXP",
              "type": "authorPaper",
              "text": "Modeling Time in Java Programs for Automatic Error Detection",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf",
              "extraLocations": [],
              "authorNames": "Giovanni Liva (University of Klagenfurt), Muhammad Taimoor Khan (University of Klagenfurt), Francesco Spegni (Università Politecnica delle Marche), Luca Spalazzi (Università Politecnica delle Marche), Andreas Bollin (University of Klagenfurt), Martin Pinzger (University of Klagenfurt)",
              "abstract": "Modern programming languages, such as Java, represent time as integer variables, called timestamps. Timestamps allow developers to tacitly model incorrect time values resulting in a program failure because any negative value or every positive value is not necessarily a valid time representation. Current approaches to automatically detect errors in programs, such as Randoop and FindBugs, cannot detect such errors because they treat timestamps as normal integer variables and test them with random values verifying if the program throws an exception. In this paper, we present an approach that considers the time semantics of the Java language to systematically detect time related errors in Java programs. With the formal time semantics, our approach determines which integer variables handle time and which statements use or alter their values. Based on this information, it translates these statements into an SMT model that is passed to an SMT solver. The solver formally verifies the correctness of the model and reports the violations of time properties in that program. For the evaluation, we have implemented our approach in a prototype tool and applied it to the source code of 20 Java open source projects. The results show that our approach is scalable and it is capable of detecting time errors precisely enough allowing its usability in real-world applications.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Modeling Time in Java Programs for Automatic Error Detection 1521224327070 Giovanni Liva University of Klagenfurt giovanni.liva@aau.at Muhammad Taimoor Khan University of Klagenfurt Muhammad.Khan@aau.at Francesco Spegni Università Politecnica delle Marche f.spegni@dii.univpm.it Luca Spalazzi Università Politecnica delle Marche l.spalazzi@univpm.it Andreas Bollin University of Klagenfurt andreas.bollin@uni-klu.ac.at Martin Pinzger University of Klagenfurt martin.pinzger@aau.at program verification automatic error detection SMT solver time semantics Modern programming languages, such as Java, represent time as integer variables, called timestamps. Timestamps allow developers to tacitly model incorrect time values resulting in a program failure because any negative value or every positive value is not necessarily a valid time representation. Current approaches to automatically detect errors in programs, such as Randoop and FindBugs, cannot detect such errors because they treat timestamps as normal integer variables and test them with random values verifying if the program throws an exception. In this paper, we present an approach that considers the time semantics of the Java language to systematically detect time related errors in Java programs. With the formal time semantics, our approach determines which integer variables handle time and which statements use or alter their values. Based on this information, it translates these statements into an SMT model that is passed to an SMT solver. The solver formally verifies the correctness of the model and reports the violations of time properties in that program. For the evaluation, we have implemented our approach in a prototype tool and applied it to the source code of 20 Java open source projects. The results show that our approach is scalable and it is capable of detecting time errors precisely enough allowing its usability in real-world applications.",
              "pageNumber": 50,
              "isPageNumberRoman": false
            },
            {
              "id": "6xtCpR8heS5XzYcYCANCwB",
              "type": "authorPaper",
              "text": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf",
              "extraLocations": [],
              "authorNames": "Alexander Wickert (University of Potsdam), Anna-Lena Lamprecht (Utrecht University), Tiziana Margaria (University of Limerick and Lero)",
              "abstract": "We apply an IDE for user-level process design and composition to a real-life case study: a complex workflow from an ongoing global cancer-related cachexia research project. Originally buried in a manually operated spreadsheet, the process is now fully automated and integrated into the project database, ensuring the immediate availability, consistency and reproducibility of the outcomes. Our integrated solution enables the scientists to immediately execute the processes and easily customize both processes and data model to continuously changing experimental setups. The data modeling is provided by the Dynamic Web Application framework and the process modeling functionalities by the Java Application Building Center, both following the paradigm of eXtreme Model-Driven Design for model-driven software development.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research 1521500562274 Alexander Wickert University of Potsdam alwicker@uni-potsdam.de Anna-Lena Lamprecht Utrecht University a.l.lamprecht@uu.nl Tiziana Margaria University of Limerick and Lero tiziana.margaria@lero.ie scientific workflows workflow design process modeling domain specific modeling model-driven software development We apply an IDE for user-level process design and composition to a real-life case study: a complex workflow from an ongoing global cancer-related cachexia research project. Originally buried in a manually operated spreadsheet, the process is now fully automated and integrated into the project database, ensuring the immediate availability, consistency and reproducibility of the outcomes. Our integrated solution enables the scientists to immediately execute the processes and easily customize both processes and data model to continuously changing experimental setups. The data modeling is provided by the Dynamic Web Application framework and the process modeling functionalities by the Java Application Building Center, both following the paradigm of eXtreme Model-Driven Design for model-driven software development.",
              "pageNumber": 60,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "FormaliSE 2018 - Formal Methods for Autonomous Systems 2",
          "lineItems": [
            {
              "id": "5ivShwf3fyWZC0UQbrBFs4",
              "type": "authorPaper",
              "text": "Self-Adaptive Automata",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3dxozXoAX7AlDorzFPfQPU/1PbhgVqGQskwRy91V4mPTJ.pdf",
              "extraLocations": [],
              "authorNames": "Aimee Borda (Trinity College Dublin), Vasileios Koutavas (Trinity College Dublin)",
              "abstract": "Self-adaptive systems aim to efficiently respond to a wide range of changes in their operational environment by dynamically altering their behaviour. Such systems are typically comprised of a base system, implementing core functionality, and an adaptation decision process, which determines how the base system must change at different points in its execution. These two components coordinate through a set of adaptation events: a set of execution points of the former where the latter is invoked. The pattern of these events is crucial for the overall system to achieve (a) correctness against specific requirements, and (b) efficiency of system resources. Existing techniques for modelling self-adaptive systems usually hardcode adaptation events within the base system or the adaptation decision process. This limits system designers in discovering correct and optimal patterns of adaptation events, as changing those involves signi cant changes in the model. In this work we present Self-Adaptive Automata, an abstract modelling framework which decouples adaptation event patterns from the descriptions of base systems and adaptation decision processes. In our framework, base systems expose execution points where adaptation may happen — in the most general case this can include all system states — and adaptation decision processes are parametric to these points. A distinct automaton then pinpoints when in the system adaptation must happen. Using this framework system designers can experiment with different adaptation event patterns, without modifications to the base system or the adaptation decision process, and discover correct and efficient patterns. We show that our framework is compatible with traditional verification tools by providing an adequate translation from Self-Adaptive Automata into FDR, in which correctness against requirements can be verified. We also prove that, although our automata framework includes dynamic self-modifying features, it corresponds to standard models of computation. We illustrate the use of our framework through a use case of a self-adaptive system of autonomous search-and-rescue rovers.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Self-Adaptive Automata 1521210489548 Aimee Borda Trinity College Dublin bordaa@tcd.ie Vasileios Koutavas Trinity College Dublin vasileios.Koutavas@scss.tcd.ie Software system models Automata Verification Self Adaptive System Refinement Self-adaptive systems aim to efficiently respond to a wide range of changes in their operational environment by dynamically altering their behaviour. Such systems are typically comprised of a base system, implementing core functionality, and an adaptation decision process, which determines how the base system must change at different points in its execution. These two components coordinate through a set of adaptation events: a set of execution points of the former where the latter is invoked. The pattern of these events is crucial for the overall system to achieve (a) correctness against specific requirements, and (b) efficiency of system resources. Existing techniques for modelling self-adaptive systems usually hardcode adaptation events within the base system or the adaptation decision process. This limits system designers in discovering correct and optimal patterns of adaptation events, as changing those involves signi cant changes in the model. In this work we present Self-Adaptive Automata, an abstract modelling framework which decouples adaptation event patterns from the descriptions of base systems and adaptation decision processes. In our framework, base systems expose execution points where adaptation may happen — in the most general case this can include all system states — and adaptation decision processes are parametric to these points. A distinct automaton then pinpoints when in the system adaptation must happen. Using this framework system designers can experiment with different adaptation event patterns, without modifications to the base system or the adaptation decision process, and discover correct and efficient patterns. We show that our framework is compatible with traditional verification tools by providing an adequate translation from Self-Adaptive Automata into FDR, in which correctness against requirements can be verified. We also prove that, although our automata framework includes dynamic self-modifying features, it corresponds to standard models of computation. We illustrate the use of our framework through a use case of a self-adaptive system of autonomous search-and-rescue rovers.",
              "pageNumber": 64,
              "isPageNumberRoman": false
            },
            {
              "id": "4UJEvos4YO1eeqVjEyC2Fj",
              "type": "authorPaper",
              "text": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf",
              "extraLocations": [],
              "authorNames": "Rong Gu (Mälardalen University), Raluca Marinescu (Mälardalen University), Cristina Seceleanu (Mälardalen University), Kristina Lundqvist (Mälardalen University)",
              "abstract": "In an attempt to increase productivity and the workers' safety, the construction industry is moving towards autonomous construction sites, where various construction machines operate without human intervention. In order to perform their tasks autonomously, the machines are equipped with different features, such as position localization, human and obstacle detection, collision avoidance, etc. Such systems are safety critical, and should operate autonomously with very high dependability (e.g., by meeting task deadlines, avoiding (fatal) accidents at all costs, etc.). An Autonomous Wheel Loader is a machine that transports materials within the construction site without a human in the cab. To check the dependability of the loader, in this paper we provide a timed automata description of the vehicle's control system, including the abstracted path planning and collision avoidance algorithms used to navigate the loader, and we model check the encoding in UPPAAL, against various functional, timing and safety requirements. The complex nature of the navigation algorithms makes the loader's abstract modeling and the verification very challenging. Our work shows that exhaustive verification techniques can be applied early in the development of autonomous systems, to enable finding potential design errors that would incur increased costs if discovered later.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Formal Verification of an Autonomous Wheel Loader by Model Checking 1521503476426 Rong Gu Mälardalen University rong.gu@mdh.se Raluca Marinescu Mälardalen University raluca.marinescu@mdh.se Cristina Seceleanu Mälardalen University cristina.seceleanu@mdh.se Kristina Lundqvist Mälardalen University kristina.lundqvist@mdh.se Autonomous Vehicle Collision Avoidance Formal Verification Timed Automata UPPAAL Model Checking In an attempt to increase productivity and the workers' safety, the construction industry is moving towards autonomous construction sites, where various construction machines operate without human intervention. In order to perform their tasks autonomously, the machines are equipped with different features, such as position localization, human and obstacle detection, collision avoidance, etc. Such systems are safety critical, and should operate autonomously with very high dependability (e.g., by meeting task deadlines, avoiding (fatal) accidents at all costs, etc.). An Autonomous Wheel Loader is a machine that transports materials within the construction site without a human in the cab. To check the dependability of the loader, in this paper we provide a timed automata description of the vehicle's control system, including the abstracted path planning and collision avoidance algorithms used to navigate the loader, and we model check the encoding in UPPAAL, against various functional, timing and safety requirements. The complex nature of the navigation algorithms makes the loader's abstract modeling and the verification very challenging. Our work shows that exhaustive verification techniques can be applied early in the development of autonomous systems, to enable finding potential design errors that would incur increased costs if discovered later.",
              "pageNumber": 74,
              "isPageNumberRoman": false
            },
            {
              "id": "erRdi7v4us3dmXVZMph4c",
              "type": "authorPaper",
              "text": "Formal Verification of Automotive Embedded Software",
              "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf",
              "extraLocations": [],
              "authorNames": "Vassil Todorov (LRI- Groupe PSA - Université Paris-Saclay), Frédéric Boulanger (LRI - CentraleSupélec - Université Paris-Saclay), Safouan Taha (LRI - CentraleSupélec - Université Paris-Saclay)",
              "abstract": "The ever-increasing complexity of automotive embedded systems and the need for safe advanced driver assistance systems (ADAS) represent a great challenge for car manufacturers. Furthermore, we expect that in the near future, authorities require a software certification in order to get convinced that ADAS are safe enough. Theoretical research and experience show that when using conventional design approaches it is impossible to guarantee high confidence to those systems. The way taken by some industries (e.g. aerospace, railway, nuclear) was by partially using formal verification techniques. In this paper, we first present a background of the formal verification techniques and how they can contribute to achieve the requirements of some safety standards. Next, we share our experience with the application of those techniques that seem to be mature enough to be used in an industrial context: Static analysis based on Abstract Interpretation, SMT-based software Model checking and Deductive proof. Finally, we make a detailed analysis about our experiments and propose an approach introducing formal methods into the development of automotive embedded software.",
              "searchText": "2018 ACM/IEEE Conference on Formal Methods in Software Engineering FormaliSE 2018 Formal Verification of Automotive Embedded Software 1522269804833 Vassil Todorov LRI- Groupe PSA - Université Paris-Saclay todorov@lri.fr Frédéric Boulanger LRI - CentraleSupélec - Université Paris-Saclay frederic.boulanger@lri.fr Safouan Taha LRI - CentraleSupélec - Université Paris-Saclay safouan.taha@lri.fr Software verification Formal methods ADAS Certification The ever-increasing complexity of automotive embedded systems and the need for safe advanced driver assistance systems (ADAS) represent a great challenge for car manufacturers. Furthermore, we expect that in the near future, authorities require a software certification in order to get convinced that ADAS are safe enough. Theoretical research and experience show that when using conventional design approaches it is impossible to guarantee high confidence to those systems. The way taken by some industries (e.g. aerospace, railway, nuclear) was by partially using formal verification techniques. In this paper, we first present a background of the formal verification techniques and how they can contribute to achieve the requirements of some safety standards. Next, we share our experience with the application of those techniques that seem to be mature enough to be used in an industrial context: Static analysis based on Abstract Interpretation, SMT-based software Model checking and Deductive proof. Finally, we make a detailed analysis about our experiments and propose an approach introducing formal methods into the development of automotive embedded software.",
              "pageNumber": 84,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE 13th International Conference on Global Software Engineering",
      "acronym": "ICGSE",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5IXexSv1qWPlngbULrzK1x/73kFvEhOhr3CQiA6XHULfj.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4IZY8CPA4rp8T5TPlxHoKd/QD6ibz6MiE779oIl8GeuE.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3QcsFowpZMkj9PRpBEzrux/5UgYf6zybUbqjy4suNRcu2.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3My8pCZSyplyzEqei6b411/6Bddn4NR7KXST3vFKs5MHB.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6rEqYxvtxTm99EtaJFbNBW/3QD3wkN7ZDyVtcHVJIDVRU.pdf",
          "extraLocations": [],
          "pageNumber": 9,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from ICGSE 2018 General and Program Co-Chairs",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/cK3SO8vxcL6zI9iOcufHc/d01zaSJIqhiJBVKY7VdSU.pdf",
          "extraLocations": [],
          "pageNumber": 12,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/ZdvNmWQ80P2gwkRJXaC2x/5i6esHTXMONrCuKSsPbDl0.pdf",
          "extraLocations": [],
          "pageNumber": 14,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee: Research Track",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1qz4e5GZBFOiEAMBABtfGi/4dOSgjN4AJa0nk7eNZNSBO.pdf",
          "extraLocations": [],
          "pageNumber": 16,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_COMMITTEE_LISTS",
          "text": "Steering Committee",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7bA8eKw8JYFCWTwMKfp1Ej/1KPo6zDwrN9WEfxV71CwJl.pdf",
          "extraLocations": [],
          "pageNumber": 18,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "ICGSE 2018 Sponsors",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7wXHcIeVupOqxaxkTeY7FS/3X51eRtuSqetMND75xW6mw.pdf",
          "extraLocations": [],
          "pageNumber": 19,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LONP_COMMITTEE_PHOTOS",
          "text": "Academic Keynote",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1hEUw50vfXG6LU7ShjCFJf/1XGoOIE8kHyPHIBgAfoU96.pdf",
          "extraLocations": [],
          "pageNumber": 20,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LONP_COMMITTEE_PHOTOS",
          "text": "Industry Keynote",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/YJGmnwy97qAwNvRdgRqxA/6ng8cTkKpqi0dePuqvv8UY.pdf",
          "extraLocations": [],
          "pageNumber": 21,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6L7B1qbea30RgtQxg0n128/dRzVkwixenv1cqDEOLKcP.pdf",
          "extraLocations": [],
          "pageNumber": 22,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6kdEyWLwoKWYnMoS9vR3Jr/01HLJazB6xCFfs6XTXKbwY.pdf",
          "extraLocations": [],
          "pageNumber": 149,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6GmB15VjwbWbraHPGZQNEt/5Tk7TnHSNww6TXJDSWapLB.pdf",
          "extraLocations": [],
          "pageNumber": 152,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "ICGSE 2018 - Scaled and Distributed Agile",
          "lineItems": [
            {
              "id": "6vKzfHwkRrFen2dtOkxxvT",
              "type": "authorPaper",
              "text": "Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6wApSUULH6l9KvgCBKtcZa/50da86lCp9kA13yOChV1FP.pdf",
              "extraLocations": [],
              "authorNames": "Roopa M. S. (Siemens Healthcare Private Limited), Ratnanabh Kumar (Siemens Healthcare Private Limited), Mani V. S. (Siemens Healthcare Private Limited)",
              "abstract": "We share the experience of a globally distributed software development organization in transitioning from a plan-driven approach to a lean methodology with a focus on role-specific practices. We outline how the new practices supported effective working in a global setup by strengthening trust, increasing communication, fostering openness, and encouraging faster decisions.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View 1521434107903 Roopa M. S. Siemens Healthcare Private Limited roopa.ms@siemens-healthineers.com Ratnanabh Kumar Siemens Healthcare Private Limited ratnanabh.kumar@siemens-healthineers.com Mani V. S. Siemens Healthcare Private Limited vs.mani@siemens-healthineers.com Global software engineering Lean Agile software engineering practices We share the experience of a globally distributed software development organization in transitioning from a plan-driven approach to a lean methodology with a focus on role-specific practices. We outline how the new practices supported effective working in a global setup by strengthening trust, increasing communication, fostering openness, and encouraging faster decisions.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            },
            {
              "id": "4Dma7jt9OlizJkuEatOKtF",
              "type": "authorPaper",
              "text": "Effective Distributed Pair Programming",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/XWLVzxAHGNC5muCfArBjM/5ms3XI1aMr9vp3xGw0rnA4.pdf",
              "extraLocations": [],
              "authorNames": "Mark Rajpal (Agile Global Results)",
              "abstract": "Pair Programming has quickly become a widespread technique for teams adopting Agile. The interest has gained even more popularity for those implementing Extreme Programming (XP) which is a well-known Agile methodology. There is a general agreement that pair programming works well with a pair of developers working side by side. However, that is not always possible. Distributed teams and distributed team members are becoming the norm. With that said, is distributed pair programming possible? And if so, can it be done effectively? This paper examines a project where distributed pair programming was extremely effective. Contrary to agile dogma, some individuals may perform better in a distributed manner over collocated.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Effective Distributed Pair Programming 1521077088761 Mark Rajpal Agile Global Results mark.rajpal@agileglobalresults.com Agile Scrum pair programming extreme programming Pair Programming has quickly become a widespread technique for teams adopting Agile. The interest has gained even more popularity for those implementing Extreme Programming (XP) which is a well-known Agile methodology. There is a general agreement that pair programming works well with a pair of developers working side by side. However, that is not always possible. Distributed teams and distributed team members are becoming the norm. With that said, is distributed pair programming possible? And if so, can it be done effectively? This paper examines a project where distributed pair programming was extremely effective. Contrary to agile dogma, some individuals may perform better in a distributed manner over collocated.",
              "pageNumber": 6,
              "isPageNumberRoman": false
            },
            {
              "id": "7MMTCDoCZjMxtk52wUf6B8",
              "type": "authorPaper",
              "text": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf",
              "extraLocations": [],
              "authorNames": "Gizelle S. Lemos (Samsung R&D Institute Brazil - Campinas - SP), Marcia Cristina de C. Costa (Samsung R&D Institute Brazil - Campinas - SP), Tatiana D. Borghi (Samsung R&D Institute Brazil - Manaus - AM), Paula G. Povoas (Samsung R&D Institute Brazil - Manaus - AM)",
              "abstract": "Samsung R&amp;D Institute Brazil (SRBR) is one of Samsung's research centers in the world in which there is research focused on software areas. SRBR teams have worked in collaboration with Samsung headquarter and outsourcing partners for producing software that aggregates value on Samsung products. SRBR has different partners with different levels of skill, maturity and that work in different contexts. For this reason, managing software development projects and guaranteeing the quality of resulting products have been challenging for SRBR. This experience report describes the process created to improve partners' management and proposes methods for tracking and improving the methods applied for validating the work delivered by outsourcing partners in order to guarantee that it meets Samsung quality requirements.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil 1521392625838 Gizelle S. Lemos Samsung R&D Institute Brazil - Campinas - SP g.lemos@samsung.com Marcia Cristina de C. Costa Samsung R&D Institute Brazil - Campinas - SP m.costa@samsung.com Tatiana D. Borghi Samsung R&D Institute Brazil - Manaus - AM t.borghi@samsung.com Paula G. Povoas Samsung R&D Institute Brazil - Manaus - AM paula.povoas@samsung.com Outsourcing management process acceptance testing outsourcing development Samsung R&amp;D Institute Brazil (SRBR) is one of Samsung's research centers in the world in which there is research focused on software areas. SRBR teams have worked in collaboration with Samsung headquarter and outsourcing partners for producing software that aggregates value on Samsung products. SRBR has different partners with different levels of skill, maturity and that work in different contexts. For this reason, managing software development projects and guaranteeing the quality of resulting products have been challenging for SRBR. This experience report describes the process created to improve partners' management and proposes methods for tracking and improving the methods applied for validating the work delivered by outsourcing partners in order to guarantee that it meets Samsung quality requirements.",
              "pageNumber": 11,
              "isPageNumberRoman": false
            },
            {
              "id": "7z9F1IzCyUVs0MGbCV4vUG",
              "type": "authorPaper",
              "text": "Control Based Management to Self Organizing Agile Teams: A Case Study",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1XqmM122hfF9YfOQq0DIQ1/4jDyX0YEicjIoIemsyqzIP.pdf",
              "extraLocations": [],
              "authorNames": "Rajeev BV (Siemens Technology and Service Private Limited), Prabhulinga Manikreddy (Siemens Technology and Services Private Limited)",
              "abstract": "Tough economic conditions, competition, ever-shortening time-to-market and need for better product quality has increased demand for more attention towards good project management approaches. Traditional Control Based Project Management Methodologies (TCBPMM) prevents change, by extensive planning before system is developed. The industry always demands for project management methodologies with the ability to adapt to changing needs of the users. The paper focuses mainly on how we in SIEMENS setup agile approach with technical excellence and an objective to create T shaped teams, involving transformation from control based to self-organizing work culture. Also it mentions the encountered barriers like change resistance, delay in adapt, ambiguities, unidirectional thoughts, misconceptions, lack of coordination. The team followed the principle \"Happy team produces great work \". A Project Manager of a team works as \"servant leader\" enabling the team to perform to its fullest potential. The main goal of the project manager is team empowerment, efficient process with a look towards continuous improvement that satisfies both team &amp; customer. A work agreement was set with core work points of Guiding, Coaching, Collaboration and Team based ownership. We aimed to create an environment of provide and seek constructive feedback on a regular basis, respect for every individuals is key, Embrace Transparency, Team-Shared leadership &amp; recognize good work.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Control Based Management to Self Organizing Agile Teams: A Case Study 1521563118328 Rajeev BV Siemens Technology and Service Private Limited bv.rajeev@siemens.com Prabhulinga Manikreddy Siemens Technology and Services Private Limited prabhulinga@siemens.com Self-organizing Agile teams Scrum Servant leader Coaching teams Team ownership Tough economic conditions, competition, ever-shortening time-to-market and need for better product quality has increased demand for more attention towards good project management approaches. Traditional Control Based Project Management Methodologies (TCBPMM) prevents change, by extensive planning before system is developed. The industry always demands for project management methodologies with the ability to adapt to changing needs of the users. The paper focuses mainly on how we in SIEMENS setup agile approach with technical excellence and an objective to create T shaped teams, involving transformation from control based to self-organizing work culture. Also it mentions the encountered barriers like change resistance, delay in adapt, ambiguities, unidirectional thoughts, misconceptions, lack of coordination. The team followed the principle \"Happy team produces great work \". A Project Manager of a team works as \"servant leader\" enabling the team to perform to its fullest potential. The main goal of the project manager is team empowerment, efficient process with a look towards continuous improvement that satisfies both team &amp; customer. A work agreement was set with core work points of Guiding, Coaching, Collaboration and Team based ownership. We aimed to create an environment of provide and seek constructive feedback on a regular basis, respect for every individuals is key, Embrace Transparency, Team-Shared leadership &amp; recognize good work.",
              "pageNumber": 16,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "ICGSE 2018 - Communication and Collaboration in Distributed Projects",
          "lineItems": [
            {
              "id": "757QwKxcWgAuk0wG4t0gV0",
              "type": "authorPaper",
              "text": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf",
              "extraLocations": [],
              "authorNames": "Miguel Botto-Tobar (Eindhoven University of Technology; University of Guayaquil), Weslley Torres (Eindhoven University of Technology), Angela Lozano (HealthConnect), Mark G.J. van den Brand (Eindhoven University of Technology), Bogdan Vasilescu (Carnegie Mellon University), Alexander Serebrenik (Eindhoven University of Technology)",
              "abstract": "Stack Overflow (SO) is the reference for asking and answering programming-related questions. In early 2014 Stack Overflow em Português (SO-PT) was announced with the goal to reach developers that are not sufficiently proficient in the English language to fully participate in SO. Almost four years later we study how the simultaneous availability of SO and SO-PT impacted Brazilian software developers. A priori, the impact could have been either empowering or impeding. To address this question, we combine interviews, analysis of trace data from SO and SO-PT and a survey of 229 Brazilian software developers. Our results indicate that the developers recognize availability of the information, response speed and accessibility as strong points of SO, and lower barrier to entry and presence of Brazilian-specific information as strong points of SO-PT. In large, SO remains more popular than SO-PT, and SO-PT is not perceived as a viable alternative to SO.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Is Stack Overflow in Portuguese Attractive for Brazilian Users? 1521460069275 Miguel Botto-Tobar Eindhoven University of Technology; University of Guayaquil m.a.botto.tobar@tue.nl Weslley Torres Eindhoven University of Technology w.silva.torres@tue.nl Angela Lozano HealthConnect angela.lozano.rodriguez@gmail.com Mark G.J. van den Brand Eindhoven University of Technology m.g.j.v.d.brand@tue.nl Bogdan Vasilescu Carnegie Mellon University vasilescu@cmu.edu Alexander Serebrenik Eindhoven University of Technology a.serebrenik@tue.nl Interview Qualitative Methods Survey Social Media/Online Communities Stack Overflow (SO) is the reference for asking and answering programming-related questions. In early 2014 Stack Overflow em Português (SO-PT) was announced with the goal to reach developers that are not sufficiently proficient in the English language to fully participate in SO. Almost four years later we study how the simultaneous availability of SO and SO-PT impacted Brazilian software developers. A priori, the impact could have been either empowering or impeding. To address this question, we combine interviews, analysis of trace data from SO and SO-PT and a survey of 229 Brazilian software developers. Our results indicate that the developers recognize availability of the information, response speed and accessibility as strong points of SO, and lower barrier to entry and presence of Brazilian-specific information as strong points of SO-PT. In large, SO remains more popular than SO-PT, and SO-PT is not perceived as a viable alternative to SO.",
              "pageNumber": 21,
              "isPageNumberRoman": false
            },
            {
              "id": "74iNKFplO9XgkygzCB5yrE",
              "type": "authorPaper",
              "text": "East Meets West: Global Software Engineering Course in Japan and Germany",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf",
              "extraLocations": [],
              "authorNames": "Daniel Moritz Marutschke (College of Information Science and Engineering Ritsumeikan University), Victor V. Kryssanov (College of Information Science and Engineering Ritsumeikan University), Patricia Brockmann (Computer Science Department Technical University Nuremberg Georg Simon Ohm)",
              "abstract": "Global software engineering poses unique challenges to distributed teams and tasks. Engineering education should re\u001eect these realworld scenarios as closely as possible. Due to budgetary constraints and the complexity of conducting global software engineering education, students have limited opportunities to gain international experience. A global software engineering class conducted by the Ritsumeikan University in Japan and the Technical University of Nuremberg in Germany is described. A problem-based learning approach provided students experience working in international software development teams.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 East Meets West: Global Software Engineering Course in Japan and Germany 1522304709616 Daniel Moritz Marutschke College of Information Science and Engineering Ritsumeikan University moritz@fc.ritsumei.ac.jp Victor V. Kryssanov College of Information Science and Engineering Ritsumeikan University kvvictor@is.ritsumei.ac.jp Patricia Brockmann Computer Science Department Technical University Nuremberg Georg Simon Ohm patricia.brockmann@th-nuernberg.de ACM proceedings global software engineering education experience intercultural Global software engineering poses unique challenges to distributed teams and tasks. Engineering education should re\u001eect these realworld scenarios as closely as possible. Due to budgetary constraints and the complexity of conducting global software engineering education, students have limited opportunities to gain international experience. A global software engineering class conducted by the Ritsumeikan University in Japan and the Technical University of Nuremberg in Germany is described. A problem-based learning approach provided students experience working in international software development teams.",
              "pageNumber": 30,
              "isPageNumberRoman": false
            },
            {
              "id": "63zDCcax65OvxTu7Z4KXG6",
              "type": "authorPaper",
              "text": "Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2wO9E4Qz8g7W8f5p5Z5apO/uNqbxnyOicRnSBHv59Vul.pdf",
              "extraLocations": [],
              "authorNames": "Prabhulinga ManikReddy (Siemens Technology and Services Private Ltd), Jaikrishna Iyer (Siemens Technology and Services Pvt Ltd)",
              "abstract": "In a large sized project with globally distributed environment, it is challenging to have a common information radiator across all global locations. This is so because it is difficult to make sense of the long list of tasks displayed on a single dashboard. Different time zones make it difficult to collaborate and cater to a customer who demands frequent releases and transparency. This paper demonstrates a unique solution driven by a novel mix of digitization and machine learning to solve this ubiquitous problem. Value stream mapping helped us to identify valueless paths in task assignment and hence the team developed a tool backed with machine learning which saved huge time and thus helped us to deliver our concepts faster to market. We took help of digital dash board and came up with custom unconventional dash boards, which helped our customer to understand and collaborate better with the development team located in different time zones. This paper also proposes the critical role of machine learning in project management. Improvements can be brought about in areas like task estimation, predicting task assignment to appropriate individuals, team velocity and turnaround time prediction. This paper is targeted to agile practitioners who are interested in improving workflows and building intelligent process systems using new modern technologies in globally distributed environment. This modern approach reduces waste and brings in collaboration irrespective of the locations.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning 1521482978178 Prabhulinga ManikReddy Siemens Technology and Services Private Ltd prabhulinga@siemens.com Jaikrishna Iyer Siemens Technology and Services Pvt Ltd jaikrishna.iyer@siemens.com Value Stream mapping Information Radiators Machine learning In a large sized project with globally distributed environment, it is challenging to have a common information radiator across all global locations. This is so because it is difficult to make sense of the long list of tasks displayed on a single dashboard. Different time zones make it difficult to collaborate and cater to a customer who demands frequent releases and transparency. This paper demonstrates a unique solution driven by a novel mix of digitization and machine learning to solve this ubiquitous problem. Value stream mapping helped us to identify valueless paths in task assignment and hence the team developed a tool backed with machine learning which saved huge time and thus helped us to deliver our concepts faster to market. We took help of digital dash board and came up with custom unconventional dash boards, which helped our customer to understand and collaborate better with the development team located in different time zones. This paper also proposes the critical role of machine learning in project management. Improvements can be brought about in areas like task estimation, predicting task assignment to appropriate individuals, team velocity and turnaround time prediction. This paper is targeted to agile practitioners who are interested in improving workflows and building intelligent process systems using new modern technologies in globally distributed environment. This modern approach reduces waste and brings in collaboration irrespective of the locations.",
              "pageNumber": 35,
              "isPageNumberRoman": false
            },
            {
              "id": "omWaP8BpnFzVyQaTjt9Cw",
              "type": "authorPaper",
              "text": "Software Engineering Tools Environment for Outsourcing Teams Collaboration",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2lImER8Y1axu5ueud93SAc/5YpcyX6t463sAS2tbRc3jY.pdf",
              "extraLocations": [],
              "authorNames": "Marcia Cristina de C. Costa (Samsung R&D Institute Brazil - Campinas - SP), Gizelle S. Lemos (Samsung R&D Institute Brazil - Campinas - SP), Flavio Beck (Samsung R&D Institute Brazil - Campinas - SP)",
              "abstract": "Samsung R&amp;D Center Brazil (SRBR) is one of the Samsung research centers in the world in which there is research focused on software areas. SRBR teams have worked in collaboration with Samsung headquarter and outsourcing partners for producing software that aggregates value on Samsung products. Considering the complexity of the scenario (different locations and different levels of access to internal tools environment and different maturity level of teams) it has been a challenge to produce high quality software. This report describes DMZ (\"Demilitarized Zone\"), a remote software engineering environment built by SRBR to minimize differences and distances among teams that work on the same software project. DMZ development and deployment include the definition of SRBR outsourcing process, improvements to the SRBR software process and setup/deployment of a set of integrated tools to support projects.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Software Engineering Tools Environment for Outsourcing Teams Collaboration 1521395258534 Marcia Cristina de C. Costa Samsung R&D Institute Brazil - Campinas - SP m.costa@samsung.com Gizelle S. Lemos Samsung R&D Institute Brazil - Campinas - SP g.lemos@samsung.com Flavio Beck Samsung R&D Institute Brazil - Campinas - SP flavio.beck@samsung.com Technical Outsourcing Process Agile SW Development Process SW Development Tools Samsung R&amp;D Center Brazil (SRBR) is one of the Samsung research centers in the world in which there is research focused on software areas. SRBR teams have worked in collaboration with Samsung headquarter and outsourcing partners for producing software that aggregates value on Samsung products. Considering the complexity of the scenario (different locations and different levels of access to internal tools environment and different maturity level of teams) it has been a challenge to produce high quality software. This report describes DMZ (\"Demilitarized Zone\"), a remote software engineering environment built by SRBR to minimize differences and distances among teams that work on the same software project. DMZ development and deployment include the definition of SRBR outsourcing process, improvements to the SRBR software process and setup/deployment of a set of integrated tools to support projects.",
              "pageNumber": 40,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "ICGSE 2018 - Processes for Distributed Development",
          "lineItems": [
            {
              "id": "7EzezbFJEVNo9cYBGiIa2P",
              "type": "authorPaper",
              "text": "A Process for Distributed Software Evolution",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf",
              "extraLocations": [],
              "authorNames": "Joao Ricardo Moreno Camilo (Federal University of Technology – Parana), L’Erario Alexandre (Federal University of Technology – Parana), Tiago Pagotto (Federal University of Technology – Parana), Jose Augusto Fabri (Federal University of Technology – Parana)",
              "abstract": "Proprietary enterprise software is commonly embedded in multinational organizations and therefore has multiple sources of global or local demand. This type of software is subject to constant evolutions motivated by improvements in the features or by changes in the legal and economic context of its environment. Problems arising from the demand for requirements are associated with the suitability of a particular local requirement to its global context, for example: tax rules are characteristic of a specific country while a business rule can achieve every global structure. In addition, software customization can be implemented by the software producer, external partners, programmers allocated within the customer company, and so on. The coordination of this scenario is considered critical for the productive sector company that uses proprietary enterprise software. If the software does not evolve, the company processes can be temporarily compromised, and the software becomes obsolete. We report a case study of a large proprietary ERP system in a multinational company located in Brazil that is among the three largest exporters in its market segment. As a contribution, we present the current structure of the distributed evolution process of the software in question and how the stakeholder coordination of this scenario occurs.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 A Process for Distributed Software Evolution 1520983826654 Joao Ricardo Moreno Camilo Federal University of Technology – Parana jrmcamilo91@gmail.com L’Erario Alexandre Federal University of Technology – Parana alerario@utfpr.edu.br Tiago Pagotto Federal University of Technology – Parana pagotto@alunos.utfpr.edu.br Jose Augusto Fabri Federal University of Technology – Parana fabri@utfpr.edu.br Distributed Software Development Software Evolution Distributed Software Evolution Proprietary enterprise software is commonly embedded in multinational organizations and therefore has multiple sources of global or local demand. This type of software is subject to constant evolutions motivated by improvements in the features or by changes in the legal and economic context of its environment. Problems arising from the demand for requirements are associated with the suitability of a particular local requirement to its global context, for example: tax rules are characteristic of a specific country while a business rule can achieve every global structure. In addition, software customization can be implemented by the software producer, external partners, programmers allocated within the customer company, and so on. The coordination of this scenario is considered critical for the productive sector company that uses proprietary enterprise software. If the software does not evolve, the company processes can be temporarily compromised, and the software becomes obsolete. We report a case study of a large proprietary ERP system in a multinational company located in Brazil that is among the three largest exporters in its market segment. As a contribution, we present the current structure of the distributed evolution process of the software in question and how the stakeholder coordination of this scenario occurs.",
              "pageNumber": 44,
              "isPageNumberRoman": false
            },
            {
              "id": "3Olsj4O56KyHKKWFI7SpvO",
              "type": "authorPaper",
              "text": "Global Software Engineering Experience through International Capstone Project Exchanges",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf",
              "extraLocations": [],
              "authorNames": "Dean Knudson (North Dakota State University), Stavros Kalafatis (Texas A & M University), Carsten Kleiner (Hannover University of Applied Sciences & Arts), Stephen Zahos (University of Illinois at Urbana-Champaign), Barbara Seegebarth (Technische Universität Braunschweig), Jonas Deeterfelt (Linkoping University), Iman Avazpour (Deakin University), Kristian Sandahl (Linkoping University), Peter Gorder (University of Colorado), Jeewani Ginige (Western Sydney University), Alex Radermacher (North Dakota State University), Hugo Caballero (Universidad del Norte), Humberto Gomez (Universidad del Norte), Mikael Roos (Blekinge Institute of Technology)",
              "abstract": "Today it is very common for software systems to be built by teams located in more than one country. For example, a project team may be located in the US while the team lead resides in Sweden. How then should students be trained for this kind of work? Senior design or capstone projects offer students real-world hands-on experience but rarely while working internationally. One reason is that most instructors do not have international business contacts that allow them to find project sponsors in other countries. Another reason is the fear of having to invest a huge amount of time managing an international project. In this paper we present the general concepts related to \"International Capstone Project Exchanges\", the basic model behind the exchanges (student teams are led by an industry sponsor residing in a different country) and several alternate models that have been used in practice. We will give examples from projects in the US, Germany, Sweden, Australia, and Colombia. We have extended the model beyond software projects to include engineering projects as well as marketing, and journalism. We conclude with a description of an International Capstone Project Exchange website that we have developed to aid any university in establishing their own international project exchange.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Global Software Engineering Experience through International Capstone Project Exchanges 1521061816697 Dean Knudson North Dakota State University dean.knudson@ndsu.edu Stavros Kalafatis Texas A & M University skalafatis-tamu@tamu.edu Carsten Kleiner Hannover University of Applied Sciences & Arts carsten.kleiner@hs-hannover.de Stephen Zahos University of Illinois at Urbana-Champaign szahos@illinois.edu Barbara Seegebarth Technische Universität Braunschweig b.seegebarth@tu-braunschweig.de Jonas Deeterfelt Linkoping University jonas.detterfelt@liu.se Iman Avazpour Deakin University iman.avazpour@deakin.edu Kristian Sandahl Linkoping University kristian.sandahl@liu.se Peter Gorder University of Colorado pgorder@uccs.edu Jeewani Ginige Western Sydney University j.ginige@westernsydney.edu.au Alex Radermacher North Dakota State University alex.radermacher@ndsu.edu Hugo Caballero Universidad del Norte hcaballero@argos.com.co Humberto Gomez Universidad del Norte humgomez@uninorte.edu.co Mikael Roos Blekinge Institute of Technology mikael.roos@bth.se Capstone Project Senior Design Project Global Software Engineering International Collaboration Software Engineering Education Industry-Sponsored Projects Today it is very common for software systems to be built by teams located in more than one country. For example, a project team may be located in the US while the team lead resides in Sweden. How then should students be trained for this kind of work? Senior design or capstone projects offer students real-world hands-on experience but rarely while working internationally. One reason is that most instructors do not have international business contacts that allow them to find project sponsors in other countries. Another reason is the fear of having to invest a huge amount of time managing an international project. In this paper we present the general concepts related to \"International Capstone Project Exchanges\", the basic model behind the exchanges (student teams are led by an industry sponsor residing in a different country) and several alternate models that have been used in practice. We will give examples from projects in the US, Germany, Sweden, Australia, and Colombia. We have extended the model beyond software projects to include engineering projects as well as marketing, and journalism. We conclude with a description of an International Capstone Project Exchange website that we have developed to aid any university in establishing their own international project exchange.",
              "pageNumber": 54,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "ICGSE 2018 - Scaled and Distributed Agile",
          "lineItems": [
            {
              "id": "4apLeQcHOgvACikgNoH4Ia",
              "type": "authorPaper",
              "text": "Enhancing Product and Service Capability Through Scaling Agility in a Global Software Vendor Environment",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2AkvJTXKQgZWHcNHYMd5NI/3FPSt2essGR5J3fAk6jdr3.pdf",
              "extraLocations": [],
              "authorNames": "Ramesh Lal (Auckland University of Technology), Tony Clear (Auckland University of Technology)",
              "abstract": "Agile software development has become increasingly common in software vendor organisations, and their impact on practices and roles is now extending beyond the project level across the entire organisation. In this study, we investigate how a major Australia-based multi-site global software vendor transitioned from a structured to a Scaled Agile approach. We demonstrate how practices and roles in a distributed software vendor evolved over time across the organisation in an on-going process of their global agile transformation. Through this elaboration, we identify three major agile transitions and the contribution of a scaled agile approach in the building of market driven capabilities. We theorised a relationship between increased dynamic capabilities of the firm and a scaled agile transition. Supporting our view, we noted that agile practices and roles across the organisation contributed as expected to improved internal process capability. More surprisingly, they were also found to increase our vendor's ability both to identify and take advantage of opportunities and to innovate in global product and service development and delivery.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Enhancing Product and Service Capability Through Scaling Agility in a Global Software Vendor Environment 1521143051630 Ramesh Lal Auckland University of Technology Ramesh.lal@aut.ac.zn Tony Clear Auckland University of Technology tony.clear@aut.ac.nz Global Software Engineering Research Global Software Engineering Practice Dynamic Capabilities Scaled Agile Methods Software Vendors Product and Service Innovation. Agile software development has become increasingly common in software vendor organisations, and their impact on practices and roles is now extending beyond the project level across the entire organisation. In this study, we investigate how a major Australia-based multi-site global software vendor transitioned from a structured to a Scaled Agile approach. We demonstrate how practices and roles in a distributed software vendor evolved over time across the organisation in an on-going process of their global agile transformation. Through this elaboration, we identify three major agile transitions and the contribution of a scaled agile approach in the building of market driven capabilities. We theorised a relationship between increased dynamic capabilities of the firm and a scaled agile transition. Supporting our view, we noted that agile practices and roles across the organisation contributed as expected to improved internal process capability. More surprisingly, they were also found to increase our vendor's ability both to identify and take advantage of opportunities and to innovate in global product and service development and delivery.",
              "pageNumber": 59,
              "isPageNumberRoman": false
            },
            {
              "id": "6mtRdERn76ILkxugD2Pl9S",
              "type": "authorPaper",
              "text": "Managing Software Products in a Global Context",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2zqtweKqvE0uqWxVsrtdsx/4WdIRvDTtKfi1Uhg4WXiLF.pdf",
              "extraLocations": [],
              "authorNames": "Christof Ebert (Vector Consulting Services)",
              "abstract": "Follow-the-sun has evolved to follow-the-talent. Managing a product thus has a true global perspective. Products increasingly are developed in virtual teams using agile set-up and gig economy practices. The success of a product or service depends on its product management. Recently software product management has moved closer to software development in its understanding that market decisions have technical impact, and vice versa. This research provides results from an empirical field study with twenty companies on software product management in its global context. The empirical study provides concrete practices to fertilize and evolve software product management in global teams and thus the success of products in terms of predictability, quality and efficiency. We show that with institutionalization of a consistent and empowered product management role, global product development benefits in terms of schedule, quality and duration.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Managing Software Products in a Global Context 1521531319769 Christof Ebert Vector Consulting Services christofebert@ieee.org Software product management follow-the-talent virtual teams best industry practices agile development distributed teams global software engineering Follow-the-sun has evolved to follow-the-talent. Managing a product thus has a true global perspective. Products increasingly are developed in virtual teams using agile set-up and gig economy practices. The success of a product or service depends on its product management. Recently software product management has moved closer to software development in its understanding that market decisions have technical impact, and vice versa. This research provides results from an empirical field study with twenty companies on software product management in its global context. The empirical study provides concrete practices to fertilize and evolve software product management in global teams and thus the success of products in terms of predictability, quality and efficiency. We show that with institutionalization of a consistent and empowered product management role, global product development benefits in terms of schedule, quality and duration.",
              "pageNumber": 69,
              "isPageNumberRoman": false
            },
            {
              "id": "5tNzqq6nInmShvWMuwlpxs",
              "type": "authorPaper",
              "text": "Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7dRCgZJa0qQzjnfakn7xTR/1nkf6ibKCJ1LNrtT8XLLjR.pdf",
              "extraLocations": [],
              "authorNames": "Rajeev Kumar Gupta (Siemens Healthcare Private Limited), Shivani Jain (Siemens Healthcare Private Limited), Bharat Singh (Siemens Healthcare Private Limited)",
              "abstract": "This paper presents our experiences with a 120-person matrixed software engineering product team, spread across three countries that successfully scaled their adoption of Scrum. The product is a legacy, mission-critical software system that conforms to stringent healthcare regulatory standards. We are practicing Obeya wall that brings solution to our large team communication challenges and OYA day that helps solving challenges in fostering innovation, and learning culture and collaboration. We also are describing our experience of defining focus areas of project manager and product manager. These roles are not defined in scrum guide, however, is relevant in our experience in scaled up distributed scrum environment. The authors bring our experiences as a Scrum Master, Product Owner and an architect who have been integral part of the journey and establishing these practices over several years. These practices have helped in scaling as well as stabilizing the team to an extent where each product version is meeting milestones on time and taking strong steps towards shorter release cycles of quarterly releases. This paper also summaries our lessons learned, and recommendations.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization 1521455414175 Rajeev Kumar Gupta Siemens Healthcare Private Limited rajeevkumar.gupta@siemens-healthineers.com Shivani Jain Siemens Healthcare Private Limited shivani.jain@siemens-healthineers.com Bharat Singh Siemens Healthcare Private Limited bharat.singh@siemens-healthineers.com Obeya Wall OYA Day Matrix Organization product owner product manager scrum master project manager roles This paper presents our experiences with a 120-person matrixed software engineering product team, spread across three countries that successfully scaled their adoption of Scrum. The product is a legacy, mission-critical software system that conforms to stringent healthcare regulatory standards. We are practicing Obeya wall that brings solution to our large team communication challenges and OYA day that helps solving challenges in fostering innovation, and learning culture and collaboration. We also are describing our experience of defining focus areas of project manager and product manager. These roles are not defined in scrum guide, however, is relevant in our experience in scaled up distributed scrum environment. The authors bring our experiences as a Scrum Master, Product Owner and an architect who have been integral part of the journey and establishing these practices over several years. These practices have helped in scaling as well as stabilizing the team to an extent where each product version is meeting milestones on time and taking strong steps towards shorter release cycles of quarterly releases. This paper also summaries our lessons learned, and recommendations.",
              "pageNumber": 77,
              "isPageNumberRoman": false
            },
            {
              "id": "2vWSF4fzprMLFn4IYrhHRc",
              "type": "authorPaper",
              "text": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf",
              "extraLocations": [],
              "authorNames": "Julian M. Bass (University of Salford), Beecham Sarah (Lero - The Irish Software Research Centre), Mohammed Abdur Razzak (Mohammed Abdur Razzak), John Noll (University of East London)",
              "abstract": "High staff turnover has a negative impact on software development productivity and product quality. Further, offshore outsourcing has a widely held reputation for particularly poor employee retention. Interestingly, in-house sites (regardless of location) do not suffer such high levels of staff turnover. We want to understand the factors affecting employee retention in-house and offshore outsourced settings, to better understand the potential impact of staff turnover on global software development. We employed a mixed-method approach comprising two empirical case studies in industry involving 62 practitioners at three global companies conducting in-house and offshore outsourced software development. We collected practitioner perceptions of causal factors for employee retention and performed a cross-case analysis to triangulate our findings. Practitioners cited employment policies, work-life balance, workplace innovation, product quality, alignment of offshore work hours with onshore, long working hours and adverse impact on health as factors affecting staff retention. In-house offshore have more family friendly employment policies. In the outsourcing sector, the focus on customer satisfaction sometimes leads to less attractive work patterns. Offshore outsourcing service providers could improve development team member retention by improving work-life balance and adopting family friendly employment policies.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing 1521473280695 Julian M. Bass University of Salford j.bass@salford.ac.uk Beecham Sarah Lero - The Irish Software Research Centre sarah.beecham@lero.ie Mohammed Abdur Razzak Mohammed Abdur Razzak abdur.razzak@lero.ie John Noll University of East London j.noll@uel.ac.uk In-house Offshore Offshore Outsourced SME Large Enterprise Global Software Development GSD Employee Retention Employee Turnover Motivation Self-Determination Theory High staff turnover has a negative impact on software development productivity and product quality. Further, offshore outsourcing has a widely held reputation for particularly poor employee retention. Interestingly, in-house sites (regardless of location) do not suffer such high levels of staff turnover. We want to understand the factors affecting employee retention in-house and offshore outsourced settings, to better understand the potential impact of staff turnover on global software development. We employed a mixed-method approach comprising two empirical case studies in industry involving 62 practitioners at three global companies conducting in-house and offshore outsourced software development. We collected practitioner perceptions of causal factors for employee retention and performed a cross-case analysis to triangulate our findings. Practitioners cited employment policies, work-life balance, workplace innovation, product quality, alignment of offshore work hours with onshore, long working hours and adverse impact on health as factors affecting staff retention. In-house offshore have more family friendly employment policies. In the outsourcing sector, the focus on customer satisfaction sometimes leads to less attractive work patterns. Offshore outsourcing service providers could improve development team member retention by improving work-life balance and adopting family friendly employment policies.",
              "pageNumber": 82,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "ICGSE 2018 - Distinguished Papers",
          "lineItems": [
            {
              "id": "1qxT0A4nDGh8gyGQLQVmeP",
              "type": "authorPaper",
              "text": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf",
              "extraLocations": [],
              "authorNames": "Fabio Calefato (University of Bari), Giuseppe Iaffaldano (University of Bari), Filippo Lanubile (University of Bari), Bogdan Vasilescu (Carnegie Mellon University)",
              "abstract": "Large-scale distributed projects are typically the results of collective efforts performed by multiple developers, each one having a different personality. The study of developers' personalities has the potential of explaining their' behavior in various contexts. For example, the propensity to trust others, a critical factor to the success of global software engineering – has been found to influence positively the result of code reviews in distributed projects. In this paper, we perform a quantitative analysis of developers' personality in open source software projects, intended as an extreme form of distributed projects in which no single organization controls the project. We mine ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects. We find that developers become over time more conscientious, agreeable, and neurotic. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open and more agreeable developers are more likely to become project contributors.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem 1521020547654 Fabio Calefato University of Bari fabio.calefato@uniba.it Giuseppe Iaffaldano University of Bari giuseppe.iaffaldano@uniba.it Filippo Lanubile University of Bari filippo.lanubile@uniba.it Bogdan Vasilescu Carnegie Mellon University vasilescu@cmu.edu Personality traits large-scale distributed projects team-building social and human aspects open source software apache ecosystems Large-scale distributed projects are typically the results of collective efforts performed by multiple developers, each one having a different personality. The study of developers' personalities has the potential of explaining their' behavior in various contexts. For example, the propensity to trust others, a critical factor to the success of global software engineering – has been found to influence positively the result of code reviews in distributed projects. In this paper, we perform a quantitative analysis of developers' personality in open source software projects, intended as an extreme form of distributed projects in which no single organization controls the project. We mine ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects. We find that developers become over time more conscientious, agreeable, and neurotic. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open and more agreeable developers are more likely to become project contributors.",
              "pageNumber": 92,
              "isPageNumberRoman": false
            },
            {
              "id": "2921jHPtBQgmhNoy1DAdO4",
              "type": "authorPaper",
              "text": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf",
              "extraLocations": [],
              "authorNames": "Pernille Lous (IT University of Copenhagen), Paolo Tell (IT University of Copenhagen), Christian Bo Michelsen (IT University of Copenhagen), Yvonne Dittrich (IT University of Copenhagen), Marco Kuhrmann (Clausthal University of Technology), Allan Ebdrup (Debitoor)",
              "abstract": "Even though agile methods have been flourishing in the last decades, their implementation in (globally) distributed arrangements still present hard challenges. Due to this tension, practices are either modified or added to compensate with the additional control required by the setup. In this paper, we present a case study about a company that managed to incrementally design a process that does not compromise the foundations of the agile philosophy by embracing the characteristics of distributed development. We show how a virtual work environment has been crafted by continuously improving practices and carefully selecting technologies to allow each team member to fully participate regardless of the actual physical location. Aware of the single nature limitation of the reported case, we present extensive information to frame the context allowing meaningful comparisons by researchers and providing concrete examples for practitioners.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Virtual by Design: How a Work Environment can Support Agile Distributed Software Development 1521484902739 Pernille Lous IT University of Copenhagen pelo@itu.dk Paolo Tell IT University of Copenhagen pate@itu.dk Christian Bo Michelsen IT University of Copenhagen chmi@itu.dk Yvonne Dittrich IT University of Copenhagen ydi@itu.dk Marco Kuhrmann Clausthal University of Technology kuhrmann@acm.org Allan Ebdrup Debitoor aeb@debitoor.com Agile development Global software engineering Virtual teams Even though agile methods have been flourishing in the last decades, their implementation in (globally) distributed arrangements still present hard challenges. Due to this tension, practices are either modified or added to compensate with the additional control required by the setup. In this paper, we present a case study about a company that managed to incrementally design a process that does not compromise the foundations of the agile philosophy by embracing the characteristics of distributed development. We show how a virtual work environment has been crafted by continuously improving practices and carefully selecting technologies to allow each team member to fully participate regardless of the actual physical location. Aware of the single nature limitation of the reported case, we present extensive information to frame the context allowing meaningful comparisons by researchers and providing concrete examples for practitioners.",
              "pageNumber": 102,
              "isPageNumberRoman": false
            },
            {
              "id": "4YfFHWNPYr6Cv7kPaZ5i1p",
              "type": "authorPaper",
              "text": "Team Resilience in Distributed Student Projects",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/9xrYvdkZUJ4SsOoN7AUk4/5gWaxwm8gDtppv8ZvECrTV.pdf",
              "extraLocations": [],
              "authorNames": "Igor Cavrak (University of Zagreb), Ivana Bosnin (University of Zagreb)",
              "abstract": "Global software engineering education is steadily advancing to fully prepare students for future challenges at work, by providing opportunities for real-life experiences, especially in distributed project-based courses. These international student teams are, as in real companies, susceptible to various risks stemming from different internal and external factors, being the sources of stress and impacting team resilience. In this paper, we focus on studying the resilience of teams affected by two adversities specific to project team composition and project dynamics. The first, internal one, is the teams' ability to compensate for the missing efforts of its non-contributing members in a distributed project environment. The second, external, is the ability to cope with changes of customer requirements, which can be real, or just perceived by the team members. Based on the empirical data, acquired from a number of Distributed Software Development course instances, we identify different sub-factors of these two risks and analyze the correlations of these elements to the final project evaluations, more specifically on the evaluation of both the final product and project process.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Team Resilience in Distributed Student Projects 1521478690906 Igor Cavrak University of Zagreb igor.cavrak@fer.hr Ivana Bosnin University of Zagreb ivana.bosnic@fer.hr Software engineering education global software engineering distributed software development team resilience requirements volatility Global software engineering education is steadily advancing to fully prepare students for future challenges at work, by providing opportunities for real-life experiences, especially in distributed project-based courses. These international student teams are, as in real companies, susceptible to various risks stemming from different internal and external factors, being the sources of stress and impacting team resilience. In this paper, we focus on studying the resilience of teams affected by two adversities specific to project team composition and project dynamics. The first, internal one, is the teams' ability to compensate for the missing efforts of its non-contributing members in a distributed project environment. The second, external, is the ability to cope with changes of customer requirements, which can be real, or just perceived by the team members. Based on the empirical data, acquired from a number of Distributed Software Development course instances, we identify different sub-factors of these two risks and analyze the correlations of these elements to the final project evaluations, more specifically on the evaluation of both the final product and project process.",
              "pageNumber": 112,
              "isPageNumberRoman": false
            },
            {
              "id": "639RgrZz3hgUUx6oYyRynG",
              "type": "authorPaper",
              "text": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf",
              "extraLocations": [],
              "authorNames": "Mohammad Abdur Razzak (Lero–the Irish Software Research Centre), Ita Richardson (Lero–the Irish Software Research Centre), John Noll (University of East London), Clodagh Nic Canna (Ocuco Ltd), Sarah Beecham (Lero–the Irish Software Research Centre)",
              "abstract": "The adoption, scaling and tailoring of agile methods depends on several factors, such as the size of the software development organization, business goals, and operative model. The Scaled Agile Framework (SAFe) was developed to support organizations in scaling agile practices across the enterprise. Large multi-national enterprises report that adoption of SAFe led to significant productivity and quality gains. However, whether these benefits translate to small to medium sized enterprises (SMEs) is unknown. As such, in this study we ask: To what extent can SAFe practices be implemented in a global SME? We administrated three surveys to members of the development organization of an Irish SME, to identify and evaluate the adoption rate of SAFe practices in the Global environment. We found teams and program level personnel are transitioning well towards SAFe. But the Portfolio level personnel appear not to have, as yet, adopted many SAFe practices. In an SME context it might not be necessary for Portfolio level members to fully adopt SAFe providing they are supportive of their teams. The SAFe self-assessment highlighted where training is required, to improve the vertical communication between teams, program level and upper management.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment 1521543653409 Mohammad Abdur Razzak Lero–the Irish Software Research Centre abdur.razzak@lero.ie Ita Richardson Lero–the Irish Software Research Centre ita.richardson@lero.ie John Noll University of East London j.noll@uel.ac.uk Clodagh Nic Canna Ocuco Ltd Clodagh.NicCanna@ocuco.com Sarah Beecham Lero–the Irish Software Research Centre sarah.beecham@lero.ie Global Software Development Scaling agile Scaled Agile Framework Team level Program level Portfolio level The adoption, scaling and tailoring of agile methods depends on several factors, such as the size of the software development organization, business goals, and operative model. The Scaled Agile Framework (SAFe) was developed to support organizations in scaling agile practices across the enterprise. Large multi-national enterprises report that adoption of SAFe led to significant productivity and quality gains. However, whether these benefits translate to small to medium sized enterprises (SMEs) is unknown. As such, in this study we ask: To what extent can SAFe practices be implemented in a global SME? We administrated three surveys to members of the development organization of an Irish SME, to identify and evaluate the adoption rate of SAFe practices in the Global environment. We found teams and program level personnel are transitioning well towards SAFe. But the Portfolio level personnel appear not to have, as yet, adopted many SAFe practices. In an SME context it might not be necessary for Portfolio level members to fully adopt SAFe providing they are supportive of their teams. The SAFe self-assessment highlighted where training is required, to improve the vertical communication between teams, program level and upper management.",
              "pageNumber": 121,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Poster Exhibition",
          "lineItems": [
            {
              "id": "2PEvZH9nx2hqlPjeeTCLiW",
              "type": "authorPaper",
              "text": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf",
              "extraLocations": [],
              "authorNames": "Kapil Singi (Accenture Labs), Pradeepkumar D S (Accenture Labs), Vikrant Kaulgud (Accenture Labs), Sanjay Podder (Accenture Labs)",
              "abstract": "In this extended abstract, we propose a conceptual framework that leverages distributed ledger technology and smart contracts to create a decentralized system to capture the occurrence of interesting development activities (e.g., a development build) and associated contextual data, and automatically audit and evaluate compliance to governance policies. Our hypothesis is that such a framework will facilitate easier sharing of information across all participants of a distributed development team, compliance evaluation and early mitigation actions, leading to greater visibility and compliance. Currently, the proof of concept we are working on is focused on sharing and compliance evaluation of the open-source components used in software development.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Compliance Adherence in Distributed Software Delivery: A Blockchain Approach 1521442264343 Kapil Singi Accenture Labs kapil.singi@accenture.com Pradeepkumar D S Accenture Labs p.duraisamy@accenture.com Vikrant Kaulgud Accenture Labs vikrant.kaulgud@accenture.com Sanjay Podder Accenture Labs sanjay.podder@accenture.com Distributed Teams Compliance Evaluation Regulations Open-Source Distributed Ledger Technology Blockchain Smart Contracts In this extended abstract, we propose a conceptual framework that leverages distributed ledger technology and smart contracts to create a decentralized system to capture the occurrence of interesting development activities (e.g., a development build) and associated contextual data, and automatically audit and evaluate compliance to governance policies. Our hypothesis is that such a framework will facilitate easier sharing of information across all participants of a distributed development team, compliance evaluation and early mitigation actions, leading to greater visibility and compliance. Currently, the proof of concept we are working on is focused on sharing and compliance evaluation of the open-source components used in software development.",
              "pageNumber": 131,
              "isPageNumberRoman": false
            },
            {
              "id": "4hh674OFeSsxqKZcgl26Ax",
              "type": "authorPaper",
              "text": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf",
              "extraLocations": [],
              "authorNames": "Leonardo Sanches dos Santos (Leanwork Tecnologia), Alexandre L'Erario (Federal University of Technology - Paraná), Tiago Pagotto (Federal University of Technology - Paraná), Joao Ricardo Moreno Camilo (Federal University of Technology - Paraná), Fabricio Sousa Oliveira (Federal University of Technology), Jose Augusto Fabri (Federal University of Technology - Paraná)",
              "abstract": "It is a usual practice for software companies to develop their products using Distributed Software Development (DSD). Moreover, many times the software companies work with multidisciplinary teams to satisfy their customer demands. These multidisciplinary teams are composed of IT professionals and professionals from multiple areas not related to software development or IT. There are several problems associated with communication and information dissemination that severely compromise the software product development. This work presents a case study of a company that uses DSD. The Scrum-based process shown in this work promotes a communication improvement between the client company functional areas.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study 1521303784169 Leonardo Sanches dos Santos Leanwork Tecnologia leonardo@leanwork.com.br Alexandre L'Erario Federal University of Technology - Paraná alerario@utfpr.edu.br Tiago Pagotto Federal University of Technology - Paraná pagotto@alunos.utfpr.edu.br Joao Ricardo Moreno Camilo Federal University of Technology - Paraná jrmcamilo91@gmail.com Fabricio Sousa Oliveira Federal University of Technology jrmcamilo91@gmail.com Jose Augusto Fabri Federal University of Technology - Paraná fabri@utfpr.edu.br Scrum-based Process Distributed Software Development Multidisciplinary teams Communication improvement It is a usual practice for software companies to develop their products using Distributed Software Development (DSD). Moreover, many times the software companies work with multidisciplinary teams to satisfy their customer demands. These multidisciplinary teams are composed of IT professionals and professionals from multiple areas not related to software development or IT. There are several problems associated with communication and information dissemination that severely compromise the software product development. This work presents a case study of a company that uses DSD. The Scrum-based process shown in this work promotes a communication improvement between the client company functional areas.",
              "pageNumber": 133,
              "isPageNumberRoman": false
            },
            {
              "id": "6YLo7SlrIlbB4fy41xG0kb",
              "type": "authorPaper",
              "text": "An Empirical Study on Scrum Application Patterns in Distributed Teams",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2TpvbYSC9eItPQkIddIzbx/5gFnDv397NrGfCMLLlq9GU.pdf",
              "extraLocations": [],
              "authorNames": "Ibrahim Seckin (Siemens Corporate Technology), Tolga Ovatman (Istanbul Technical University)",
              "abstract": "In this study we dig for scrum application practices in distributed offshore development teams of a multinational company which has in-source offshore development centers across the world. Main location of the research is the Turkey center of the company.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 An Empirical Study on Scrum Application Patterns in Distributed Teams 1522049634088 Ibrahim Seckin Siemens Corporate Technology ibrahim.seckin@siemens.com Tolga Ovatman Istanbul Technical University ovatman@itu.edu.tr Distributed software development agile methodologies distributed scrum teams. In this study we dig for scrum application practices in distributed offshore development teams of a multinational company which has in-source offshore development centers across the world. Main location of the research is the Turkey center of the company.",
              "pageNumber": 135,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Doctoral Symposium",
          "lineItems": [
            {
              "id": "2RYmCmLNjpHcpQVEoNCqEt",
              "type": "authorPaper",
              "text": "A Preliminary Structure of Software Security Assurance Model",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5oOYMWBXW15p6w1SRRXk7q/7eeFtGiHr6b6ip4NQ1BoaY.pdf",
              "extraLocations": [],
              "authorNames": "Rafiq Ahmad Khan (University of Malakand), Siffat Ullah Khan (University of Malakand)",
              "abstract": "Software security is an important aspect that needs to be considered during the entire software development life cycle (SDLC). Integrating software security at each phase of SDLC has become an urgent need. To address software security, various approaches, techniques, methods, practices, and models have been proposed and developed. However, recent research shows that many software development methodologies do not explicitly include methods for incorporating software security during the development of software as it evolves from requirements engineering to its final disposal. The primary objective of this research is to study the state-of-the-art of security in the context of SDLC by following systematic mapping study (SMS). In the second phase, we will identify, through systematic literature review (SLR) and empirical study in the industry, the software security contributions, security challenges and their practices for global software development (GSD) vendors. The ultimate aim is to develop a Software Security Assurance Model (SSAM) to assist GSD vendor organisations in measuring their readiness towards the development of secure software.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 A Preliminary Structure of Software Security Assurance Model 1521046986663 Rafiq Ahmad Khan University of Malakand rafiqahmadk@gmail.com Siffat Ullah Khan University of Malakand siffatullah@uom.edu.pk Software Security Software Development Life Cycle Global Software Development Vendors Systematic mapping study Systematic literature review Empirical Study Case study Software security is an important aspect that needs to be considered during the entire software development life cycle (SDLC). Integrating software security at each phase of SDLC has become an urgent need. To address software security, various approaches, techniques, methods, practices, and models have been proposed and developed. However, recent research shows that many software development methodologies do not explicitly include methods for incorporating software security during the development of software as it evolves from requirements engineering to its final disposal. The primary objective of this research is to study the state-of-the-art of security in the context of SDLC by following systematic mapping study (SMS). In the second phase, we will identify, through systematic literature review (SLR) and empirical study in the industry, the software security contributions, security challenges and their practices for global software development (GSD) vendors. The ultimate aim is to develop a Software Security Assurance Model (SSAM) to assist GSD vendor organisations in measuring their readiness towards the development of secure software.",
              "pageNumber": 137,
              "isPageNumberRoman": false
            },
            {
              "id": "2sL22TjTWbNjggGWCaddRn",
              "type": "authorPaper",
              "text": "Scaling Agile Software Development to Large and Globally Distributed Large-Scale Organizations",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3D3xE4iPeZeBajA04k0edm/5Is3jBkc2I8n7je7NZlDbY.pdf",
              "extraLocations": [],
              "authorNames": "Abheeshta Putta (Aalto University)",
              "abstract": "There has been a tremendous increase in the rate of agile method adoption across large and globally distributed large organizations. Despite of several challenges, organizations have shown profound interest due to the potential benefits of agile at small scale. Several scaling frameworks and scaling practices have been proposed by the consultants and practitioners to support globally distributed large scale agile transformations. The present research has 3 dimensions: (i) scaling practices (ii) scaling frameworks (iii) enterprise agile. Various research methods have been adopted in the study to address the these dimensions. This would help agile practitioners and consultants to reflect on the scaling approaches and help them during the agile transformation process across large and globally distributed large organizations",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Scaling Agile Software Development to Large and Globally Distributed Large-Scale Organizations 1521487362039 Abheeshta Putta Aalto University abheeshta.putta@aalto.fi Large scale distributed large scale scaling frameworks enterprise agile There has been a tremendous increase in the rate of agile method adoption across large and globally distributed large organizations. Despite of several challenges, organizations have shown profound interest due to the potential benefits of agile at small scale. Several scaling frameworks and scaling practices have been proposed by the consultants and practitioners to support globally distributed large scale agile transformations. The present research has 3 dimensions: (i) scaling practices (ii) scaling frameworks (iii) enterprise agile. Various research methods have been adopted in the study to address the these dimensions. This would help agile practitioners and consultants to reflect on the scaling approaches and help them during the agile transformation process across large and globally distributed large organizations",
              "pageNumber": 141,
              "isPageNumberRoman": false
            },
            {
              "id": "342bZe9TYDVHVqkqmbJMmk",
              "type": "authorPaper",
              "text": "Toward a Theory of Communication in Distributed Software Development Teams: A Research Proposal",
              "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1Cd8DEN1bIr86zE4IZtUYV/R27kuC4a4wLirHpEJx6Ut.pdf",
              "extraLocations": [],
              "authorNames": "Nelson Leitão Júnior (Federal University of Pernambuco)",
              "abstract": "Context: Communication plays an essential role in the professional software development, as it stands as one of the pillars of this collaborative activity. Communication is also one of the leading challenges in Distributed Software Development (DSD) teams, which may be hindered by this business model. Still, little is known about how communication occurs in this specific context. Objective: This work aims to present a doctoral research proposal for studying communication in DSD teams to propose a new theory, and thereby, establish a theoretical base for future studies. Additionally, to stimulate discussions about the relevance of this proposal. Method: I propose Grounded Theory research. Results: To help in the consolidation of this study gap, I present the preliminary results of a non-extensive literature review. Conclusions: Based on preliminary findings, I conclude that a new, and specific communication theory in DSD may have its place in literature.",
              "searchText": "2018 ACM/IEEE 13th International Conference on Global Software Engineering ICGSE 2018 Toward a Theory of Communication in Distributed Software Development Teams: A Research Proposal 1521234563096 Nelson Leitão Júnior Federal University of Pernambuco ngslj@cin.ufpe.br Communication Distributed Software Development Project Management Context: Communication plays an essential role in the professional software development, as it stands as one of the pillars of this collaborative activity. Communication is also one of the leading challenges in Distributed Software Development (DSD) teams, which may be hindered by this business model. Still, little is known about how communication occurs in this specific context. Objective: This work aims to present a doctoral research proposal for studying communication in DSD teams to propose a new theory, and thereby, establish a theoretical base for future studies. Additionally, to stimulate discussions about the relevance of this proposal. Method: I propose Grounded Theory research. Results: To help in the consolidation of this study gap, I present the preliminary results of a non-extensive literature review. Conclusions: Based on preliminary findings, I conclude that a new, and specific communication theory in DSD may have its place in literature.",
              "pageNumber": 145,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE 26th International Conference on Program Comprehension",
      "acronym": "ICPC",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4SQvN77O1SUVl3bSwHvoql/1amke3kcf2mOh7jc3akths.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7eO9eXd38QJMIdJxnx7BYs/yAGVoh2qKwT6RGqTLhH8S.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7nKGhmsE0T5Dmf7dsZ18XM/1ocoYHDzoowrrOVXe2ESFs.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5h3D8fGGpvl2n23oL5xoSk/5YQNerCfqvhJORZckqn3JB.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/SuQtgWjTrlD3W4O8gWhKD/3w0gxGgyGmck6k1bSgMYXb.pdf",
          "extraLocations": [],
          "pageNumber": 11,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from ICPC 2018 Chairs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3ccvt7qtIcn5iln3D3mlMZ/4EEWwNOCdWBF91tEw8bjIN.pdf",
          "extraLocations": [],
          "pageNumber": 14,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/42YtQZeW35Nqr67y0EkymU/1ZExrEO1kRsxo6lYx7JSPJ.pdf",
          "extraLocations": [],
          "pageNumber": 16,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Technical Research Track Program Committee",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3yGJoRlZtsnrNaXbp9AMSX/3MpXeAbQyaNHxYy6fNYtMR.pdf",
          "extraLocations": [],
          "pageNumber": 18,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Early Research Achievement Track Program Committee",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7rQMdRBsQpF5kR53s1QJCy/7sATnj7CLGwEidUlzct2G6.pdf",
          "extraLocations": [],
          "pageNumber": 21,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Industry Track Program Committee",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6EHPNHLukkA4jB6qZBisYw/7ooomv3rC1bWjFc6Qhve3E.pdf",
          "extraLocations": [],
          "pageNumber": 22,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Tool Demonstration Track Program Committee",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/72syvgIP6hijIrM86xyepd/43ETnG2bZViKLFgoj1YkpD.pdf",
          "extraLocations": [],
          "pageNumber": 23,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "Additional Reviewers",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5b36E62EMJJ9oZO07PRJlY/4tw7jjQR0lr0Wc1SGEd509.pdf",
          "extraLocations": [],
          "pageNumber": 24,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1Riacl8caKsUWGnZm5vaTT/5RYOUtiXgTOfeHX1zBqESg.pdf",
          "extraLocations": [],
          "pageNumber": 25,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1zkNR915CZF71DJ34paHN6/3QadlBrcLzBmylH52r3uZg.pdf",
          "extraLocations": [],
          "pageNumber": 397,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5hKseLLcKHG8ngebr1LDq/016Bu6srywEBCEjCoubwwy.pdf",
          "extraLocations": [],
          "pageNumber": 400,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Keynote",
          "lineItems": [
            {
              "id": "5qCKp0jgpfFaKwcQ51Egol",
              "type": "authorPaper",
              "text": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7nXU0IkIFHGveFQPA0yuZv/zrtUB2xMi9g56p4CkTDY2.pdf",
              "extraLocations": [],
              "authorNames": "Andrew Ko (University of Washington)",
              "abstract": "The program comprehension and mining software repository communities are, in practice, two separate research endeavors. One is concerned with what's happening in a developer's mind, while the other is concerned with what's happening in a team. And yet, implicit in these fields is a common goal to make better software and the common approach of influencing developer decisions. In this keynote, I provide several examples of this overlap, suggesting several grand challenges in comprehension and mining.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining 1520983844459 Andrew Ko University of Washington ajko@uw.edu Mining software repositories program comprehension The program comprehension and mining software repository communities are, in practice, two separate research endeavors. One is concerned with what's happening in a developer's mind, while the other is concerned with what's happening in a team. And yet, implicit in these fields is a common goal to make better software and the common approach of influencing developer decisions. In this keynote, I provide several examples of this overlap, suggesting several grand challenges in comprehension and mining.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Vision Keynote",
          "lineItems": [
            {
              "id": "1tZRuwdb6QzEZwx7nUjVfY",
              "type": "authorPaper",
              "text": "Sensing and Supporting Software Developers' Focus",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/425jFDIu1dUo8PziPBl09U/2MJIh8Up6F6RR6jTDsv20f.pdf",
              "extraLocations": [],
              "authorNames": "Manuela Züger (University of Zurich), Thomas Fritz (University of Zurich)",
              "abstract": "Software developers regularly have to focus in order to successfully perform their work. At the same time, developers experience many disruptions to their focus, especially in today's highly demanding, collaborative and open office work environments. When these disruptions happen during tasks that require a lot of focus, such as comprehending a difficult piece of source code, they can be very costly, causing a decrease in performance and quality. By sensing how focused a developer is, we might be able to reduce the cost of such disruptions. In our previous work, we investigated the use of biometric and computer interaction sensors to sense interruptibility - the availability for interruptions - and developed the FlowLight approach - a traffic light like LED indicator of a person's interruptibility - to reduce the cost of external in-person interruptions, a particularly expensive kind of disruption. Our results demonstrate the potential of accurately sensing interruptibility in the field and of reducing external interruption cost to increase focus and productivity of knowledge workers.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Sensing and Supporting Software Developers' Focus 1521627439157 Manuela Züger University of Zurich zueger@ifi.uzh.ch Thomas Fritz University of Zurich fritz@ifi.uzh.ch focus interruptions sensors software developers Software developers regularly have to focus in order to successfully perform their work. At the same time, developers experience many disruptions to their focus, especially in today's highly demanding, collaborative and open office work environments. When these disruptions happen during tasks that require a lot of focus, such as comprehending a difficult piece of source code, they can be very costly, causing a decrease in performance and quality. By sensing how focused a developer is, we might be able to reduce the cost of such disruptions. In our previous work, we investigated the use of biometric and computer interaction sensors to sense interruptibility - the availability for interruptions - and developed the FlowLight approach - a traffic light like LED indicator of a person's interruptibility - to reduce the cost of external in-person interruptions, a particularly expensive kind of disruption. Our results demonstrate the potential of accurately sensing interruptibility in the field and of reducing external interruption cost to increase focus and productivity of knowledge workers.",
              "pageNumber": 2,
              "isPageNumberRoman": false
            },
            {
              "id": "gdkvWHCV3iBoGS7CkXD3u",
              "type": "authorPaper",
              "text": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf",
              "extraLocations": [],
              "authorNames": "Kevin Moran (College of William & Mary), Carlos Bernal-Cárdenas (College of William & Mary), Mario Linares-Vásquez (Universidad de los Andes), Denys Poshyvanyk (College of William & Mary)",
              "abstract": "Mobile devices and platforms have become an established target for modern software developers due to performant hardware and a large and growing user base numbering in the billions. Despite their popularity, the software development process for mobile apps comes with a set of unique, domain-specific challenges rooted in program comprehension. Many of these challenges stem from developer difficulties in reasoning about different representations of a program, a phenomenon we define as a \"language dichotomy\". In this paper, we reflect upon the various language dichotomies that contribute to open problems in program comprehension and development for mobile apps. Furthermore, to help guide the research community towards effective solutions for these problems, we provide a roadmap of directions for future work.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development 1521774468141 Kevin Moran College of William & Mary kpmoran@cs.wm.edu Carlos Bernal-Cárdenas College of William & Mary cebernal@cs.wm.edu Mario Linares-Vásquez Universidad de los Andes m.linaresv@uniandes.edu.co Denys Poshyvanyk College of William & Mary denys@cs.wm.edu Program Comprehension Mobile Android Natural Language Code Mobile devices and platforms have become an established target for modern software developers due to performant hardware and a large and growing user base numbering in the billions. Despite their popularity, the software development process for mobile apps comes with a set of unique, domain-specific challenges rooted in program comprehension. Many of these challenges stem from developer difficulties in reasoning about different representations of a program, a phenomenon we define as a \"language dichotomy\". In this paper, we reflect upon the various language dichotomies that contribute to open problems in program comprehension and development for mobile apps. Furthermore, to help guide the research community towards effective solutions for these problems, we provide a roadmap of directions for future work.",
              "pageNumber": 7,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Most Influential Paper Award",
          "lineItems": [
            {
              "id": "4dhfiYp9NEb6tbDFl9mkmU",
              "type": "authorPaper",
              "text": "Adventures in NICAD: A Ten-Year Retrospective",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3dyEgnWgi4SanttaR1D7Oq/2yxP0yLYjDnuU8PilT2tqu.pdf",
              "extraLocations": [],
              "authorNames": "Chanchal K. Roy (University of Saskatchewan), James R. Cordy (Queen's University)",
              "abstract": "Based on the simple, naive idea of text-line differencing of pretty-printed code, at ICPC 2008 we introduced NICAD, the first code clone detector explicitly aimed at finding intentional \"near-miss\" (Type 3) clones. Using the TXL parser to identify and pretty-print all instances of a code unit of interest (functions, blocks, etc.), NICAD provides several ways to pre-process the code before comparison, including flexible formatting, renaming, normalization and abstraction, making it suitable for finding all kinds of clones in a wide range of different applications. In this talk we will outline the journey from that initial naive idea to an efficient, scalable, flexible clone detection tool that handles more than ten different languages with high accuracy in both precision and recall. Along the way we will highlight our experience in tuning our initial prototype to production speed and scalability, we will review its application in a range of large-scale clone experiments, and describe its evolution to handle new domains such as subsystem clones in graphical models. Finally, we will close with new methods based on NICAD, and its lessons for clone detection research in the future.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Adventures in NICAD: A Ten-Year Retrospective 1521770265539 Chanchal K. Roy University of Saskatchewan chanchal.roy@usask.ca James R. Cordy Queen's University cordy@cs.queensu.ca Most influential paper clone detection NICAD Based on the simple, naive idea of text-line differencing of pretty-printed code, at ICPC 2008 we introduced NICAD, the first code clone detector explicitly aimed at finding intentional \"near-miss\" (Type 3) clones. Using the TXL parser to identify and pretty-print all instances of a code unit of interest (functions, blocks, etc.), NICAD provides several ways to pre-process the code before comparison, including flexible formatting, renaming, normalization and abstraction, making it suitable for finding all kinds of clones in a wide range of different applications. In this talk we will outline the journey from that initial naive idea to an efficient, scalable, flexible clone detection tool that handles more than ten different languages with high accuracy in both precision and recall. Along the way we will highlight our experience in tuning our initial prototype to production speed and scalability, we will review its application in a range of large-scale clone experiments, and describe its evolution to handle new domains such as subsystem clones in graphical models. Finally, we will close with new methods based on NICAD, and its lessons for clone detection research in the future.",
              "pageNumber": 19,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Research",
          "lineItems": [
            {
              "id": "5zpdhXtzMtXw4oO7HSkmsR",
              "type": "authorPaper",
              "text": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf",
              "extraLocations": [],
              "authorNames": "Alan Jaffe (Carnegie Mellon University), Jeremy Lacomis (Carnegie Mellon University), Edward J. Schwartz (Carnegie Mellon University Software Engineering Institute), Claire Le Goues (Carnegie Mellon University), Bogdan Vasilescu (Carnegie Mellon University)",
              "abstract": "When code is compiled, information is lost, including some of the structure of the original source code as well as local identifier names. Existing decompilers can reconstruct much of the original source code, but typically use meaningless placeholder variables for identifier names. Using variable names which are more natural in the given context can make the code much easier to interpret, despite the fact that variable names have no effect on the execution of the program. In theory, it is impossible to recover the original identifier names since that information has been lost. However, most code is natural: it is highly repetitive and predictable based on the context. In this paper we propose a technique that assigns variables meaningful names by taking advantage of this naturalness property. We consider decompiler output to be a noisy distortion of the original source code, where the original source code is transformed into the decompiler output. Using this noisy channel model, we apply standard statistical machine translation approaches to choose natural identifiers, combining a translation model trained on a parallel corpus with a language model trained on unmodified C code. We generate a large parallel corpus from 1.2 TB of C source code obtained from GitHub. Under the most conservative assumptions, our technique is still able to recover the original variable names up to 16.2% of the time, which represents a lower bound for performance.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Meaningful Variable Names for Decompiled Code: A Machine Translation Approach 1521495023413 Alan Jaffe Carnegie Mellon University apjaffe@andrew.cmu.edu Jeremy Lacomis Carnegie Mellon University jlacomis@cmu.edu Edward J. Schwartz Carnegie Mellon University Software Engineering Institute eschwartz@cert.org Claire Le Goues Carnegie Mellon University clegoues@cs.cmu.edu Bogdan Vasilescu Carnegie Mellon University vasilescu@cmu.edu Decompilation Understandability Statistical Machine Translation Renaming Identifiers When code is compiled, information is lost, including some of the structure of the original source code as well as local identifier names. Existing decompilers can reconstruct much of the original source code, but typically use meaningless placeholder variables for identifier names. Using variable names which are more natural in the given context can make the code much easier to interpret, despite the fact that variable names have no effect on the execution of the program. In theory, it is impossible to recover the original identifier names since that information has been lost. However, most code is natural: it is highly repetitive and predictable based on the context. In this paper we propose a technique that assigns variables meaningful names by taking advantage of this naturalness property. We consider decompiler output to be a noisy distortion of the original source code, where the original source code is transformed into the decompiler output. Using this noisy channel model, we apply standard statistical machine translation approaches to choose natural identifiers, combining a translation model trained on a parallel corpus with a language model trained on unmodified C code. We generate a large parallel corpus from 1.2 TB of C source code obtained from GitHub. Under the most conservative assumptions, our technique is still able to recover the original variable names up to 16.2% of the time, which represents a lower bound for performance.",
              "pageNumber": 20,
              "isPageNumberRoman": false
            },
            {
              "id": "6kPuh1Thknzx0WZtOvs2Me",
              "type": "authorPaper",
              "text": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf",
              "extraLocations": [],
              "authorNames": "Andrea Schankin (Karlsruhe Institute of Technology), Annika Berger (Karlsruhe Institute of Technology), Daniel V. Holt (Heidelberg University), Johannes C. Hofmeister (University of Passau), Till Riedel (Karlsruhe Institute of Technology), Michael Beigl (Karlsruhe Institute of Technology)",
              "abstract": "Reading and understanding source code is a major task in software development. Code comprehension depends on the quality of code, which is impacted by code structure and identifier naming. In this paper we empirically investigated whether longer but more descriptive identifier names improve code comprehension compared to short names, as they represent useful information in more detail. In a web-based study 88 Java developers were asked to locate a semantic defect in source code snippets. With descriptive identifier names, developers spent more time in the lines of code before the actual defect occurred and changed their reading direction less often, finding the semantic defect about 14% faster than with shorter but less descriptive identifier names. These effects disappeared when developers searched for a syntax error, i.e., when no in-depth understanding of the code was required. Interestingly, the style of identifier names had a clear impact on program comprehension for more experienced developers but not for less experienced developers.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Descriptive Compound Identifier Names Improve Source Code Comprehension 1521451837542 Andrea Schankin Karlsruhe Institute of Technology schankin@teco.edu Annika Berger Karlsruhe Institute of Technology berger@teco.edu Daniel V. Holt Heidelberg University daniel.holt@uni-heidelberg.de Johannes C. Hofmeister University of Passau johannes.hofmeister@uni-passau.de Till Riedel Karlsruhe Institute of Technology riedel@teco.edu Michael Beigl Karlsruhe Institute of Technology michael.beigl@kit.edu Program Comprehension Identifier Names Java Developers Software Quality Reading and understanding source code is a major task in software development. Code comprehension depends on the quality of code, which is impacted by code structure and identifier naming. In this paper we empirically investigated whether longer but more descriptive identifier names improve code comprehension compared to short names, as they represent useful information in more detail. In a web-based study 88 Java developers were asked to locate a semantic defect in source code snippets. With descriptive identifier names, developers spent more time in the lines of code before the actual defect occurred and changed their reading direction less often, finding the semantic defect about 14% faster than with shorter but less descriptive identifier names. These effects disappeared when developers searched for a syntax error, i.e., when no in-depth understanding of the code was required. Interestingly, the style of identifier names had a clear impact on program comprehension for more experienced developers but not for less experienced developers.",
              "pageNumber": 31,
              "isPageNumberRoman": false
            },
            {
              "id": "4RI1L5dB8NYsenrQoDhA0M",
              "type": "authorPaper",
              "text": "Un-break My Build: Assisting Developers with Build Repair Hints",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf",
              "extraLocations": [],
              "authorNames": "Carmine Vassallo (University of Zurich), Sebastian Proksch (University of Zurich), Timothy Zemp (University of Zurich), Harald C. Gall (University of Zurich)",
              "abstract": "Continuous integration is an agile software development practice. Instead of integrating features right before a release, they are constantly being integrated in an automated build process. This shortens the release cycle, improves software quality, and reduces time to market. However, the whole process will come to a halt when a commit breaks the build, which can happen for several reasons, e.g., compilation errors or test failures, and fixing the build suddenly becomes a top priority. Developers not only have to find the cause of the build break and fix it, but they have to be quick in all of it to avoid a delay for others. Unfortunately, these steps require deep knowledge and are often time consuming. To support developers in fixing a build break, we propose Bart, a tool that summarizes the reasons of the build failure and suggests possible solutions found on the Internet. We will show in a case study with eight participants that developers find Bart useful to understand build breaks and that using Bart substantially reduces the time to fix a build break, on average by 41%.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Un-break My Build: Assisting Developers with Build Repair Hints 1521724008826 Carmine Vassallo University of Zurich vassallo@ifi.uzh.ch Sebastian Proksch University of Zurich proksch@ifi.uzh.ch Timothy Zemp University of Zurich timothy.zemp@uzh.ch Harald C. Gall University of Zurich gall@ifi.uzh.ch Software Engineering Agile Software Development Software Development Tools Build Break Summarization Error Recovery Continuous integration is an agile software development practice. Instead of integrating features right before a release, they are constantly being integrated in an automated build process. This shortens the release cycle, improves software quality, and reduces time to market. However, the whole process will come to a halt when a commit breaks the build, which can happen for several reasons, e.g., compilation errors or test failures, and fixing the build suddenly becomes a top priority. Developers not only have to find the cause of the build break and fix it, but they have to be quick in all of it to avoid a delay for others. Unfortunately, these steps require deep knowledge and are often time consuming. To support developers in fixing a build break, we propose Bart, a tool that summarizes the reasons of the build failure and suggests possible solutions found on the Internet. We will show in a case study with eight participants that developers find Bart useful to understand build breaks and that using Bart substantially reduces the time to fix a build break, on average by 41%.",
              "pageNumber": 41,
              "isPageNumberRoman": false
            },
            {
              "id": "5j3YH0iLdViP2RyZlyoOjn",
              "type": "authorPaper",
              "text": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf",
              "extraLocations": [],
              "authorNames": "Boyang Li (The College of William & Mary), Christopher Vendome (The College of William & Mary), Mario Linares-Vasquez (Universidad de los Andes), Denys Poshyvanyk (The College of William & Mary)",
              "abstract": "Techniques to automatically identify the stereotypes of different software artifacts (e.g., classes, methods, commits) were previously presented. Those approaches utilized the techniques to support comprehension of software artifacts, but those stereotype-based approaches were not designed to consider the structure and purpose of unit tests, which are widely used in software development to increase the quality of source code. Moreover, unit tests are different than production code, since they are designed and written by following different principles and workflows. In this paper, we present a novel approach, called TeStereo, for automated tagging of methods in unit tests. The tagging is based on an original catalog of stereotypes that we have designed to improve the comprehension and navigation of unit tests in a large test suite. The stereotype tags are automatically selected by using static control-flow, data-flow, and API call based analyses. To evaluate the benefits of the stereotypes and the tagging reports, we conducted a study with 46 students and another survey with 25 Apache developers to (i) validate the accuracy of the inferred stereotypes, (ii) measure the usefulness of the stereotypes when writing/understanding unit tests, and (iii) collect feedback on the usefulness of the generated tagging reports.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging 1521502321947 Boyang Li The College of William & Mary bli01@email.wm.edu Christopher Vendome The College of William & Mary cgvendome@email.wm.edu Mario Linares-Vasquez Universidad de los Andes m.linaresv@uniandes.edu.co Denys Poshyvanyk The College of William & Mary denys@cs.wm.edu Unit test cases program comprehension maintaining software Techniques to automatically identify the stereotypes of different software artifacts (e.g., classes, methods, commits) were previously presented. Those approaches utilized the techniques to support comprehension of software artifacts, but those stereotype-based approaches were not designed to consider the structure and purpose of unit tests, which are widely used in software development to increase the quality of source code. Moreover, unit tests are different than production code, since they are designed and written by following different principles and workflows. In this paper, we present a novel approach, called TeStereo, for automated tagging of methods in unit tests. The tagging is based on an original catalog of stereotypes that we have designed to improve the comprehension and navigation of unit tests in a large test suite. The stereotype tags are automatically selected by using static control-flow, data-flow, and API call based analyses. To evaluate the benefits of the stereotypes and the tagging reports, we conducted a study with 46 students and another survey with 25 Apache developers to (i) validate the accuracy of the inferred stereotypes, (ii) measure the usefulness of the stereotypes when writing/understanding unit tests, and (iii) collect feedback on the usefulness of the generated tagging reports.",
              "pageNumber": 52,
              "isPageNumberRoman": false
            },
            {
              "id": "5FTc9K48QtppL2KBrfp3Jy",
              "type": "authorPaper",
              "text": "JIT Feedback - What Experienced Developers Like about Static Analysis",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf",
              "extraLocations": [],
              "authorNames": "Yuriy Tymchuk (Swisscom), Mohammad Ghafari (University of Bern), Oscar Nierstrasz (University of Bern)",
              "abstract": "Although software developers are usually reluctant to use static analysis to detect issues in their source code, our automatic just-in-time static analysis assistant was integrated into an Integrated Development Environment, and was evaluated positively by its users. We conducted interviews to understand the impact of the tool on experienced developers, and how it performs in comparison with other static analyzers. We learned that the availability of our tool as a default IDE feature and its automatic execution are the main reasons for its adoption. Moreover, the fact that immediate feedback is provided directly in the related development context is essential to keeping developers satisfied, although in certain cases feedback delivered later was deemed more useful. We also discovered that static analyzers can play an educational role, especially in combination with domain-specific rules.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 JIT Feedback - What Experienced Developers Like about Static Analysis 1521072337048 Yuriy Tymchuk Swisscom yuriy.tymchuk@me.com Mohammad Ghafari University of Bern ghafari@inf.unibe.ch Oscar Nierstrasz University of Bern oscar@inf.unibe.ch Static analysis just-in-time feedback software quality Although software developers are usually reluctant to use static analysis to detect issues in their source code, our automatic just-in-time static analysis assistant was integrated into an Integrated Development Environment, and was evaluated positively by its users. We conducted interviews to understand the impact of the tool on experienced developers, and how it performs in comparison with other static analyzers. We learned that the availability of our tool as a default IDE feature and its automatic execution are the main reasons for its adoption. Moreover, the fact that immediate feedback is provided directly in the related development context is essential to keeping developers satisfied, although in certain cases feedback delivered later was deemed more useful. We also discovered that static analyzers can play an educational role, especially in combination with domain-specific rules.",
              "pageNumber": 64,
              "isPageNumberRoman": false
            },
            {
              "id": "KKUePB3GpOdws21UjHzQP",
              "type": "authorPaper",
              "text": "How Do Design Decisions Affect the Distribution of Software Metrics?",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf",
              "extraLocations": [],
              "authorNames": "Marcos Dósea (Federal University of Sergipe; Federal University of Bahia), Cláudio Sant' Anna (Federal University of Bahia), Bruno C. da Silva (California Polytechnic State University)",
              "abstract": "Background. Source code analysis techniques usually rely on metric-based assessment. However, most of these techniques have low accuracy. One possible reason is because metric thresholds are extracted from classes driven by distinct design decisions. Previous studies have already shown that classes implemented according to some coarse-grained design decisions, such as programming languages, have different distribution of metric values. Therefore, these design decisions should be taken into account when using benchmarks for metric-based source code analysis. Goal. Our goal is to investigate whether other fine-grained design decisions also influence over distribution of software metrics. Method. We conduct an empirical study to evaluate the distributions of four metrics applied over fifteen real-world systems based on three different domains. Initially, we evaluated the influence of the class design role on the distributions of measures. For this purpose, we have defined an automatic approach to identify the design role played by each class. Then, we looked for other fine-grained design decisions that could have influenced the measures. Results. Our findings show that distribution of metrics are sensitive to the following design decisions: (i) design role of the class (ii) used libraries, (iii) coding style, (iv) exception handling, and (v) logging and debugging code mechanisms. Conclusion. The distribution of software metrics are sensitive to fine-grained design decisions and we should consider taking them into account when building benchmarks for metric-based source code analysis.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 How Do Design Decisions Affect the Distribution of Software Metrics? 1522938824888 Marcos Dósea Federal University of Sergipe; Federal University of Bahia dosea@ufs.br Cláudio Sant' Anna Federal University of Bahia santanna@dcc.ufba.br Bruno C. da Silva California Polytechnic State University bcdasilv@calpoly.edu Design Decisions Design Role Metrics Empirical Study Background. Source code analysis techniques usually rely on metric-based assessment. However, most of these techniques have low accuracy. One possible reason is because metric thresholds are extracted from classes driven by distinct design decisions. Previous studies have already shown that classes implemented according to some coarse-grained design decisions, such as programming languages, have different distribution of metric values. Therefore, these design decisions should be taken into account when using benchmarks for metric-based source code analysis. Goal. Our goal is to investigate whether other fine-grained design decisions also influence over distribution of software metrics. Method. We conduct an empirical study to evaluate the distributions of four metrics applied over fifteen real-world systems based on three different domains. Initially, we evaluated the influence of the class design role on the distributions of measures. For this purpose, we have defined an automatic approach to identify the design role played by each class. Then, we looked for other fine-grained design decisions that could have influenced the measures. Results. Our findings show that distribution of metrics are sensitive to the following design decisions: (i) design role of the class (ii) used libraries, (iii) coding style, (iv) exception handling, and (v) logging and debugging code mechanisms. Conclusion. The distribution of software metrics are sensitive to fine-grained design decisions and we should consider taking them into account when building benchmarks for metric-based source code analysis.",
              "pageNumber": 74,
              "isPageNumberRoman": false
            },
            {
              "id": "70sfvAzsctAaFCMBWrpZag",
              "type": "authorPaper",
              "text": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf",
              "extraLocations": [],
              "authorNames": "Yang Feng (University of California), Kaj Dreef (University of California), James Jones (University of California), Arie van Deursen (Delft University of Technology)",
              "abstract": "Understanding the dynamic behavior of a software system is one of the most important and time-consuming tasks for today's software maintainers. In practice, understanding the inner workings of software requires studying the source code and documentation and inserting logging code in order to map high-level descriptions of the program behavior with low-level implementation, i.e., the source code. Unfortunately, for large codebases and large log files, such cognitive mapping can be quite challenging. To bridge the cognitive gap between the source code and detailed models of program behavior, we propose a fully automatic approach to present a semantic abstraction with different levels of functional granularity from full execution traces. Our approach builds multi-level abstractions and identifies frequent behaviors at each level based on a number of execution traces, and then, it labels phases within individual execution traces according to the identified major functional behaviors of the system. To validate our approach, we conducted a case study on a large-scale subject program, Javac, to demonstrate the effectiveness of the mining result. Furthermore, the results of a user study demonstrate that our approach is capable of presenting users a high-level comprehensible abstraction of execution behavior. Based on a real world subject program the participants in our user study were able to achieve a mean accuracy of 70%.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Hierarchical Abstraction of Execution Traces for Program Comprehension 1521504022431 Yang Feng University of California yang.feng@uci.edu Kaj Dreef University of California kdreef@uci.edu James Jones University of California jajones@uci.edu Arie van Deursen Delft University of Technology arie.vandeursen@tudelft.nl Dynamic Analysis Execution trace understanding Program comprehension multi level abstraction Understanding the dynamic behavior of a software system is one of the most important and time-consuming tasks for today's software maintainers. In practice, understanding the inner workings of software requires studying the source code and documentation and inserting logging code in order to map high-level descriptions of the program behavior with low-level implementation, i.e., the source code. Unfortunately, for large codebases and large log files, such cognitive mapping can be quite challenging. To bridge the cognitive gap between the source code and detailed models of program behavior, we propose a fully automatic approach to present a semantic abstraction with different levels of functional granularity from full execution traces. Our approach builds multi-level abstractions and identifies frequent behaviors at each level based on a number of execution traces, and then, it labels phases within individual execution traces according to the identified major functional behaviors of the system. To validate our approach, we conducted a case study on a large-scale subject program, Javac, to demonstrate the effectiveness of the mining result. Furthermore, the results of a user study demonstrate that our approach is capable of presenting users a high-level comprehensible abstraction of execution behavior. Based on a real world subject program the participants in our user study were able to achieve a mean accuracy of 70%.",
              "pageNumber": 86,
              "isPageNumberRoman": false
            },
            {
              "id": "5JMGBYKkjtBXcrmOMRqivq",
              "type": "authorPaper",
              "text": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf",
              "extraLocations": [],
              "authorNames": "Cong Liu (Eindhoven University of Technology), Boudewijn van Dongen (Eindhoven University of Technology), Nour Assy (Eindhoven University of Technology), Wil M.P van der Aalst (RWTH Aachen University)",
              "abstract": "Restructuring an object-oriented software system into a component-based one allows for a better understanding of the system and facilitates its future maintenance. A component-based architecture structures a software system in terms of its components and interactions where each component refers to a set of classes. To represent the architectural interaction, each component provides a set of interfaces. Existing interface identification approaches are mostly structure-oriented rather than function-oriented. In this paper, we propose an approach to identify interfaces of a component according to the functional interaction information that is recorded in the software execution data. In addition, we also discover the contract (represented as a behavioral model) for each identified interface by using process mining techniques to help understand how each interface actually works. All proposed approaches have been implemented in the open source process mining toolkit ProM. Using a set of software execution data containing more than 650.000 method calls generated from three software systems, we evaluate our approach against three existing interface identification approaches. The empirical evaluation demonstrates that our approach can discover more functionally consistent interfaces which facilitate the reconstruction of architectural models with higher quality.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Component Interface Identification and Behavioral Model Discovery from Software Execution Data 1521477896118 Cong Liu Eindhoven University of Technology c.liu.3@tue.nl Boudewijn van Dongen Eindhoven University of Technology b.f.v.dongen@tue.nl Nour Assy Eindhoven University of Technology n.assy@tue.nl Wil M.P van der Aalst RWTH Aachen University wvdaalst@pads.rwth-aachen.de Interface identification Interface behavioral model Process mining Software execution data Empirical Evaluation Restructuring an object-oriented software system into a component-based one allows for a better understanding of the system and facilitates its future maintenance. A component-based architecture structures a software system in terms of its components and interactions where each component refers to a set of classes. To represent the architectural interaction, each component provides a set of interfaces. Existing interface identification approaches are mostly structure-oriented rather than function-oriented. In this paper, we propose an approach to identify interfaces of a component according to the functional interaction information that is recorded in the software execution data. In addition, we also discover the contract (represented as a behavioral model) for each identified interface by using process mining techniques to help understand how each interface actually works. All proposed approaches have been implemented in the open source process mining toolkit ProM. Using a set of software execution data containing more than 650.000 method calls generated from three software systems, we evaluate our approach against three existing interface identification approaches. The empirical evaluation demonstrates that our approach can discover more functionally consistent interfaces which facilitate the reconstruction of architectural models with higher quality.",
              "pageNumber": 97,
              "isPageNumberRoman": false
            },
            {
              "id": "6ADvgjypJE7HyocVoxoFpm",
              "type": "authorPaper",
              "text": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf",
              "extraLocations": [],
              "authorNames": "Cheng Zhou (Yangzhou University), Bin Li (Yangzhou University), Xiaobing Sun (Yangzhou University), Hongjing Guo (Yangzhou University)",
              "abstract": "Software bug issues are unavoidable in software development and maintenance. In order to manage bugs effectively, bug tracking systems are developed to help to record, manage and track the bugs of each project. The rich information in the bug repository provides the possibility of establishment of entity-centric knowledge bases to help understand and fix the bugs. However, existing named entity recognition (NER) systems deal with text that is structured, formal, well written, with a good grammatical structure and few spelling errors, which cannot be directly used for bug-specific named entity recognition. For bug data, they are free-form texts, which include a mixed language studded with code, abbreviations and software-specific vocabularies. In this paper, we summarize the characteristics of bug entities, propose a classification method for bug entities, and build a baseline corpus on two open source projects (Mozilla and Eclipse). On this basis, we propose an approach for bug-specific entity recognition called BNER with the Conditional Random Fields (CRF) model and word embedding technique. An empirical study is conducted to evaluate the accuracy of our BNER technique, and the results show that the two designed baseline corpus are suitable for bug-specific named entity recognition, and our BNER approach is e?ective on cross-projects NER.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Recognizing Software Bug-Specific Named Entity in Software Bug Repository 1521515355398 Cheng Zhou Yangzhou University 153362746@qq.com Bin Li Yangzhou University lb@yzu.edu.cn Xiaobing Sun Yangzhou University xbsun@yzu.edu.cn Hongjing Guo Yangzhou University 1159107090@qq.com Named entity recognition software bug software bug corpus CRF model word embedding Software bug issues are unavoidable in software development and maintenance. In order to manage bugs effectively, bug tracking systems are developed to help to record, manage and track the bugs of each project. The rich information in the bug repository provides the possibility of establishment of entity-centric knowledge bases to help understand and fix the bugs. However, existing named entity recognition (NER) systems deal with text that is structured, formal, well written, with a good grammatical structure and few spelling errors, which cannot be directly used for bug-specific named entity recognition. For bug data, they are free-form texts, which include a mixed language studded with code, abbreviations and software-specific vocabularies. In this paper, we summarize the characteristics of bug entities, propose a classification method for bug entities, and build a baseline corpus on two open source projects (Mozilla and Eclipse). On this basis, we propose an approach for bug-specific entity recognition called BNER with the Conditional Random Fields (CRF) model and word embedding technique. An empirical study is conducted to evaluate the accuracy of our BNER technique, and the results show that the two designed baseline corpus are suitable for bug-specific named entity recognition, and our BNER approach is e?ective on cross-projects NER.",
              "pageNumber": 108,
              "isPageNumberRoman": false
            },
            {
              "id": "7MGoPdUbhhKePpKQkbDvJN",
              "type": "authorPaper",
              "text": "Recommending Frequently Encountered Bugs",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf",
              "extraLocations": [],
              "authorNames": "Yun Zhang (Zhejiang University), David Lo (Singapore Management University), Xin Xia (Monash University), Jing Jiang (Beihang University), Jianling Sun (Zhejiang University)",
              "abstract": "Developers introduce bugs during software development which reduce software reliability. Many of these bugs are commonly occurring and have been experienced by many other developers. Informing developers, especially novice ones, about commonly occurring bugs in a domain of interest (e.g., Java), can help developers comprehend program and avoid similar bugs in the future. Unfortunately, information about commonly occurring bugs are not readily available. To address this need, we propose a novel approach named RFEB which recommends frequently encountered bugs (FEBugs) that may affect many other developers. RFEB analyzes Stack Overflow which is the largest software engineering-specific Q&amp;A communities. Among the plenty of questions posted in Stack Overflow, many of them provide the descriptions and solutions of different kinds of bugs. Unfortunately, the search engine that comes with Stack Overflow is not able to identify FEBugs well. To address the limitation of the search engine of Stack Overflow, we propose RFEB which is an integrated and iterative approach that considers both relevance and popularity of Stack Overflow questions to identify FEBugs. To evalu- ate the performance of RFEB, we perform experiments on a dataset from Stack Overflow which contains more than ten million posts. We compared our model with Stack Overflow's search engine on 10 domains, and the experiment results show that RFEB achieves the average NDCG10score of 0.96, which improves Stack Overflow's search engine by 20%.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Recommending Frequently Encountered Bugs 1521202450170 Yun Zhang Zhejiang University yunzhang28@zju.edu.cn David Lo Singapore Management University davidlo@smu.edu.sg Xin Xia Monash University xin.xia@monash.edu Jing Jiang Beihang University jiangjing@buaa.edu.cn Jianling Sun Zhejiang University sunjl@zju.edu.cn Frequently Encountered Bugs Stack Overflow Query Refinement Developers introduce bugs during software development which reduce software reliability. Many of these bugs are commonly occurring and have been experienced by many other developers. Informing developers, especially novice ones, about commonly occurring bugs in a domain of interest (e.g., Java), can help developers comprehend program and avoid similar bugs in the future. Unfortunately, information about commonly occurring bugs are not readily available. To address this need, we propose a novel approach named RFEB which recommends frequently encountered bugs (FEBugs) that may affect many other developers. RFEB analyzes Stack Overflow which is the largest software engineering-specific Q&amp;A communities. Among the plenty of questions posted in Stack Overflow, many of them provide the descriptions and solutions of different kinds of bugs. Unfortunately, the search engine that comes with Stack Overflow is not able to identify FEBugs well. To address the limitation of the search engine of Stack Overflow, we propose RFEB which is an integrated and iterative approach that considers both relevance and popularity of Stack Overflow questions to identify FEBugs. To evalu- ate the performance of RFEB, we perform experiments on a dataset from Stack Overflow which contains more than ten million posts. We compared our model with Stack Overflow's search engine on 10 domains, and the experiment results show that RFEB achieves the average NDCG10score of 0.96, which improves Stack Overflow's search engine by 20%.",
              "pageNumber": 120,
              "isPageNumberRoman": false
            },
            {
              "id": "5lvAjcd26fPJdgJo2rAdMM",
              "type": "authorPaper",
              "text": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf",
              "extraLocations": [],
              "authorNames": "Zhou Xu (Wuhan University), Shuai Li (The Hong Kong Polytechnic University), Yutian Tang (The Hong Kong Polytechnic University), Xiapu Luo (The Hong Kong Polytechnic University), Tao Zhang (Harbin Engineering University), Jin Liu (Wuhan University), Jun Xu (The Hong Kong Polytechnic University)",
              "abstract": "Software defect prediction aims at detecting the defect-prone software modules by mining historical development data from software repositories. If such modules are identified at the early stage of the development, it can save large amounts of resources. Cross Version Defect Prediction (CVDP) is a practical scenario by training the classification model on the historical data of the prior version and then predicting the defect labels of modules of the current version. However, software development is a constantly-evolving process which leads to the data distribution differences across versions within the same project. The distribution differences will degrade the performance of the classification model. In this paper, we approach this issue by leveraging a state-of-the-art Dissimilarity-based Sparse Subset Selection (DS3) method. This method selects a representative module subset from the prior version based on the pairwise dissimilarities between the modules of two versions and assigns each module of the current version to one of the representative modules. These selected modules can well represent the modules of the current version, thus mitigating the distribution differences. We evaluate the effectiveness of DS3 for CVDP performance on total 40 cross-version pairs from 56 versions of 15 projects with three traditional and two effort-aware indicators. The extensive experiments show that DS3 outperforms three baseline methods, especially in terms of two effort-aware indicators.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Cross Version Defect Prediction with Representative Data via Sparse Subset Selection 1521465583552 Zhou Xu Wuhan University zhouxullx@whu.edu.cn Shuai Li The Hong Kong Polytechnic University csshuaili@comp.polyu.edu.hk Yutian Tang The Hong Kong Polytechnic University csytang@comp.polyu.edu.hk Xiapu Luo The Hong Kong Polytechnic University csxluo@comp.polyu.edu.hk Tao Zhang Harbin Engineering University cstzhang@hrbeu.edu.cn Jin Liu Wuhan University jinliu@whu.edu.cn Jun Xu The Hong Kong Polytechnic University csjunxu@comp.polyu.edu.hk cross version defect prediction representative data sparse subset selection pairwise dissimilarities Software defect prediction aims at detecting the defect-prone software modules by mining historical development data from software repositories. If such modules are identified at the early stage of the development, it can save large amounts of resources. Cross Version Defect Prediction (CVDP) is a practical scenario by training the classification model on the historical data of the prior version and then predicting the defect labels of modules of the current version. However, software development is a constantly-evolving process which leads to the data distribution differences across versions within the same project. The distribution differences will degrade the performance of the classification model. In this paper, we approach this issue by leveraging a state-of-the-art Dissimilarity-based Sparse Subset Selection (DS3) method. This method selects a representative module subset from the prior version based on the pairwise dissimilarities between the modules of two versions and assigns each module of the current version to one of the representative modules. These selected modules can well represent the modules of the current version, thus mitigating the distribution differences. We evaluate the effectiveness of DS3 for CVDP performance on total 40 cross-version pairs from 56 versions of 15 projects with three traditional and two effort-aware indicators. The extensive experiments show that DS3 outperforms three baseline methods, especially in terms of two effort-aware indicators.",
              "pageNumber": 132,
              "isPageNumberRoman": false
            },
            {
              "id": "1uDgj4FUPdLUjzAtmsuxTg",
              "type": "authorPaper",
              "text": "Unsupervised Deep Bug Report Summarization",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf",
              "extraLocations": [],
              "authorNames": "Xiaochen Li (Dalian University of Technology), He Jiang (Dalian University of Technology; Beijing Institute of Technology), Dong Liu (Dalian University of Technology), Zhilei Ren (Dalian University of Technology), Ge Li (Peking University)",
              "abstract": "Bug report summarization is an effective way to reduce the considerable time in wading through numerous bug reports. Although some supervised and unsupervised algorithms have been proposed for this task, their performance is still limited, due to the particular characteristics of bug reports, including the evaluation behaviours in bug reports, the diverse sentences in software language and natural language, and the domain-specific predefined fields. In this study, we conduct the first exploration of the deep learning network on bug report summarization. Our approach, called DeepSum, is a novel stepped auto-encoder network with evaluation enhancement and predefined fields enhancement modules, which successfully integrates the bug report characteristics into a deep neural network. DeepSum is unsupervised. It significantly reduces the efforts on labeling huge training sets. Extensive experiments show that DeepSum outperforms the comparative algorithms by up to 13.2% and 9.2% in terms of F-score and Rouge-n metrics respectively over the public datasets, and achieves the state-of-the-art performance. Our work shows promising prospects for deep learning to summarize millions of bug reports.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Unsupervised Deep Bug Report Summarization 1521441780242 Xiaochen Li Dalian University of Technology li1989@mail.dlut.edu.cn He Jiang Dalian University of Technology; Beijing Institute of Technology jianghe@dlut.edu.cn Dong Liu Dalian University of Technology dongliu@mail.dlut.edu.cn Zhilei Ren Dalian University of Technology zren@dlut.edu.cn Ge Li Peking University lige@pku.edu.cn Bug Report Summarization Mining Software Repositories Deep Learning Unsupervised Learning Bug report summarization is an effective way to reduce the considerable time in wading through numerous bug reports. Although some supervised and unsupervised algorithms have been proposed for this task, their performance is still limited, due to the particular characteristics of bug reports, including the evaluation behaviours in bug reports, the diverse sentences in software language and natural language, and the domain-specific predefined fields. In this study, we conduct the first exploration of the deep learning network on bug report summarization. Our approach, called DeepSum, is a novel stepped auto-encoder network with evaluation enhancement and predefined fields enhancement modules, which successfully integrates the bug report characteristics into a deep neural network. DeepSum is unsupervised. It significantly reduces the efforts on labeling huge training sets. Extensive experiments show that DeepSum outperforms the comparative algorithms by up to 13.2% and 9.2% in terms of F-score and Rouge-n metrics respectively over the public datasets, and achieves the state-of-the-art performance. Our work shows promising prospects for deep learning to summarize millions of bug reports.",
              "pageNumber": 144,
              "isPageNumberRoman": false
            },
            {
              "id": "1HpABAHrfpceSy8wEd1a50",
              "type": "authorPaper",
              "text": "Analysis of Test Log Information through Interactive Visualizations",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7p0pFx8bE7YnSOAPX5sD3B/3295UHUN0aAFM1x6oW69xy.pdf",
              "extraLocations": [],
              "authorNames": "Diego Castro (Rio de Janeiro State University), Marcelo Schots (Rio de Janeiro State University)",
              "abstract": "A fundamental activity to achieve software quality is software testing, whose results are typically stored in log files. These files contain the richest and more detailed source of information for developers trying to understand failures and identify their potential causes. Analyzing and understanding the information presented in log files, however, can be a complex task, depending on the amount of errors and the variety of information. Some previously proposed tools try to visualize test information, but they have limited interaction and present a single perspective of such data. This paper presents ASTRO, an infrastructure that extracts information from a number of log files and presents it in multi-perspective interactive visualizations that aim at easing and improving the developers' analysis process. A study carried out with practitioners from 3 software test factories indicated that ASTRO helps to analyze information of interest, with less accuracy in tasks that involved assimilation of information from different perspectives. Based on their difficulties, participants also provided feedback for improving the tool.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Analysis of Test Log Information through Interactive Visualizations 1521546735652 Diego Castro Rio de Janeiro State University diegocbcastro07@gmail.com Marcelo Schots Rio de Janeiro State University schots@ime.uerj.br software testing information visualization test log analysis A fundamental activity to achieve software quality is software testing, whose results are typically stored in log files. These files contain the richest and more detailed source of information for developers trying to understand failures and identify their potential causes. Analyzing and understanding the information presented in log files, however, can be a complex task, depending on the amount of errors and the variety of information. Some previously proposed tools try to visualize test information, but they have limited interaction and present a single perspective of such data. This paper presents ASTRO, an infrastructure that extracts information from a number of log files and presents it in multi-perspective interactive visualizations that aim at easing and improving the developers' analysis process. A study carried out with practitioners from 3 software test factories indicated that ASTRO helps to analyze information of interest, with less accuracy in tasks that involved assimilation of information from different perspectives. Based on their difficulties, participants also provided feedback for improving the tool.",
              "pageNumber": 156,
              "isPageNumberRoman": false
            },
            {
              "id": "26N2xbNpKl9j2KbI5QZrEm",
              "type": "authorPaper",
              "text": "A Search-Based Approach for Accurate Identification of Log Message Formats",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf",
              "extraLocations": [],
              "authorNames": "Salma Messaoudi (University of Luxembourg), Annibale Panichella (University of Luxembourg), Domenico Bianculli (University of Luxembourg), Lionel Briand (University of Luxembourg), Raimondas Sasnauskas (SES)",
              "abstract": "Many software engineering activities process the events contained in log files. However, before performing any processing activity, it is necessary to parse the entries in a log file, to retrieve the actual events recorded in the log. Each event is denoted by a log message, which is composed of a fixed part—called (event) template—that is the same for all occurrences of the same event type, and a variable part, which may vary with each event occurrence. The formats of log messages, in complex and evolving systems, have numerous variations, are typically not entirely known, and change on a frequent basis; therefore, they need to be identified automatically. The log message format identification problem deals with the identification of the different templates used in the messages of a log. Any solution to this problem has to generate templates that meet two main goals: generating templates that are not too general, so as to distinguish different events, but also not too specific, so as not to consider different occurrences of the same event as following different templates; however, these goals are conflicting. In this paper, we present the MoLFI approach, which recasts the log message identification problem as a multi-objective problem. MoLFI uses an evolutionary approach to solve this problem, by tailoring the NSGA-II algorithm to search the space of solutions for a Pareto optimal set of message templates. We have implemented MoLFI in a tool, which we have evaluated on six real-world datasets, containing log files with a number of entries ranging from 2K to 300K. The experiments results show that MoLFI extracts by far the highest number of correct log message templates, significantly outperforming two state-of-the-art approaches on all datasets.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 A Search-Based Approach for Accurate Identification of Log Message Formats 1521455949412 Salma Messaoudi University of Luxembourg salma.messaoudi@uni.lu Annibale Panichella University of Luxembourg a.panichella@tudelft.nl Domenico Bianculli University of Luxembourg domenico.bianculli@uni.lu Lionel Briand University of Luxembourg lionel.briand@uni.lu Raimondas Sasnauskas SES raimondas.sasnauskas@ses.com log analysis log parsing log message format NSGA-II Many software engineering activities process the events contained in log files. However, before performing any processing activity, it is necessary to parse the entries in a log file, to retrieve the actual events recorded in the log. Each event is denoted by a log message, which is composed of a fixed part—called (event) template—that is the same for all occurrences of the same event type, and a variable part, which may vary with each event occurrence. The formats of log messages, in complex and evolving systems, have numerous variations, are typically not entirely known, and change on a frequent basis; therefore, they need to be identified automatically. The log message format identification problem deals with the identification of the different templates used in the messages of a log. Any solution to this problem has to generate templates that meet two main goals: generating templates that are not too general, so as to distinguish different events, but also not too specific, so as not to consider different occurrences of the same event as following different templates; however, these goals are conflicting. In this paper, we present the MoLFI approach, which recasts the log message identification problem as a multi-objective problem. MoLFI uses an evolutionary approach to solve this problem, by tailoring the NSGA-II algorithm to search the space of solutions for a Pareto optimal set of message templates. We have implemented MoLFI in a tool, which we have evaluated on six real-world datasets, containing log files with a number of entries ranging from 2K to 300K. The experiments results show that MoLFI extracts by far the highest number of correct log message templates, significantly outperforming two state-of-the-art approaches on all datasets.",
              "pageNumber": 167,
              "isPageNumberRoman": false
            },
            {
              "id": "6lwjIzQDz5QA5wy1vgbOut",
              "type": "authorPaper",
              "text": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf",
              "extraLocations": [],
              "authorNames": "Shanshan Li (National University of Defense Technology), Xu Niu (National University of Defense Technology), Zhouyang Jia (National University of Defense Technology), Ji Wang (National University of Defense Technology), Haochen He (National University of Defense Technology), Teng Wang (National University of Defense Technology)",
              "abstract": "Log statements are widely used for postmortem debugging. Despite the importance of log messages, it is difficult for developers to establish good logging practices. There are two main reasons for this. First, there are no rigorous specifications or systematic processes to guide the practices of software logging. Second, logging code co-evolves with bug fixes or feature updates. While previous works on log enhancement have successfully focused on the first problem, they are hard to solve the latter. For taking the first step towards solving the second problem, this paper is inspired by code clones and assumes that logging code with similar context is pervasive in software and deserves similar modifications. To verify our assumptions, we conduct an empirical study on eight open-source projects. Based on the observation, we design and implement LogTracker, an automatic tool that can predict log revisions by mining the correlation between logging context and modifications. With an enhanced modeling of logging context, LogTracker is able to guide more intricate log revisions that cannot be covered by existing tools. We evaluate the effectiveness of LogTracker by applying it to the latest version of subject projects. The results of our experiments show that LogTracker can detect 199 instances of log revisions. So far, we have reported 25 of them, and 6 have been accepted.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History 1523414833081 Shanshan Li National University of Defense Technology shanshanli@nudt.edu.cn Xu Niu National University of Defense Technology niuxu16@nudt.edu.cn Zhouyang Jia National University of Defense Technology jiazhouyang@nudt.edu.cn Ji Wang National University of Defense Technology wj@nudt.edu.cn Haochen He National University of Defense Technology hehaochen13@nudt.edu.cn Teng Wang National University of Defense Technology wangteng13@nudt.edu.cn Software reliability Software evolution Maintaining software Log statements are widely used for postmortem debugging. Despite the importance of log messages, it is difficult for developers to establish good logging practices. There are two main reasons for this. First, there are no rigorous specifications or systematic processes to guide the practices of software logging. Second, logging code co-evolves with bug fixes or feature updates. While previous works on log enhancement have successfully focused on the first problem, they are hard to solve the latter. For taking the first step towards solving the second problem, this paper is inspired by code clones and assumes that logging code with similar context is pervasive in software and deserves similar modifications. To verify our assumptions, we conduct an empirical study on eight open-source projects. Based on the observation, we design and implement LogTracker, an automatic tool that can predict log revisions by mining the correlation between logging context and modifications. With an enhanced modeling of logging context, LogTracker is able to guide more intricate log revisions that cannot be covered by existing tools. We evaluate the effectiveness of LogTracker by applying it to the latest version of subject projects. The results of our experiments show that LogTracker can detect 199 instances of log revisions. So far, we have reported 25 of them, and 6 have been accepted.",
              "pageNumber": 178,
              "isPageNumberRoman": false
            },
            {
              "id": "j9StvOFUAehaETWyNz3HG",
              "type": "authorPaper",
              "text": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf",
              "extraLocations": [],
              "authorNames": "Anas Shatnawi (University of Milan-Bicocca), Hudhaifa Shatnawi (Maharishi University of Management), Mohamed Aymen Saied (Concordia University), Zakarea Al Shara (University of Montpellier), Houari Sahraoui (University of Montreal), Abdelhak Seriai (University of Montpellier)",
              "abstract": "The reuse at the component level is generally more effective than the one at the object-oriented class level. This is due to the granularity level where components expose their functionalities at an abstract level compared to the fine-grained object-oriented classes. Moreover, components clearly define their dependencies through their provided and required interfaces in an explicit way that facilitates the understanding of how to reuse these components. Therefore, several component identification approaches have been proposed to identify components based on the analysis object-oriented software applications. Nevertheless, most of the existing component identification approaches did not consider co-usage dependencies between API classes to identify classes/methods that can be reused to implement a specific scenario. In this paper, we propose an approach to identify reusable software components in object-oriented APIs, based on the interactions between client applications and the targeted API. As we are dealing with actual clients using the API, dynamic analysis allows to better capture the instances of API usage. Approaches using static analysis are usually limited by the difficulty of handling dynamic features such as polymorphism and class loading. We evaluate our approach by applying it to three Java APIs with eight client applications from the DaCapo benchmark. DaCapo provides a set of pre-defined usage scenarios. The results show that our component identification approach has a very high precision.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis 1521206883274 Anas Shatnawi University of Milan-Bicocca anas.shatnawi@unimib.it Hudhaifa Shatnawi Maharishi University of Management hshatnawi@mum.edu Mohamed Aymen Saied Concordia University med.aymen.saied@gmail.com Zakarea Al Shara University of Montpellier zakarea.alshara@gmail.com Houari Sahraoui University of Montreal sahraouh@iro.umontreal.ca Abdelhak Seriai University of Montpellier seriai@lirmm.fr Software component reverse engineering object-oriented APIs dynamic analysis source code reuse The reuse at the component level is generally more effective than the one at the object-oriented class level. This is due to the granularity level where components expose their functionalities at an abstract level compared to the fine-grained object-oriented classes. Moreover, components clearly define their dependencies through their provided and required interfaces in an explicit way that facilitates the understanding of how to reuse these components. Therefore, several component identification approaches have been proposed to identify components based on the analysis object-oriented software applications. Nevertheless, most of the existing component identification approaches did not consider co-usage dependencies between API classes to identify classes/methods that can be reused to implement a specific scenario. In this paper, we propose an approach to identify reusable software components in object-oriented APIs, based on the interactions between client applications and the targeted API. As we are dealing with actual clients using the API, dynamic analysis allows to better capture the instances of API usage. Approaches using static analysis are usually limited by the difficulty of handling dynamic features such as polymorphism and class loading. We evaluate our approach by applying it to three Java APIs with eight client applications from the DaCapo benchmark. DaCapo provides a set of pre-defined usage scenarios. The results show that our component identification approach has a very high precision.",
              "pageNumber": 189,
              "isPageNumberRoman": false
            },
            {
              "id": "7uiDNPVrM3kZ9d9loYl84W",
              "type": "authorPaper",
              "text": "Deep Code Comment Generation",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf",
              "extraLocations": [],
              "authorNames": "Xing Hu (Peking University), Ge Li (Peking University), Xin Xia (Monash University), David Lo (Singapore Management University), Zhi Jin (Peking University)",
              "abstract": "During software maintenance, code comments help developers comprehend programs and reduce additional time spent on reading and navigating source code. Unfortunately, these comments are often mismatched, missing or outdated in the software projects. Developers have to infer the functionality from the source code. This paper proposes a new approach named DeepCom to automatically generate code comments for Java methods. The generated comments aim to help developers understand the functionality of Java methods. DeepCom applies Natural Language Processing (NLP) techniques to learn from a large code corpus and generates comments from learned features. We use a deep neural network that analyzes structural information of Java methods for better comments generation. We conduct experiments on a large-scale Java corpus built from 9,714 open source projects from GitHub. We evaluate the experimental results on a machine translation metric. Experimental results demonstrate that our method DeepCom outperforms the state-of-the-art by a substantial margin.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Deep Code Comment Generation 1521360610484 Xing Hu Peking University huxing0101@pku.edu.cn Ge Li Peking University lige@pku.edu.cn Xin Xia Monash University xin.xia@monash.edu David Lo Singapore Management University davidlo@smu.edu.sg Zhi Jin Peking University zhijin@pku.edu.cn program comprehension comment generation deep learning During software maintenance, code comments help developers comprehend programs and reduce additional time spent on reading and navigating source code. Unfortunately, these comments are often mismatched, missing or outdated in the software projects. Developers have to infer the functionality from the source code. This paper proposes a new approach named DeepCom to automatically generate code comments for Java methods. The generated comments aim to help developers understand the functionality of Java methods. DeepCom applies Natural Language Processing (NLP) techniques to learn from a large code corpus and generates comments from learned features. We use a deep neural network that analyzes structural information of Java methods for better comments generation. We conduct experiments on a large-scale Java corpus built from 9,714 open source projects from GitHub. We evaluate the experimental results on a machine translation metric. Experimental results demonstrate that our method DeepCom outperforms the state-of-the-art by a substantial margin.",
              "pageNumber": 200,
              "isPageNumberRoman": false
            },
            {
              "id": "4zt683f33b6kH6hbHWvhuz",
              "type": "authorPaper",
              "text": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf",
              "extraLocations": [],
              "authorNames": "Stefanie Beyer (University of Klagenfurt), Christian Macho (University of Klagenfurt), Massimiliano Di Penta (University of Sannio), Martin Pinzger (undefined)",
              "abstract": "Software developers frequently solve development issues with the help of question and answer web forums, such as Stack Overflow (SO). While tags exist to support question searching and browsing, they are more related to technological aspects than to the question purposes. Tagging questions with their purpose can add a new dimension to the investigation of topics discussed in posts on SO. In this paper, we aim to automate such a classification of SO posts into seven question categories. As a first step, we have manually created a curated data set of 500 SO posts, classified into the seven categories. Using this data set, we apply machine learning algorithms (Random Forest and Support Vector Machines) to build a classification model for SO questions. We then experiment with 82 different configurations regarding the preprocessing of the text and representation of the input data. The results of the best performing models show that our models can classify posts into the correct question category with an average precision and recall of 0.88 and 0.87 when using Random Forest and the phrases indicating a question category as input data for the training. The obtained model can be used to aid developers in browsing so discussions or researchers in building recommenders based on SO.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Automatically Classifying Posts Into Question Categories on Stack Overflow 1521059622596 Stefanie Beyer University of Klagenfurt stefanie.beyer@aau.at Christian Macho University of Klagenfurt christian.macho@aau.at Massimiliano Di Penta University of Sannio dipenta@unisannio.it Martin Pinzger undefined martin.pinzger@aau.at Stack Overflow Question Categories Machine Learning Algorithms Software developers frequently solve development issues with the help of question and answer web forums, such as Stack Overflow (SO). While tags exist to support question searching and browsing, they are more related to technological aspects than to the question purposes. Tagging questions with their purpose can add a new dimension to the investigation of topics discussed in posts on SO. In this paper, we aim to automate such a classification of SO posts into seven question categories. As a first step, we have manually created a curated data set of 500 SO posts, classified into the seven categories. Using this data set, we apply machine learning algorithms (Random Forest and Support Vector Machines) to build a classification model for SO questions. We then experiment with 82 different configurations regarding the preprocessing of the text and representation of the input data. The results of the best performing models show that our models can classify posts into the correct question category with an average precision and recall of 0.88 and 0.87 when using Random Forest and the phrases indicating a question category as input data for the training. The obtained model can be used to aid developers in browsing so discussions or researchers in building recommenders based on SO.",
              "pageNumber": 211,
              "isPageNumberRoman": false
            },
            {
              "id": "2tJO5EqQBq0iNzkbrW5tkJ",
              "type": "authorPaper",
              "text": "Automatic Tag Recommendation for Software Development Video Tutorials",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1FFKusLwThlkttcgQS0RX2/2iLpJBGy2c1hej1IC27PJm.pdf",
              "extraLocations": [],
              "authorNames": "Esteban Parra (Florida State University), Javier Escobar-Avila (Florida State University), Sonia Haiduc (Florida State University)",
              "abstract": "Software development video tutorials are emerging as a new resource for developers to support their information needs. However, when trying to find the right video to watch for a task at hand, developers have little information at their disposal to quickly decide if they found the right video or not. This can lead to missing the best tutorials or wasting time watching irrelevant ones. Other external sources of information for developers, such as StackOverflow, have benefited from the existence of informative tags, which help developers to quickly gauge the relevance of posts and find related ones. We argue that the same is valid also for videos and propose the first set of approaches to automatically generate tags describing the contents of software development video tutorials. We investigate seven tagging approaches for this purpose, some using information retrieval techniques and leveraging only the information in the videos, others relying on external sources of information, such as StackOverflow, as well as two out-of-the-box commercial video tagging approaches. We evaluated 19 different configurations of these tagging approaches and the results of a user study showed that some of the information retrieval-based approaches performed the best and were able to recommend tags that developers consider relevant for describing programming videos.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Automatic Tag Recommendation for Software Development Video Tutorials 1521496424739 Esteban Parra Florida State University parrarod@cs.fsu.edu Javier Escobar-Avila Florida State University escobara@cs.fsu.edu Sonia Haiduc Florida State University shaiduc@cs.fsu.edu Video tutorials automatic tagging software engineering information retrieval Software development video tutorials are emerging as a new resource for developers to support their information needs. However, when trying to find the right video to watch for a task at hand, developers have little information at their disposal to quickly decide if they found the right video or not. This can lead to missing the best tutorials or wasting time watching irrelevant ones. Other external sources of information for developers, such as StackOverflow, have benefited from the existence of informative tags, which help developers to quickly gauge the relevance of posts and find related ones. We argue that the same is valid also for videos and propose the first set of approaches to automatically generate tags describing the contents of software development video tutorials. We investigate seven tagging approaches for this purpose, some using information retrieval techniques and leveraging only the information in the videos, others relying on external sources of information, such as StackOverflow, as well as two out-of-the-box commercial video tagging approaches. We evaluated 19 different configurations of these tagging approaches and the results of a user study showed that some of the information retrieval-based approaches performed the best and were able to recommend tags that developers consider relevant for describing programming videos.",
              "pageNumber": 222,
              "isPageNumberRoman": false
            },
            {
              "id": "1GPWXVsfDk6mBRP5WjMEhk",
              "type": "authorPaper",
              "text": "Classification of APIs by Hierarchical Clustering",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2v9V1LqIFYYVjMhRIeEs3v/4N0UdyVH3nIDyokrYsNoDq.pdf",
              "extraLocations": [],
              "authorNames": "Johannes Härtel (University of Koblenz-Landau), Hakan Aksu (University of Koblenz-Landau), Ralf Lämmel (University of Koblenz-Landau)",
              "abstract": "APIs can be classified according to the programming domains (e.g., GUIs, databases, collections, or security) that they address. Such classification is vital in searching repositories (e.g., the Maven Central Repository for Java) and for understanding the technology stack used in software projects. We apply hierarchical clustering to a curated suite of Java APIs to compare the computed API clusters with preexisting API classifications. Clustering entails various parameters (e.g., the choice of IDF versus LSI versus LDA). We describe the corresponding variability in terms of a feature model. We exercise all possible con gurations to determine the maximum correlation with respect to two baselines: i) a smaller suite of APIs manually classified in previous research; ii) a larger suite of APIs from the Maven Central Repository, thereby taking advantage of crowd-sourced classification while relying on a threshold-based approach for identifying important APIs and versions thereof, subject to an API dependency analysis on GitHub. We discuss the configurations found in this way and we examine the influence of particular features on the correlation between computed clusters and baselines. To this end, we also leverage interactive exploration of the parameter space and the resulting dendrograms. In this manner, we can also identify issues with the use of classifiers (e.g., missing classifiers) in the baselines and limitations of the clustering approach.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Classification of APIs by Hierarchical Clustering 1521465056357 Johannes Härtel University of Koblenz-Landau johanneshaertel@uni-koblenz.de Hakan Aksu University of Koblenz-Landau hakanaksu@uni-koblenz.de Ralf Lämmel University of Koblenz-Landau rlaemmel@gmail.com APIs Hierarchical clustering. Feature modeling Maven Central Repository GitHub Clustering exploration APIs can be classified according to the programming domains (e.g., GUIs, databases, collections, or security) that they address. Such classification is vital in searching repositories (e.g., the Maven Central Repository for Java) and for understanding the technology stack used in software projects. We apply hierarchical clustering to a curated suite of Java APIs to compare the computed API clusters with preexisting API classifications. Clustering entails various parameters (e.g., the choice of IDF versus LSI versus LDA). We describe the corresponding variability in terms of a feature model. We exercise all possible con gurations to determine the maximum correlation with respect to two baselines: i) a smaller suite of APIs manually classified in previous research; ii) a larger suite of APIs from the Maven Central Repository, thereby taking advantage of crowd-sourced classification while relying on a threshold-based approach for identifying important APIs and versions thereof, subject to an API dependency analysis on GitHub. We discuss the configurations found in this way and we examine the influence of particular features on the correlation between computed clusters and baselines. To this end, we also leverage interactive exploration of the parameter space and the resulting dendrograms. In this manner, we can also identify issues with the use of classifiers (e.g., missing classifiers) in the baselines and limitations of the clustering approach.",
              "pageNumber": 233,
              "isPageNumberRoman": false
            },
            {
              "id": "1lkuLetFbkkE9O98d4pzEn",
              "type": "authorPaper",
              "text": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf",
              "extraLocations": [],
              "authorNames": "Jun MA (Nanjing University), Shaocong LIU (Nanjing University), Yanyan JIANG (Nanjing University), Xianping TAO (Nanjing University), Chang XU (Nanjing University), Jian LU (Nanjing University)",
              "abstract": "Services are widely used in Android apps. However, services may leak such that they are no longer used but cannot be recycled by the Garbage Collector. Service leaks may cause an app to misbehave, and are vulnerable to malicious external apps when the service is exported or it is accessible through other exported services. In this paper, we present LESDroid for exported service leaks detection. LESDroid automatically generates service instances and workloads (start/stop or bind/unbind of exported services) of the app under test, and applies a designated oracle to the heap snapshot for service leak detection. We evaluated LESDroid using 375 commercial apps, and found 97 leaked services and 98 distinct leak entries in 70 apps.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications 1521357989189 Jun MA Nanjing University majun@nju.edu.cn Shaocong LIU Nanjing University 141270022@snju.edu.cn Yanyan JIANG Nanjing University jyy@nju.edu.cn Xianping TAO Nanjing University txp@nju.edu.cn Chang XU Nanjing University changxu@nju.edu.cn Jian LU Nanjing University lj@nju.edu.cn Android testing memory leak vulnerability service Services are widely used in Android apps. However, services may leak such that they are no longer used but cannot be recycled by the Garbage Collector. Service leaks may cause an app to misbehave, and are vulnerable to malicious external apps when the service is exported or it is accessible through other exported services. In this paper, we present LESDroid for exported service leaks detection. LESDroid automatically generates service instances and workloads (start/stop or bind/unbind of exported services) of the app under test, and applies a designated oracle to the heap snapshot for service leak detection. We evaluated LESDroid using 375 commercial apps, and found 97 leaked services and 98 distinct leak entries in 70 apps.",
              "pageNumber": 244,
              "isPageNumberRoman": false
            },
            {
              "id": "4zNVhu0Jj6hOEYT5Z87kYh",
              "type": "authorPaper",
              "text": "Do Developers Update Third-Party Libraries in Mobile Apps?",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf",
              "extraLocations": [],
              "authorNames": "Pasquale Salza (USI Università della Svizzera Italiana), Fabio Palomba (University of Zurich), Dario Di Nucci (Vrije Universiteit Brussel), Cosmo D'Uva (University of Salerno), Andrea De Lucia (University of Salerno), Filomena Ferrucci (University of Salerno)",
              "abstract": "One of the most common strategies to develop new software is to take advantage of existing source code, which is available in comprehensive packages called third-party libraries. As for all software systems, even these libraries change to offer new functionalities and fix bugs or security issues. The way the changes are propagated has been studied by researchers, interested in understanding their impact on the non-functional attributes of the systems source code. While the research community mainly focused on the change propagation phenomenon in the context of traditional applications, only little is known regarding the mobile context. In this paper, we aim at bridging this gap by conducting an empirical study on the evolution history of 291 mobile apps, by investigating (i) whether mobile developers actually update third-party libraries, (ii) which are the categories of libraries with respect to the developers' proneness to update their apps, (iii) what are the common patterns followed by developers when updating a software library, and (iv) whether high-and low-rated apps present peculiar update patterns. The results of the study showed that mobile developers rarely update their apps with respect to the used libraries, and when they do, they mainly tend to update the libraries related to the Graphical User Interface, with the aim of keeping the mobile apps updated with the latest design tendencies. In some cases developers ignore updates because of a poor awareness of the benefits, or a too high cost/benefit ratio. Finally, high-and low-rated apps present strong differences.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Do Developers Update Third-Party Libraries in Mobile Apps? 1522065738181 Pasquale Salza USI Università della Svizzera Italiana pasquale.salza@usi.ch Fabio Palomba University of Zurich palomba@ifi.uzh.ch Dario Di Nucci Vrije Universiteit Brussel ddinucci@vub.ac.be Cosmo D'Uva University of Salerno cosmoduva88@gmail.com Andrea De Lucia University of Salerno adelucia@unisa.it Filomena Ferrucci University of Salerno fferrucci@unisa.it Third-Party Libraries API Usage Empirical Study Mining Software Repository One of the most common strategies to develop new software is to take advantage of existing source code, which is available in comprehensive packages called third-party libraries. As for all software systems, even these libraries change to offer new functionalities and fix bugs or security issues. The way the changes are propagated has been studied by researchers, interested in understanding their impact on the non-functional attributes of the systems source code. While the research community mainly focused on the change propagation phenomenon in the context of traditional applications, only little is known regarding the mobile context. In this paper, we aim at bridging this gap by conducting an empirical study on the evolution history of 291 mobile apps, by investigating (i) whether mobile developers actually update third-party libraries, (ii) which are the categories of libraries with respect to the developers' proneness to update their apps, (iii) what are the common patterns followed by developers when updating a software library, and (iv) whether high-and low-rated apps present peculiar update patterns. The results of the study showed that mobile developers rarely update their apps with respect to the used libraries, and when they do, they mainly tend to update the libraries related to the Graphical User Interface, with the aim of keeping the mobile apps updated with the latest design tendencies. In some cases developers ignore updates because of a poor awareness of the benefits, or a too high cost/benefit ratio. Finally, high-and low-rated apps present strong differences.",
              "pageNumber": 255,
              "isPageNumberRoman": false
            },
            {
              "id": "2rfNFKhQC4cGSZ3F0V1vtO",
              "type": "authorPaper",
              "text": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf",
              "extraLocations": [],
              "authorNames": "Yao Guo (Peking University), Yuanchun Li (Peking University), Ziyue Yang (Peking University), Xiangqun Chen (Peking University)",
              "abstract": "As the number of mobile apps increases rapidly, many users may install dozens of, or even hundreds of, apps on a single smartphone. However, many apps on the same phone may contain similar or even the same feature, resulting in feature redundancy. For example, multiple apps may check weather forecast for the user periodically. Feature redundancy may cause many undesirable side-effects such as consuming extra CPU resources and network traffic. This paper proposes a method to identify common features within an app, and evaluated it on over four thousand popular apps. Experiments on a list of apps installed on actual smartphones show that the extent of feature redundancy is very high. We found that more than 85% of user smartphones contain redundant features, while in extreme cases, some smartphones may contain dozens of apps with the same feature. In addition, our user surveys found out that about half of the redundant features are undesirable from the end users' perspective, which indicates that feature redundancy has become an important issue that needs to be investigated further.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 What's Inside My App?: Understanding Feature Redundancy in Mobile Apps 1521517379649 Yao Guo Peking University yaoguo@pku.edu.cn Yuanchun Li Peking University liyuanchun@pku.edu.cn Ziyue Yang Peking University yzydzyx@pku.edu.cn Xiangqun Chen Peking University cherry@pku.edu.cn Mobile apps feature app bloat redundancy Android As the number of mobile apps increases rapidly, many users may install dozens of, or even hundreds of, apps on a single smartphone. However, many apps on the same phone may contain similar or even the same feature, resulting in feature redundancy. For example, multiple apps may check weather forecast for the user periodically. Feature redundancy may cause many undesirable side-effects such as consuming extra CPU resources and network traffic. This paper proposes a method to identify common features within an app, and evaluated it on over four thousand popular apps. Experiments on a list of apps installed on actual smartphones show that the extent of feature redundancy is very high. We found that more than 85% of user smartphones contain redundant features, while in extreme cases, some smartphones may contain dozens of apps with the same feature. In addition, our user surveys found out that about half of the redundant features are undesirable from the end users' perspective, which indicates that feature redundancy has become an important issue that needs to be investigated further.",
              "pageNumber": 266,
              "isPageNumberRoman": false
            },
            {
              "id": "22ClkW2zOKJQd3MdBSbew4",
              "type": "authorPaper",
              "text": "Impacts of Coding Practices on Readability",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6w0SFpqKAKc3TBdO05ttCj/2MK67SaEQGfvRUPQ9pFzVl.pdf",
              "extraLocations": [],
              "authorNames": "Rodrigo Magalhães dos Santos (Instituto de Pesquisas Tecnológicas de São Paulo - IPT-SP), Marco Aurélio Gerosa (Northern Arizona University - NAU)",
              "abstract": "Several conventions and standards aim to improve maintain-ability of software code. However, low levels of code readabil- ity perceived by developers still represent a barrier to their daily work. In this paper, we describe a survey that assessed the impact of a set of Java coding practices on the readability perceived by software developers. While some practices pro- moted an enhancement of readability, others did not show statistically signicant effects. Interestingly, one of the prac- tices worsened the readability. Our results may help to iden- tify coding conventions with a positive impact on readability and, thus, guide the creation of coding standards.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Impacts of Coding Practices on Readability 1521477767546 Rodrigo Magalhães dos Santos Instituto de Pesquisas Tecnológicas de São Paulo - IPT-SP rodrigo.santos@ipt.br Marco Aurélio Gerosa Northern Arizona University - NAU Marco.Gerosa@nau.edu Code Readability Code Comprehension Programming Style Coding Best Practices Software Developers' Opinions Survey Several conventions and standards aim to improve maintain-ability of software code. However, low levels of code readabil- ity perceived by developers still represent a barrier to their daily work. In this paper, we describe a survey that assessed the impact of a set of Java coding practices on the readability perceived by software developers. While some practices pro- moted an enhancement of readability, others did not show statistically signicant effects. Interestingly, one of the prac- tices worsened the readability. Our results may help to iden- tify coding conventions with a positive impact on readability and, thus, guide the creation of coding standards.",
              "pageNumber": 277,
              "isPageNumberRoman": false
            },
            {
              "id": "2fAIFl2y0irLEhhyRhkKpm",
              "type": "authorPaper",
              "text": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf",
              "extraLocations": [],
              "authorNames": "Sarah Fakhoury (Washington State University), Yuzhan Ma (Washington State University), Venera Arnaoudova (Washington State University), Olusola Adesope (Washington State University)",
              "abstract": "It has been well documented that a large portion of the cost of any software lies in the time spent by developers in understanding a program's source code before any changes can be undertaken. One of the main contributors to software comprehension, by subsequent developers or by the authors themselves, has to do with the quality of the lexicon, (i.e., the identifiers and comments) that is used by developers to embed domain concepts and to communicate with their teammates. In fact, previous research shows that there is a positive correlation between the quality of identifiers and the quality of a software project. Results suggest that poor quality lexicon impairs program comprehension and consequently increases the effort that developers must spend to maintain the software. However, we do not yet know or have any empirical evidence, of the relationship between the quality of the lexicon and the cognitive load that developers experience when trying to understand a piece of software. Given the associated costs, there is a critical need to empirically characterize the impact of the quality of the lexicon on developers' ability to comprehend a program. In this study, we explore the effect of poor source code lexicon and readability on developers' cognitive load as measured by a cutting-edge and minimally invasive functional brain imaging technique called functional Near Infrared Spectroscopy (fNIRS). Additionally, while developers perform software comprehension tasks, we map cognitive load data to source code identifiers using an eye tracking device. Our results show that the presence of linguistic antipatterns in source code significantly increases the developers' cognitive load.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load 1521629515208 Sarah Fakhoury Washington State University sarah.fakhoury@wsu.edu Yuzhan Ma Washington State University yuzhan.ma@wsu.edu Venera Arnaoudova Washington State University venera.arnaoudova@wsu.edu Olusola Adesope Washington State University olusola.adesope@wsu.edu Source code lexicon biometrics fNIRS cognitive load eyetracking program comprehension It has been well documented that a large portion of the cost of any software lies in the time spent by developers in understanding a program's source code before any changes can be undertaken. One of the main contributors to software comprehension, by subsequent developers or by the authors themselves, has to do with the quality of the lexicon, (i.e., the identifiers and comments) that is used by developers to embed domain concepts and to communicate with their teammates. In fact, previous research shows that there is a positive correlation between the quality of identifiers and the quality of a software project. Results suggest that poor quality lexicon impairs program comprehension and consequently increases the effort that developers must spend to maintain the software. However, we do not yet know or have any empirical evidence, of the relationship between the quality of the lexicon and the cognitive load that developers experience when trying to understand a piece of software. Given the associated costs, there is a critical need to empirically characterize the impact of the quality of the lexicon on developers' ability to comprehend a program. In this study, we explore the effect of poor source code lexicon and readability on developers' cognitive load as measured by a cutting-edge and minimally invasive functional brain imaging technique called functional Near Infrared Spectroscopy (fNIRS). Additionally, while developers perform software comprehension tasks, we map cognitive load data to source code identifiers using an eye tracking device. Our results show that the presence of linguistic antipatterns in source code significantly increases the developers' cognitive load.",
              "pageNumber": 286,
              "isPageNumberRoman": false
            },
            {
              "id": "GBSzjMapZlPcL82H5doNl",
              "type": "authorPaper",
              "text": "Assessing an Architecture's Ability to Support Feature Evolution",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf",
              "extraLocations": [],
              "authorNames": "Ran Mo (Drexel University), Yuanfang Cai (Drexel University), Rick Kazman (SEU/CMU and U. of Hawaii), Qiong Feng (Drexel University)",
              "abstract": "Enabling rapid feature delivery is essential for product success and is therefore a goal of software architecture design. But how can we determine if and to what extent an architecture is \"good enough\" to support feature addition and evolution, or determine if a refactoring effort is successful in that features can be added more easily? In this paper, we contribute a concept called the Feature Space, and a formal definition of Feature Dependency, derived from a software project’s revision history. We capture the dependency relations among the features of a system in a feature dependency structure matrix (FDSM), using features as first-class design elements. We also propose a Feature Decoupling Level (FDL) metric that can be used to measure the level of independence among features. Our investigation of 17 open source projects shows that files within each feature space are much more likely to be changed together, hence each feature space forms a meaningful maintainable unit that should be treated separately. The data also show that the history-based FDL is highly correlated a structure-based maintainability metric: Decoupling Level (DL). When we examine a project’s evolution history, we see that if a system is well-modularized, it is more likely that features can be added independently. For shorter periods of time, however, FDL and DL may not be consistent, e.g., when the addition of new features deviates from the designed architecture or does not involve parts of the system that have architecture flaws. In such cases, FDL and FDSM can be used to monitor potential architecture degradation caused by improper feature addition.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Assessing an Architecture's Ability to Support Feature Evolution 1521412107045 Ran Mo Drexel University rm859@drexel.edu Yuanfang Cai Drexel University yc349@drexel.edu Rick Kazman SEU/CMU and U. of Hawaii kazman@hawaii.edu Qiong Feng Drexel University qf28@drexel.edu Software Architecture Software Maintenance Software Evolution Enabling rapid feature delivery is essential for product success and is therefore a goal of software architecture design. But how can we determine if and to what extent an architecture is \"good enough\" to support feature addition and evolution, or determine if a refactoring effort is successful in that features can be added more easily? In this paper, we contribute a concept called the Feature Space, and a formal definition of Feature Dependency, derived from a software project’s revision history. We capture the dependency relations among the features of a system in a feature dependency structure matrix (FDSM), using features as first-class design elements. We also propose a Feature Decoupling Level (FDL) metric that can be used to measure the level of independence among features. Our investigation of 17 open source projects shows that files within each feature space are much more likely to be changed together, hence each feature space forms a meaningful maintainable unit that should be treated separately. The data also show that the history-based FDL is highly correlated a structure-based maintainability metric: Decoupling Level (DL). When we examine a project’s evolution history, we see that if a system is well-modularized, it is more likely that features can be added independently. For shorter periods of time, however, FDL and DL may not be consistent, e.g., when the addition of new features deviates from the designed architecture or does not involve parts of the system that have architecture flaws. In such cases, FDL and FDSM can be used to monitor potential architecture degradation caused by improper feature addition.",
              "pageNumber": 297,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Early Research Achievement",
          "lineItems": [
            {
              "id": "217cSJ1r3PMHArKNt5bILn",
              "type": "authorPaper",
              "text": "Code Phonology: An Exploration into the Vocalization of Code",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf",
              "extraLocations": [],
              "authorNames": "Felienne Hermans (Delft University of Technology), Alaaeddin Swidan (Delft University of Technology), Efthimia Aivaloglou (Open University of the Netherlands)",
              "abstract": "When children learn to read, they almost invariably start with oral reading: reading the words and sentences out loud. Experiments have shown that when novices read text aloud, their comprehension is better then when reading in silence. This is attributed to the fact that reading aloud focuses the child's attention to the text. We hypothesize that reading code aloud could support program comprehension in a similar way, encouraging novice programmers to pay attention to details. To this end we explore how novices read code, and we found that novice programmers vocalize code in different ways, sometimes changing vocalization within a code snippet. We thus believe that in order to teach novices to read code aloud, an agreed upon way of reading code is needed. As such, this paper proposes studying code phonology, ultimately leading to a shared understanding about how code should be read aloud, such that this can be practiced. In addition to being valuable as an educational and diagnostic tool for novices, we believe that pair programmers could also benefit from standardized communication about code, and that it could support improved tools for visually and physically disabled programmers.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Code Phonology: An Exploration into the Vocalization of Code 1521470865976 Felienne Hermans Delft University of Technology f.f.j.hermans@tudelft.nl Alaaeddin Swidan Delft University of Technology Alaaeddin.Swidan@tudelft.nl Efthimia Aivaloglou Open University of the Netherlands fai@ou.nl programming education K 12 phonology When children learn to read, they almost invariably start with oral reading: reading the words and sentences out loud. Experiments have shown that when novices read text aloud, their comprehension is better then when reading in silence. This is attributed to the fact that reading aloud focuses the child's attention to the text. We hypothesize that reading code aloud could support program comprehension in a similar way, encouraging novice programmers to pay attention to details. To this end we explore how novices read code, and we found that novice programmers vocalize code in different ways, sometimes changing vocalization within a code snippet. We thus believe that in order to teach novices to read code aloud, an agreed upon way of reading code is needed. As such, this paper proposes studying code phonology, ultimately leading to a shared understanding about how code should be read aloud, such that this can be practiced. In addition to being valuable as an educational and diagnostic tool for novices, we believe that pair programmers could also benefit from standardized communication about code, and that it could support improved tools for visually and physically disabled programmers.",
              "pageNumber": 308,
              "isPageNumberRoman": false
            },
            {
              "id": "7qwPa0MWSxIlgiHCU5A2I2",
              "type": "authorPaper",
              "text": "Towards Just-in-Time Refactoring Recommenders",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf",
              "extraLocations": [],
              "authorNames": "Jevgenija Pantiuchina (Università della Svizzera italiana), Gabriele Bavota (Università della Svizzera italiana), Michele Tufano (College of William and Mary), Denys Poshyvanyk (College of William and Mary)",
              "abstract": "Empirical studies have provided ample evidence that low code quality is generally associated with lower maintainability. For this reason, tools have been developed to automatically detect design flaws (e.g., code smells). However, these tools are not able to prevent the introduction of design flaws. This means that the code has to experience a quality decay (with a consequent increase of maintenance/evolution costs) before state-of-the-art tools can be applied to identify and refactor the design flaws. Our goal is to develop a new generation of refactoring recommenders aimed at preventing, via refactoring operations, the introduction of design flaws rather than fixing them once they already affect the system. We refer to such a novel perspective on software refactoring as just-in-time refactoring. In this paper, we make a first step towards this direction, presenting an approach able to predict which classes will be affected in the future by code smells.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Towards Just-in-Time Refactoring Recommenders 1521196317951 Jevgenija Pantiuchina Università della Svizzera italiana jevgenija.pantiuchina@usi.ch Gabriele Bavota Università della Svizzera italiana gabriele.bavota@usi.ch Michele Tufano College of William and Mary mtufano@cs.wm.edu Denys Poshyvanyk College of William and Mary denys@cs.wm.edu refactoring code smells Empirical studies have provided ample evidence that low code quality is generally associated with lower maintainability. For this reason, tools have been developed to automatically detect design flaws (e.g., code smells). However, these tools are not able to prevent the introduction of design flaws. This means that the code has to experience a quality decay (with a consequent increase of maintenance/evolution costs) before state-of-the-art tools can be applied to identify and refactor the design flaws. Our goal is to develop a new generation of refactoring recommenders aimed at preventing, via refactoring operations, the introduction of design flaws rather than fixing them once they already affect the system. We refer to such a novel perspective on software refactoring as just-in-time refactoring. In this paper, we make a first step towards this direction, presenting an approach able to predict which classes will be affected in the future by code smells.",
              "pageNumber": 312,
              "isPageNumberRoman": false
            },
            {
              "id": "1v3VgBrjsywn7KoLcnG8Jf",
              "type": "authorPaper",
              "text": "Toward Refactoring Evaluation with Code Naturalness",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1wLm0llzu4fwdsdZMv5CbV/1ci2pkCSPuLgIPN21eTZIQ.pdf",
              "extraLocations": [],
              "authorNames": "Ryo Arima (Osaka University), Yoshiki Higo (Osaka University), Shinji Kusumoto (Osaka University)",
              "abstract": "Refactoring evaluation is a challenging research topic because right and wrong of refactoring depend on various aspects of development context such as developers' skills, development cost, deadline and so on. Many techniques have been proposed to evaluate refactoring objectively. However, those techniques do not consider individual contexts of software development. Currently, the authors are trying to evaluate refactoring automatically and objectively with considering development contexts. In this paper, we propose to evaluate refactoring with code naturalness. Our technique is based on a hypothesis: if a given refactoring raises the naturalness of existing code, the refactoring is beneficial. In this paper, we also report our pilot study on open source software.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Toward Refactoring Evaluation with Code Naturalness 1521194410690 Ryo Arima Osaka University r-arima@ist.osaka-u.ac.jp Yoshiki Higo Osaka University r-arima@ist.osaka-u.ac.jp Shinji Kusumoto Osaka University kusumoto@ist.osaka-u.ac.jp Refactoring naturalness n-gram language model Refactoring evaluation is a challenging research topic because right and wrong of refactoring depend on various aspects of development context such as developers' skills, development cost, deadline and so on. Many techniques have been proposed to evaluate refactoring objectively. However, those techniques do not consider individual contexts of software development. Currently, the authors are trying to evaluate refactoring automatically and objectively with considering development contexts. In this paper, we propose to evaluate refactoring with code naturalness. Our technique is based on a hypothesis: if a given refactoring raises the naturalness of existing code, the refactoring is beneficial. In this paper, we also report our pilot study on open source software.",
              "pageNumber": 316,
              "isPageNumberRoman": false
            },
            {
              "id": "6Hrr5Gwbxmx3IgJS6BOWiP",
              "type": "authorPaper",
              "text": "RepliComment: Identifying Clones in Code Comments",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2pliSydiWl7XslV2J2egVH/3s77fQ7QuChavo8uJWTye5.pdf",
              "extraLocations": [],
              "authorNames": "Arianna Blasi (Università della Svizzera Italiana; IMDEA Software Institute), Alessandra Gorla (IMDEA Software Institute)",
              "abstract": "Code comments are the primary means to document implementation and ease program comprehension. Thus, their quality should be a primary concern to improve program maintenance. While a lot of effort has been dedicated to detect bad smell in code, little work focuses on comments. In this paper we start working in this direction by detecting clones in comments. Our initial investigation shows that even well known projects have several comment clones, and just as clones are bad smell in code, they may be for comments. A manual analysis of the clones we identified revealed several issues in real Java projects.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 RepliComment: Identifying Clones in Code Comments 1521544167987 Arianna Blasi Università della Svizzera Italiana; IMDEA Software Institute arianna.blasi@usi.ch Alessandra Gorla IMDEA Software Institute alessandra.gorla@imdea.org Code comments Software quality Clones Bad smell Code comments are the primary means to document implementation and ease program comprehension. Thus, their quality should be a primary concern to improve program maintenance. While a lot of effort has been dedicated to detect bad smell in code, little work focuses on comments. In this paper we start working in this direction by detecting clones in comments. Our initial investigation shows that even well known projects have several comment clones, and just as clones are bad smell in code, they may be for comments. A manual analysis of the clones we identified revealed several issues in real Java projects.",
              "pageNumber": 320,
              "isPageNumberRoman": false
            },
            {
              "id": "19BqoB6proX0h4XIdP9fAM",
              "type": "authorPaper",
              "text": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf",
              "extraLocations": [],
              "authorNames": "Aoi Takahashi (Tokyo Institute of Technology), Natthawute Sae-Lim (Tokyo Institute of Technology), Shinpei Hayashi (Tokyo Institute of Technology), Motoshi Saeki (Tokyo Institute of Technology)",
              "abstract": "Bug localization is a technique that has been proposed to support the process of identifying the locations of bugs specified in a bug report. A traditional approach such as information retrieval (IR)-based bug localization calculates the similarity between the bug description and the source code and suggests locations that are likely to contain the bug. However, while many approaches have been proposed to improve the accuracy, the likelihood of each module having a bug is often overlooked or they are treated equally, whereas this may not be the case. For example, modules having code smells have been found to be more prone to changes and faults. Therefore, in this paper, we explore a first step toward leveraging code smells to improve bug localization. By combining the code smell severity with the textual similarity from IR-based bug localization, we can identify the modules that are not only similar to the bug description but also have a higher likelihood of containing bugs. Our preliminary evaluation on four open source projects shows that our technique can improve the baseline approach by 142.25% and 30.50% on average for method and class levels, respectively.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 A Preliminary Study on Using Code Smells to Improve Bug Localization 1521100178289 Aoi Takahashi Tokyo Institute of Technology takahashi-a-at@se.cs.titech.ac.jp Natthawute Sae-Lim Tokyo Institute of Technology natthawute@se.cs.titech.ac.jp Shinpei Hayashi Tokyo Institute of Technology hayashi@se.cs.titech.ac.jp Motoshi Saeki Tokyo Institute of Technology saeki@se.cs.titech.ac.jp bug localization code smell information retrieval Bug localization is a technique that has been proposed to support the process of identifying the locations of bugs specified in a bug report. A traditional approach such as information retrieval (IR)-based bug localization calculates the similarity between the bug description and the source code and suggests locations that are likely to contain the bug. However, while many approaches have been proposed to improve the accuracy, the likelihood of each module having a bug is often overlooked or they are treated equally, whereas this may not be the case. For example, modules having code smells have been found to be more prone to changes and faults. Therefore, in this paper, we explore a first step toward leveraging code smells to improve bug localization. By combining the code smell severity with the textual similarity from IR-based bug localization, we can identify the modules that are not only similar to the bug description but also have a higher likelihood of containing bugs. Our preliminary evaluation on four open source projects shows that our technique can improve the baseline approach by 142.25% and 30.50% on average for method and class levels, respectively.",
              "pageNumber": 324,
              "isPageNumberRoman": false
            },
            {
              "id": "pWAxT4QYcGIqprpncWSV6",
              "type": "authorPaper",
              "text": "What Design Topics do Developers Discuss?",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf",
              "extraLocations": [],
              "authorNames": "Giovanni Viviani (University of British Columbia), Calahan Janik-Jones (University of Toronto), Michalis Famelis (Universite de Montreal), Xin Xia (Monash University), Gail Murphy (University of British Columbia)",
              "abstract": "When contributing code to a software system, developers are often confronted with the hard task of understanding and adhering to the system's design. This task is often made more difficult by the lack of explicit design information. Often, recorded design information occurs only embedded in discussions between developers. If this design information could be identified automatically and put into a form useful to developers, many development tasks could be eased, such as directing questions that arise during code review, tracking design changes that might affect desired system qualities, and helping developers understand why the code is as it is. In this paper, we take an initial step towards this goal, considering how design information appears in pull request discussions and manually categorizing 275 paragraphs from those discussions that contain design information to learn about what kinds of design topics are discussed.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 What Design Topics do Developers Discuss? 1521236868579 Giovanni Viviani University of British Columbia vivianig@cs.ubc.ca Calahan Janik-Jones University of Toronto cal.janik.jones@mail.utoronto.ca Michalis Famelis Universite de Montreal famelis@iro.umontreal.ca Xin Xia Monash University xin.xia@monash.edu Gail Murphy University of British Columbia murphy@cs.ubc.ca software tools software design empirical When contributing code to a software system, developers are often confronted with the hard task of understanding and adhering to the system's design. This task is often made more difficult by the lack of explicit design information. Often, recorded design information occurs only embedded in discussions between developers. If this design information could be identified automatically and put into a form useful to developers, many development tasks could be eased, such as directing questions that arise during code review, tracking design changes that might affect desired system qualities, and helping developers understand why the code is as it is. In this paper, we take an initial step towards this goal, considering how design information appears in pull request discussions and manually categorizing 275 paragraphs from those discussions that contain design information to learn about what kinds of design topics are discussed.",
              "pageNumber": 328,
              "isPageNumberRoman": false
            },
            {
              "id": "39ZZ24UJSLcPx1uxLc8tiK",
              "type": "authorPaper",
              "text": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf",
              "extraLocations": [],
              "authorNames": "Keigo Naitou (Osaka University), Akito Tanikado (Osaka University), Shinsuke Matsumoto (Osaka University), Yoshiki Higo (Osaka University), Shinji Kusumoto (Osaka University), Hiroyuki Kirinuki (Nippon Telegraph and Telephone Corporation), Toshiyuki Kurabayashi (Nippon Telegraph and Telephone Corporation), Haruto Tanno (Nippon Telegraph and Telephone Corporation)",
              "abstract": "Automated program repair (in short, APR) has been attractingmuch attention. A variety of APR techniques have been proposed, and they have been evaluated with actual bugs in open sourcesoftware. Currently, the authors are trying to introduce APR tech-niques to industrial software development (in short, ISD) to reducedevelopment cost drastically. However, at this moment, there areno studies that report evaluations of APR techniques on ISD. Inthis paper, we report our ongoing application of APR techniquesto ISD and discuss some barriers that we found on the application.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Toward Introducing Automated Program Repair Techniques to Industrial Software Development 1521272970226 Keigo Naitou Osaka University k-naitou@ist.osaka-u.ac.jp Akito Tanikado Osaka University a-tanikd@ist.osaka-u.ac.jp Shinsuke Matsumoto Osaka University shinsuke@ist.osaka-u.ac.jp Yoshiki Higo Osaka University higo@ist.osaka-u.ac.jp Shinji Kusumoto Osaka University kusumoto@ist.osaka-u.ac.jp Hiroyuki Kirinuki Nippon Telegraph and Telephone Corporation kirinuki.hiroyuki@lab.ntt.co.jp Toshiyuki Kurabayashi Nippon Telegraph and Telephone Corporation kurabayashi.toshiyuki@lab.ntt.co.jp Haruto Tanno Nippon Telegraph and Telephone Corporation tanno.haruto@lab.ntt.co.jp Automated program repair Industrial application Automated program repair (in short, APR) has been attractingmuch attention. A variety of APR techniques have been proposed, and they have been evaluated with actual bugs in open sourcesoftware. Currently, the authors are trying to introduce APR tech-niques to industrial software development (in short, ISD) to reducedevelopment cost drastically. However, at this moment, there areno studies that report evaluations of APR techniques on ISD. Inthis paper, we report our ongoing application of APR techniquesto ISD and discuss some barriers that we found on the application.",
              "pageNumber": 332,
              "isPageNumberRoman": false
            },
            {
              "id": "5gb31dPgzaJIZpwkIu8PT6",
              "type": "authorPaper",
              "text": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf",
              "extraLocations": [],
              "authorNames": "Jordan Ott (Chapman University), Abigail Atchison (Chapman University), Paul Harnack (Chapman University), Natalie Best (Chapman University), Haley Anderson (Chapman University), Cristiano Firmani (Chapman University), Erik Linstead (Chapman University)",
              "abstract": "We demonstrate the ability of deep architectures, specifically convolutional neural networks, to learn and differentiate the lexical features of different programming languages presented in coding video tutorials found on the Internet. We analyze over 17,000 video frames containing examples of Java, Python, and other textual and non-textual objects. Our results indicate that not only can computer vision models based on deep architectures be taught to differentiate among programming languages with over 98% accuracy, but can learn language-specific lexical features in the process. This provides a powerful mechanism for carrying out program comprehension research on repositories where source code is represented with imagery rather than text, while simultaneously avoiding the computational overhead of optical character recognition.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks 1521313513263 Jordan Ott Chapman University ott109@mail.chapman.edu Abigail Atchison Chapman University atchi102@mail.chapman.edu Paul Harnack Chapman University harna100@mail.chapman.edu Natalie Best Chapman University best120@mail.chapman.edu Haley Anderson Chapman University ander427@mail.chapman.edu Cristiano Firmani Chapman University firma103@mail.chapman.edu Erik Linstead Chapman University linstead@chapman.edu deep learning convolutional neural networks program syntax We demonstrate the ability of deep architectures, specifically convolutional neural networks, to learn and differentiate the lexical features of different programming languages presented in coding video tutorials found on the Internet. We analyze over 17,000 video frames containing examples of Java, Python, and other textual and non-textual objects. Our results indicate that not only can computer vision models based on deep architectures be taught to differentiate among programming languages with over 98% accuracy, but can learn language-specific lexical features in the process. This provides a powerful mechanism for carrying out program comprehension research on repositories where source code is represented with imagery rather than text, while simultaneously avoiding the computational overhead of optical character recognition.",
              "pageNumber": 336,
              "isPageNumberRoman": false
            },
            {
              "id": "3Irtx5hUZQEtIQ6KsfB63h",
              "type": "authorPaper",
              "text": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf",
              "extraLocations": [],
              "authorNames": "Masayuki Doi (Osaka University), Yoshiki Higo (Osaka University), Ryo Arima (Osaka University), Kento Shimonaka (Osaka University), Shinji Kusumoto (Osaka University)",
              "abstract": "Recently, a variety of studies have been conducted on source code analysis. If auto-generated code is included in the target source code, it is usually removed in a preprocessing phase because the presence of auto-generated code may have negative effects on source code analysis. A straightforward way to remove auto-generated code is searching special comments that are included in the files of auto-generated code. However, it becomes impossible to identify auto-generated code with the way if such special comments have disappeared for some reasons. It is obvious that it takes too much effort to see source files one by one manually. In this paper, we propose a new technique to identify auto-generated code by using the naturalness of auto-generated code. We used a golden set that includes thousands of hand-made source files and source files generated by four kinds of compiler-compilers. Through the evaluation with the dataset, we confirmed that our technique was able to identify auto-generated code with over 99% precision and recall for all the cases.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?— 1521190374434 Masayuki Doi Osaka University m-doi@ist.osaka-u.ac.jp Yoshiki Higo Osaka University higo@ist.osaka-u.ac.jp Ryo Arima Osaka University r-arima@ist.osaka-u.ac.jp Kento Shimonaka Osaka University s-kento@ist.osaka-u.ac.jp Shinji Kusumoto Osaka University kusumoto@ist.osaka-u.ac.jp Auto-generated code N-gram language model Source code analysis Recently, a variety of studies have been conducted on source code analysis. If auto-generated code is included in the target source code, it is usually removed in a preprocessing phase because the presence of auto-generated code may have negative effects on source code analysis. A straightforward way to remove auto-generated code is searching special comments that are included in the files of auto-generated code. However, it becomes impossible to identify auto-generated code with the way if such special comments have disappeared for some reasons. It is obvious that it takes too much effort to see source files one by one manually. In this paper, we propose a new technique to identify auto-generated code by using the naturalness of auto-generated code. We used a golden set that includes thousands of hand-made source files and source files generated by four kinds of compiler-compilers. Through the evaluation with the dataset, we confirmed that our technique was able to identify auto-generated code with over 99% precision and recall for all the cases.",
              "pageNumber": 340,
              "isPageNumberRoman": false
            },
            {
              "id": "5BO5GFJPvbRdKJvNnwmcwh",
              "type": "authorPaper",
              "text": "Augmenting Source Code Lines with Sample Variable Values",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/01RNRJpkeZQdMt01mE0INJ/7KfXNr42kDvTSWAikYMOEj.pdf",
              "extraLocations": [],
              "authorNames": "Matúš Sulír (Technical University of Košice), Jaroslav Porubän (Technical University of Košice)",
              "abstract": "Source code is inherently abstract, which makes it difficult to understand. Activities such as debugging can reveal concrete runtime details, including the values of variables. However, they require that a developer explicitly requests these data for a specific execution moment. We present a simple approach, RuntimeSamp, which collects sample variable values during normal executions of a program by a programmer. These values are then displayed in an ambient way at the end of each line in the source code editor. We discuss questions which should be answered for this approach to be usable in practice, such as how to efficiently record the values and when to display them. We provide partial answers to these questions and suggest future research directions.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Augmenting Source Code Lines with Sample Variable Values 1521465392628 Matúš Sulír Technical University of Košice matus.sulir@tuke.sk Jaroslav Porubän Technical University of Košice jaroslav.poruban@tuke.sk integrated development environment (IDE) source code augmentation examples variables dynamic analysis Source code is inherently abstract, which makes it difficult to understand. Activities such as debugging can reveal concrete runtime details, including the values of variables. However, they require that a developer explicitly requests these data for a specific execution moment. We present a simple approach, RuntimeSamp, which collects sample variable values during normal executions of a program by a programmer. These values are then displayed in an ambient way at the end of each line in the source code editor. We discuss questions which should be answered for this approach to be usable in practice, such as how to efficiently record the values and when to display them. We provide partial answers to these questions and suggest future research directions.",
              "pageNumber": 344,
              "isPageNumberRoman": false
            },
            {
              "id": "1IENtLARshZCSkvRg5gt9h",
              "type": "authorPaper",
              "text": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf",
              "extraLocations": [],
              "authorNames": "Giovanni Grano (University of Zurich), Simone Scalabrino (University of Molise), Harald C. Gall (University of Zurich), Rocco Oliveto (University of Molise)",
              "abstract": "Software testing is one of the most crucial tasks in the typical development process. Developers are usually required to write unit test cases for the code they implement. Since this is a time-consuming task, in last years many approaches and tools for automatic test case generation — such as EvoSuite — have been introduced. Nevertheless, developers have to maintain and evolve tests to sustain the changes in the source code; therefore, having readable test cases is important to ease such a process. However, it is still not clear whether developers make an effort in writing readable unit tests. Therefore, in this paper, we conduct an explorative study comparing the readability of manually written test cases with the classes they test. Moreover, we deepen such analysis looking at the readability of automatically generated test cases. Our results suggest that developers tend to neglect the readability of test cases and that automatically generated test cases are generally even less readable than manually written ones.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 An Empirical Investigation on the Readability of Manual and Generated Test Cases 1521448579271 Giovanni Grano University of Zurich grano@ifi.uzh.ch Simone Scalabrino University of Molise simone.scalabrino@unimol.it Harald C. Gall University of Zurich gall@ifi.uzh.ch Rocco Oliveto University of Molise rocco.oliveto@unimol.it readability automated testing empirical software engineering Software testing is one of the most crucial tasks in the typical development process. Developers are usually required to write unit test cases for the code they implement. Since this is a time-consuming task, in last years many approaches and tools for automatic test case generation — such as EvoSuite — have been introduced. Nevertheless, developers have to maintain and evolve tests to sustain the changes in the source code; therefore, having readable test cases is important to ease such a process. However, it is still not clear whether developers make an effort in writing readable unit tests. Therefore, in this paper, we conduct an explorative study comparing the readability of manually written test cases with the classes they test. Moreover, we deepen such analysis looking at the readability of automatically generated test cases. Our results suggest that developers tend to neglect the readability of test cases and that automatically generated test cases are generally even less readable than manually written ones.",
              "pageNumber": 348,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Industry",
          "lineItems": [
            {
              "id": "3Hp65Z5wv38XsvTD061AsU",
              "type": "authorPaper",
              "text": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf",
              "extraLocations": [],
              "authorNames": "Norihiro Yoshida (Nagoya University), Takuya Ishizu (Osaka University), Bufurod Edwards III (Osaka University), Katsuro Inoue (Osaka University)",
              "abstract": "We have been doing code clone analysis with industry collaborators for a long time, and have been always asked a question, \"OK, I understand my system contains a lot of code clones, but how slim will it be after merging redundant code clones?\" As a software system evolves for long period, it would increasingly contain many code clones due to quick bug fix and new feature addition. Industry collaborators would recognize decay of initial design simplicity, and try to evaluate current system from the view point of maintenance effort and cost. As one of resources for the evaluation, the estimated code size by merging code clone is very important for them. In this paper, we formulate this issue as \"slimming\" problem, and present three different slimming methods, Basic, Complete, and Heuristic Methods, each of which gives a lower bound, upper bound, and modest reduction rates, respectively. Application of these methods to OSS systems written in C/C++ showed that the reduction rate is at most 5.7% of the total size, and to a commercial COBOL system, it is at most 15.4%. For this approach, we have gotten initial but very positive feedback from industry collaborators.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones 1521546082685 Norihiro Yoshida Nagoya University yoshida@ertl.jp Takuya Ishizu Osaka University t-ishizu@ist.osaka-u.ac.jp Bufurod Edwards III Osaka University BufordEdwards3@gmail.com Katsuro Inoue Osaka University inoue@ist.osaka-u.ac.jp Code clone Refactoring Size estimation We have been doing code clone analysis with industry collaborators for a long time, and have been always asked a question, \"OK, I understand my system contains a lot of code clones, but how slim will it be after merging redundant code clones?\" As a software system evolves for long period, it would increasingly contain many code clones due to quick bug fix and new feature addition. Industry collaborators would recognize decay of initial design simplicity, and try to evaluate current system from the view point of maintenance effort and cost. As one of resources for the evaluation, the estimated code size by merging code clone is very important for them. In this paper, we formulate this issue as \"slimming\" problem, and present three different slimming methods, Basic, Complete, and Heuristic Methods, each of which gives a lower bound, upper bound, and modest reduction rates, respectively. Application of these methods to OSS systems written in C/C++ showed that the reduction rate is at most 5.7% of the total size, and to a commercial COBOL system, it is at most 15.4%. For this approach, we have gotten initial but very positive feedback from industry collaborators.",
              "pageNumber": 352,
              "isPageNumberRoman": false
            },
            {
              "id": "2hpRfnyaxmx3K3L3xE0sZZ",
              "type": "authorPaper",
              "text": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf",
              "extraLocations": [],
              "authorNames": "Zoltán Porkoláb (Eötvös Loránd University), Tibor Brunner (Eötvös Loránd University), Dániel Krupp (Ericsson Hungary Ltd.), Márton Csordás (Ericsson Hungary Ltd.)",
              "abstract": "CodeCompass is an open source LLVM/Clang based tool developed by Ericsson Ltd. and the Eötvös Loránd University, Budapest to help understanding large legacy software systems. Based on the LLVM/Clang compiler infrastructure, CodeCompass gives exact information on complex C/C++ language elements like overloading, inheritance, the usage of variables and types, possible uses of function pointers and the virtual functions - features that various existing tools support only partially. Steensgaard's and Andersen's pointer analysis algorithm are used to compute and visualize the use of pointers/references. The wide range of interactive visualizations extends further than the usual class and function call diagrams; architectural, component and interface diagrams are a few of the implemented graphs. To make comprehension more extensive, CodeCompass also utilizes build information to explore the system architecture as well as version control information. CodeCompass is regularly used by hundreds of designers and developers. Having a web-based, pluginable, extensible architecture, the CodeCompass framework can be an open platform to further code comprehension, static analysis and software metrics efforts. The source code and a tutorial is publicly available on GitHub, and a live demo is also available online.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 CodeCompass: An Open Software Comprehension Framework for Industrial Usage 1521510210739 Zoltán Porkoláb Eötvös Loránd University gsd@caesar.elte.hu Tibor Brunner Eötvös Loránd University bruntib@caesar.elte.hu Dániel Krupp Ericsson Hungary Ltd. daniel.krupp@ericsson.com Márton Csordás Ericsson Hungary Ltd. marton.csordas@ericsson.com code comprehension C/C++ programming language software visualization CodeCompass is an open source LLVM/Clang based tool developed by Ericsson Ltd. and the Eötvös Loránd University, Budapest to help understanding large legacy software systems. Based on the LLVM/Clang compiler infrastructure, CodeCompass gives exact information on complex C/C++ language elements like overloading, inheritance, the usage of variables and types, possible uses of function pointers and the virtual functions - features that various existing tools support only partially. Steensgaard's and Andersen's pointer analysis algorithm are used to compute and visualize the use of pointers/references. The wide range of interactive visualizations extends further than the usual class and function call diagrams; architectural, component and interface diagrams are a few of the implemented graphs. To make comprehension more extensive, CodeCompass also utilizes build information to explore the system architecture as well as version control information. CodeCompass is regularly used by hundreds of designers and developers. Having a web-based, pluginable, extensible architecture, the CodeCompass framework can be an open platform to further code comprehension, static analysis and software metrics efforts. The source code and a tutorial is publicly available on GitHub, and a live demo is also available online.",
              "pageNumber": 361,
              "isPageNumberRoman": false
            },
            {
              "id": "7jKeiCIpBXZ8q67evqWgrH",
              "type": "authorPaper",
              "text": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf",
              "extraLocations": [],
              "authorNames": "Gregory S. DeLozier (Kent State University), Michael Decker (Bowling Green State University), Christian Newman (Rochester Institute of Technology), Jonathan Maletic (Kent State University)",
              "abstract": "A practical approach to feature location using agile unit tests is presented. The approach employs a modified software reconnaissance method for feature location, but in the context of an agile development methodology. Whereas a major drawback to software reconnaissance is the identification or development of invoking and excluding tests, the approach allows for the automatic identification of invoking and excluding tests by partially ordering existing agile unit tests via iteration information from the agile development process. The approach is validated in a comparison study with industry professionals, where the approach is shown to improve feature location speed, accuracy, and developer confidence over purely manual feature location.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location 1521661822954 Gregory S. DeLozier Kent State University gdelozie@kent.edu Michael Decker Bowling Green State University mdecke@bgsu.edu Christian Newman Rochester Institute of Technology cnewman@se.rit.edu Jonathan Maletic Kent State University jmaletic@kent.edu Software reconnaissance invoking tests excluding tests feature location A practical approach to feature location using agile unit tests is presented. The approach employs a modified software reconnaissance method for feature location, but in the context of an agile development methodology. Whereas a major drawback to software reconnaissance is the identification or development of invoking and excluding tests, the approach allows for the automatic identification of invoking and excluding tests by partially ordering existing agile unit tests via iteration information from the agile development process. The approach is validated in a comparison study with industry professionals, where the approach is shown to improve feature location speed, accuracy, and developer confidence over purely manual feature location.",
              "pageNumber": 370,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Tool Demonstration",
          "lineItems": [
            {
              "id": "5SejayZtfdh1zG442aMqfT",
              "type": "authorPaper",
              "text": "SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7lwETdpg2rWqW1F9Ts15c7/3N75AVXJrykAQKXdW5I6W.pdf",
              "extraLocations": [],
              "authorNames": "Kaixie Lyu (Tokyo Institute of Technology), Kunihiro NODA (Tokyo Institute of Technology), Takashi KOBAYASHI (Tokyo Institute of Technology)",
              "abstract": "To understand program's behavior, using reverse-engineered sequence diagram is a valuable technique. In practice, researchers usually record execution traces and generate a sequence diagram according to them. However, the diagram can be too large to read while treating real-world software due to the massiveness of execution traces. Several studies on minimizing/compressing sequence diagrams have been proposed; however, the resulting diagram may be either still large or losing important information. Besides, existing tools are highly customized for a certain research purpose. To address these problems, we present a generic toolkit SDExplorer in this paper, which is a flexible and lightweight tool to effectively explore a massive-scale sequence diagram in a highly scalable manner. Additionally, SDExplorer supports popular features of existing tools (i.e. search, filter, grouping, etc.). We believe it is an easy-to-use and promising tool in future research to evaluate and compare the minimizing/compressing techniques in real maintenance tasks.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram 1521327596818 Kaixie Lyu Tokyo Institute of Technology lvkaixie@sa.cs.titech.ac.jp Kunihiro NODA Tokyo Institute of Technology knhr@sa.cs.titech.ac.jp Takashi KOBAYASHI Tokyo Institute of Technology tkobaya@cs.titech.ac.jp scalable sequence diagram explorer reverse engineering visualization program comprehension To understand program's behavior, using reverse-engineered sequence diagram is a valuable technique. In practice, researchers usually record execution traces and generate a sequence diagram according to them. However, the diagram can be too large to read while treating real-world software due to the massiveness of execution traces. Several studies on minimizing/compressing sequence diagrams have been proposed; however, the resulting diagram may be either still large or losing important information. Besides, existing tools are highly customized for a certain research purpose. To address these problems, we present a generic toolkit SDExplorer in this paper, which is a flexible and lightweight tool to effectively explore a massive-scale sequence diagram in a highly scalable manner. Additionally, SDExplorer supports popular features of existing tools (i.e. search, filter, grouping, etc.). We believe it is an easy-to-use and promising tool in future research to evaluate and compare the minimizing/compressing techniques in real maintenance tasks.",
              "pageNumber": 380,
              "isPageNumberRoman": false
            },
            {
              "id": "3ZLi7YGHdOpFJdcceBAptO",
              "type": "authorPaper",
              "text": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf",
              "extraLocations": [],
              "authorNames": "Qing Gao (Peking University), Sen Ma (Peking University), Sihao Shao (Peking University), Yulei Sui (University of Technology Sydney), Guoliang Zhao (Peking University; CASIC - CQC Software Testing and Assessment Technology (Beijing) Corporation Ltd.), Luyao Ma (Peking University), Xiao Ma (Peking University), Fuyao Duan (Peking University), Xiao Deng (Peking University), Shikun Zhang (Peking University), Xianglong Chen (CASC Software Testing Center)",
              "abstract": "To obtain precise and sound results, most of existing static analyzers require whole program analysis with complete source code. However, in reality, the source code of an application always interacts with many third-party libraries, which are often not easily accessible to static analyzers. Worse still, more than 30% of legacy projects cannot be compiled easily due to complicated configuration environments (e.g., third-party libraries, compiler options and macros), making ideal \"whole-program analysis\" unavailable in practice. This paper presents CoBOT, a static analysis tool that can detect bugs in the presence of incomplete code. It analyzes function APIs unavailable in application code by either using function summarization or automatically downloading and analyzing the corresponding library code as inferred from the application code and its configuration files. The experiments show that CoBOT is not only easy to use, but also effective in detecting bugs in real-world programs with incomplete code. Our demonstration video is at: https://youtu.be/bhjJp3e7LPM.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code 1520993617747 Qing Gao Peking University gaoqing@pku.edu.cn Sen Ma Peking University masen@pku.edu.cn Sihao Shao Peking University shaosihao@pku.edu.cn Yulei Sui University of Technology Sydney yulei.sui@uts.edu.au Guoliang Zhao Peking University; CASIC - CQC Software Testing and Assessment Technology (Beijing) Corporation Ltd. zhaogl@sqa-bj.com Luyao Ma Peking University maluyao@pku.edu.cn Xiao Ma Peking University maxiao94@pku.edu.cn Fuyao Duan Peking University duanfuy@pku.edu.cn Xiao Deng Peking University dxeecs@pku.edu.cn Shikun Zhang Peking University zhangsk@pku.edu.cn Xianglong Chen CASC Software Testing Center 1042399133@qq.com incomplete code static analysis bug detection To obtain precise and sound results, most of existing static analyzers require whole program analysis with complete source code. However, in reality, the source code of an application always interacts with many third-party libraries, which are often not easily accessible to static analyzers. Worse still, more than 30% of legacy projects cannot be compiled easily due to complicated configuration environments (e.g., third-party libraries, compiler options and macros), making ideal \"whole-program analysis\" unavailable in practice. This paper presents CoBOT, a static analysis tool that can detect bugs in the presence of incomplete code. It analyzes function APIs unavailable in application code by either using function summarization or automatically downloading and analyzing the corresponding library code as inferred from the application code and its configuration files. The experiments show that CoBOT is not only easy to use, but also effective in detecting bugs in real-world programs with incomplete code. Our demonstration video is at: https://youtu.be/bhjJp3e7LPM.",
              "pageNumber": 385,
              "isPageNumberRoman": false
            },
            {
              "id": "2G4KkUrAsCVWoIsRASU3Az",
              "type": "authorPaper",
              "text": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf",
              "extraLocations": [],
              "authorNames": "Joshua D Scarsbrook (University of Waikato), Ryan K L Ko (University of Waikato), Bill Rogers (University of Waikato), David Bainbridge (University of Waikato)",
              "abstract": "As a result of the large scale and diverse composition of modern compiled JavaScript applications, comprehending overall program structure for debugging is challenging. In this paper we present our solution: MetropolJS. By using a Treemap-based visualization it is possible to get a high level view within limited screen real estate. Previous approaches to Treemaps lacked the fine detail and interactive features to be useful as a debugging tool. This paper introduces an optimized approach for visualizing complex program structure that enables new debugging techniques where the execution of programs can be displayed in real time from a bird's-eye view. The approach facilitates highlighting and visualizing method calls and distinctive code patterns on top of code segments without a high overhead for navigation. Using this approach enables fast analysis of previously difficult-to-comprehend code bases.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps 1521540518542 Joshua D Scarsbrook University of Waikato jds30@students.waikato.ac.nz Ryan K L Ko University of Waikato ryan.ko@waikato.ac.nz Bill Rogers University of Waikato coms0108@waikato.ac.nz David Bainbridge University of Waikato davidb@waikato.ac.nz JavaScript Treemaps Debugging As a result of the large scale and diverse composition of modern compiled JavaScript applications, comprehending overall program structure for debugging is challenging. In this paper we present our solution: MetropolJS. By using a Treemap-based visualization it is possible to get a high level view within limited screen real estate. Previous approaches to Treemaps lacked the fine detail and interactive features to be useful as a debugging tool. This paper introduces an optimized approach for visualizing complex program structure that enables new debugging techniques where the execution of programs can be displayed in real time from a bird's-eye view. The approach facilitates highlighting and visualizing method calls and distinctive code patterns on top of code segments without a high overhead for navigation. Using this approach enables fast analysis of previously difficult-to-comprehend code bases.",
              "pageNumber": 389,
              "isPageNumberRoman": false
            },
            {
              "id": "5nsrHjHSd2oX9G91PdDDnL",
              "type": "authorPaper",
              "text": "The CodeCompass Comprehension Framework",
              "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/uR5cigvgpepUoRX1Aeeq3/6eOKh60JCax8ks2bTR9xr1.pdf",
              "extraLocations": [],
              "authorNames": "Zoltán Porkoláb (Eötvös Loránd University), Tibor Brunner (Eötvös Loránd University)",
              "abstract": "CodeCompass is an open source LLVM/Clang based tool developed by Ericsson Ltd. and the Eötvös Loránd University, Budapest to help understanding large legacy software systems. Based on the LLVM/Clang compiler infrastructure, CodeCompass gives exact information on complex C/C++ language elements like overloading, inheritance, the usage of variables and types, possible uses of function pointers and the virtual functions – features that various existing tools support only partially. Steensgaard's and Andersen's pointer analysis algorithm are used to compute and visualize the use of pointers/references. The wide range of interactive visualizations extends further than the usual class and function call diagrams; architectural, component and interface diagrams are a few of the implemented graphs. To make comprehension more extensive, CodeCompass is not restricted to the source code. It also utilizes build information to explore the system architecture as well as version control information e.g. git commit history and blame view. Clang based static analysis results are also integrated to CodeCompass. Although the tool focuses mainly on C and C++, it also supports Java and Python languages. In this demo we will simulate a typical bug-fixing work flow in a C++ system. First, we show, how to use the combined text and definition based search for a fast feature location. Here we also demonstrate our log search, which can be used to locate the code source of an emitted message. When we have an approximate location of the issue, we can start a detailed investigation understanding the class relationships, function call chains (including virtual calls, and calls via function pointers), and the read/write events on individual variables. We also visualize the pointer relationships. To make the comprehension complete, we check the version control information who committed the code, when and why. This Tool demo submission is complementing our Industry track submission with the similar title. A live demo is also available at the homepage of the tool https://github.com/ericsson/codecompass.",
              "searchText": "2018 ACM/IEEE 26th International Conference on Program Comprehension ICPC 2018 The CodeCompass Comprehension Framework 1522415564685 Zoltán Porkoláb Eötvös Loránd University gsd@caesar.elte.hu Tibor Brunner Eötvös Loránd University bruntib@caesar.elte.hu code comprehension C/C++ programming language software visualization CodeCompass is an open source LLVM/Clang based tool developed by Ericsson Ltd. and the Eötvös Loránd University, Budapest to help understanding large legacy software systems. Based on the LLVM/Clang compiler infrastructure, CodeCompass gives exact information on complex C/C++ language elements like overloading, inheritance, the usage of variables and types, possible uses of function pointers and the virtual functions – features that various existing tools support only partially. Steensgaard's and Andersen's pointer analysis algorithm are used to compute and visualize the use of pointers/references. The wide range of interactive visualizations extends further than the usual class and function call diagrams; architectural, component and interface diagrams are a few of the implemented graphs. To make comprehension more extensive, CodeCompass is not restricted to the source code. It also utilizes build information to explore the system architecture as well as version control information e.g. git commit history and blame view. Clang based static analysis results are also integrated to CodeCompass. Although the tool focuses mainly on C and C++, it also supports Java and Python languages. In this demo we will simulate a typical bug-fixing work flow in a C++ system. First, we show, how to use the combined text and definition based search for a fast feature location. Here we also demonstrate our log search, which can be used to locate the code source of an emitted message. When we have an approximate location of the issue, we can start a detailed investigation understanding the class relationships, function call chains (including virtual calls, and calls via function pointers), and the read/write events on individual variables. We also visualize the pointer relationships. To make the comprehension complete, we check the version control information who committed the code, when and why. This Tool demo submission is complementing our Industry track submission with the similar title. A live demo is also available at the homepage of the tool https://github.com/ericsson/codecompass.",
              "pageNumber": 393,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": null
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems",
      "acronym": "MOBILESoft",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/bWPhxNAzkpD3pfvO4zVe2/29Tb91ZFR3kEFdXydo6ean.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1yCNDEShFhRA7ifwMs9CQe/1Rtsqg3ygiOPTfu3oOdzI9.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2PvuMnrzEoY6fQcb2nvHEs/4L31rkEomthKCHa4IkAj17.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6XCbUOBw4UvbsdQIFzOzAc/6DG9CtL1XuaqtK37hLwnGB.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/16AGe5g1cv7ggI7eB7M9B4/1XX4qflpFhOPLzBC5uTRV8.pdf",
          "extraLocations": [],
          "pageNumber": 10,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from MOBILESoft 2018 Chairs",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/3w4FA4Z6Arh8nLYuMm4qlc/3DcnWHt6F6zSPRUEj2L9Gz.pdf",
          "extraLocations": [],
          "pageNumber": 13,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7GkJWUXAJ3pfZoyYgWjNu9/4KjYTXzjqFD6uVXtIBByoE.pdf",
          "extraLocations": [],
          "pageNumber": 14,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/51VKfMYda3F9Yd03CsGanA/6MGaEVRJHQ9JhIkM0SUrvA.pdf",
          "extraLocations": [],
          "pageNumber": 16,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "Subreviewers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7yukABoXBzwxSqczvmx7jW/4zqGyBqeoq8GOtVXZUqwDk.pdf",
          "extraLocations": [],
          "pageNumber": 17,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/323acKoobvOrmvdl5r0XIV/2kBGOZQQ83KM5sJvII6FPl.pdf",
          "extraLocations": [],
          "pageNumber": 18,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/y0MfZRBF9OqLN24P7riHn/AIK4ykqbDfFxlGLFEEH7w.pdf",
          "extraLocations": [],
          "pageNumber": 257,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/eiQtty4kcP6alDNMYjF5V/5TRJOEc5PzMqg72al2A8ag.pdf",
          "extraLocations": [],
          "pageNumber": 260,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MOBILESoft 2018 - Keynote",
          "lineItems": [
            {
              "id": "33so7Tz6PAs1N7nhCWJDMZ",
              "type": "authorPaper",
              "text": "Development, Testing and Maintenance of Android Apps: Challenges, Approaches, Tools, and Future Directions",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/72yU6SOQ4yKrkts81SJc0C/4KZj9YEFOkKtWu9gXKzRur.pdf",
              "extraLocations": [],
              "authorNames": "Denys Poshyvanyk (College of William and Mary)",
              "abstract": "",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Development, Testing and Maintenance of Android Apps: Challenges, Approaches, Tools, and Future Directions Denys Poshyvanyk College of William and Mary denys@cs.wm.edu",
              "pageNumber": 1,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S1: Maliciousness ",
          "lineItems": [
            {
              "id": "ngyt1rEP6CzgAG2ziSz33",
              "type": "authorPaper",
              "text": "Ares: Triggering Payload of Evasive Android Malware",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1kwoE4IsWlbBcNdOplxNHd/7uM7gUAKRHWP2Xgy3303zJ.pdf",
              "extraLocations": [],
              "authorNames": "Luciano Bello (IBM Research), Marco Pistoia (IBM Research)",
              "abstract": "With the emergence of mobile application markets, there has been a dramatic increase in mobile malware. Mobile platform providers are constantly creating and refining their malware-detection techniques, including static analysis and behavioral monitoring. The goal of malware writers is to hide the malware payload from those analyzers. In parallel, security analysts want to quickly detect if any software is malware in order to prevent harm to users. This confrontation is pushing malware writers to develop new evasion techniques that prevent their malware from being detected or making analysis harder. This paper describes Ares, a system built on top of an existing behavioral analysis, based on static information-flow analysis, binary instrumentation, and multiexecution analysis, to detect and bypass many common evasive techniques used by mobile malware. Additionally, this paper presents our implementation of Ares, and shows that, when run against real-world software, Ares is able to reveal previously unknown malicious components. We also developed a test suite for evasion detection techniques: Evadroid, which we have made fully available to other researchers.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Ares: Triggering Payload of Evasive Android Malware 1521852371480 Luciano Bello IBM Research luciano.bello@ibm.com Marco Pistoia IBM Research pistoia@us.ibm.com Mobile malware Evasive malware Forced execution With the emergence of mobile application markets, there has been a dramatic increase in mobile malware. Mobile platform providers are constantly creating and refining their malware-detection techniques, including static analysis and behavioral monitoring. The goal of malware writers is to hide the malware payload from those analyzers. In parallel, security analysts want to quickly detect if any software is malware in order to prevent harm to users. This confrontation is pushing malware writers to develop new evasion techniques that prevent their malware from being detected or making analysis harder. This paper describes Ares, a system built on top of an existing behavioral analysis, based on static information-flow analysis, binary instrumentation, and multiexecution analysis, to detect and bypass many common evasive techniques used by mobile malware. Additionally, this paper presents our implementation of Ares, and shows that, when run against real-world software, Ares is able to reveal previously unknown malicious components. We also developed a test suite for evasion detection techniques: Evadroid, which we have made fully available to other researchers.",
              "pageNumber": 2,
              "isPageNumberRoman": false
            },
            {
              "id": "3d8FaZCXcQw2hO80aCfb6V",
              "type": "authorPaper",
              "text": "Orlis: Obfuscation-Resilient Library Detection for Android",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf",
              "extraLocations": [],
              "authorNames": "Yan Wang (The Ohio State University), Haowei Wu (The Ohio State University), Hailong Zhang (The Ohio State University), Atanas Rountev (The Ohio State University)",
              "abstract": "Android apps often contain third-party libraries. For many program analyses, it is important to identify the library code in a given closed-source Android app. There are several clients of such library detection, including security analysis, clone/repackage detection, and library removal/isolation. However, library detection is complicated significantly by commonly-used code obfuscation techniques for Android. Although some of the state-of-the-art library detection tools are intended to be resilient to obfuscation, there is still room to improve recall, precision, and analysis cost. We propose a new approach to detect third-party libraries in obfuscated apps. The approach relies on obfuscation-resilient code features derived from the interprocedural structure and behavior of the app (e.g., call graphs of methods). The design of our approach is informed by close examination of the code features preserved by typical Android obfuscators. To reduce analysis cost, we use similarity digests as an efficient mechanism for identifying a small number of likely matches. We implemented this approach in the Orlis library detection tool. As demonstrated by our experimental results, Orlis advances the state of the art and presents an attractive choice for detection of third-party libraries in Android apps.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Orlis: Obfuscation-Resilient Library Detection for Android 1521819251888 Yan Wang The Ohio State University wysnow7@gmail.com Haowei Wu The Ohio State University wuhaow@cse.ohio-state.edu Hailong Zhang The Ohio State University zhang.4858@osu.edu Atanas Rountev The Ohio State University rountev@cse.ohio-state.edu Android library detection library identification obfuscation static analysis Android apps often contain third-party libraries. For many program analyses, it is important to identify the library code in a given closed-source Android app. There are several clients of such library detection, including security analysis, clone/repackage detection, and library removal/isolation. However, library detection is complicated significantly by commonly-used code obfuscation techniques for Android. Although some of the state-of-the-art library detection tools are intended to be resilient to obfuscation, there is still room to improve recall, precision, and analysis cost. We propose a new approach to detect third-party libraries in obfuscated apps. The approach relies on obfuscation-resilient code features derived from the interprocedural structure and behavior of the app (e.g., call graphs of methods). The design of our approach is informed by close examination of the code features preserved by typical Android obfuscators. To reduce analysis cost, we use similarity digests as an efficient mechanism for identifying a small number of likely matches. We implemented this approach in the Orlis library detection tool. As demonstrated by our experimental results, Orlis advances the state of the art and presents an attractive choice for detection of third-party libraries in Android apps.",
              "pageNumber": 13,
              "isPageNumberRoman": false
            },
            {
              "id": "YRqIiJ7JqVjL4gxilRooX",
              "type": "authorPaper",
              "text": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf",
              "extraLocations": [],
              "authorNames": "Biniam Fisseha Demissie (Fondazione Bruno Kessler), Mariano Ceccato (Fondazione Bruno Kessler), Lwin Khin Shar (Nanyang Technological University)",
              "abstract": "Smartphone apps usually have access to sensitive user data such as contacts, geo-location, and account credentials and they might share such data to external entities through the Internet or with other apps. Confidentiality of user data could be breached if there are anomalies in the way sensitive data is handled by an app which is vulnerable or malicious. Existing approaches that detect anomalous sensitive data flows have limitations in terms of accuracy because the definition of anomalous flows may differ for different apps with different functionalities; it is normal for \"Health\" apps to share heart rate information through the Internet but is anomalous for \"Travel\" apps. In this paper, we propose a novel approach to detect anomalous sensitive data flows in Android apps, with improved accuracy. To achieve this objective, we first group trusted apps according to the topics inferred from their functional descriptions. We then learn sensitive information flows with respect to each group of trusted apps. For a given app under analysis, anomalies are identified by comparing sensitive information flows in the app against those flows learned from trusted apps grouped under the same topic. In the evaluation, information flow is learned from 11,796 trusted apps. We then checked for anomalies in 596 new (benign) apps and identified 2 previously-unknown vulnerable apps related to anomalous flows. We also analyzed 18 malware apps and found anomalies in 6 of them.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps 1521532857449 Biniam Fisseha Demissie Fondazione Bruno Kessler demissie@fbk.eu Mariano Ceccato Fondazione Bruno Kessler ceccato@fbk.eu Lwin Khin Shar Nanyang Technological University lkshar@ntu.edu.sg Data flow Anomaly detection Smartphone apps Smartphone apps usually have access to sensitive user data such as contacts, geo-location, and account credentials and they might share such data to external entities through the Internet or with other apps. Confidentiality of user data could be breached if there are anomalies in the way sensitive data is handled by an app which is vulnerable or malicious. Existing approaches that detect anomalous sensitive data flows have limitations in terms of accuracy because the definition of anomalous flows may differ for different apps with different functionalities; it is normal for \"Health\" apps to share heart rate information through the Internet but is anomalous for \"Travel\" apps. In this paper, we propose a novel approach to detect anomalous sensitive data flows in Android apps, with improved accuracy. To achieve this objective, we first group trusted apps according to the topics inferred from their functional descriptions. We then learn sensitive information flows with respect to each group of trusted apps. For a given app under analysis, anomalies are identified by comparing sensitive information flows in the app against those flows learned from trusted apps grouped under the same topic. In the evaluation, information flow is learned from 11,796 trusted apps. We then checked for anomalies in 596 new (benign) apps and identified 2 previously-unknown vulnerable apps related to anomalous flows. We also analyzed 18 malware apps and found anomalies in 6 of them.",
              "pageNumber": 24,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S2: Student Research Competition Madness ",
          "lineItems": [
            {
              "id": "6vxpBtvzeit4RYPNEoMkt2",
              "type": "authorPaper",
              "text": "Identifying Architectural Technical Debt in Android Applications through Automated Compliance Checking",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2GojGt1tPE8l1QD6OQKCry/7xWLPafiIzONXaU7xhOSvq.pdf",
              "extraLocations": [],
              "authorNames": "Roberto Verdecchia (Gran Sasso Science Institute)",
              "abstract": "By considering the fast pace at which mobile applications need to evolve, Architectural Technical Debt results to be a crucial yet implicit factor of success. In this research we present an approach to automatically identify Architectural Technical Debt in Android applications. The approach takes advantage of architectural guidelines extraction and modeling, architecture reverse engineering, and compliance checking. As future work, we plan to fully automate the process and empirically evaluate it via large-scale experiments.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Identifying Architectural Technical Debt in Android Applications through Automated Compliance Checking 1521544398697 Roberto Verdecchia Gran Sasso Science Institute roberto.verdecchia@gssi.it Software Architecture Technical Debt Android Compliance Checking By considering the fast pace at which mobile applications need to evolve, Architectural Technical Debt results to be a crucial yet implicit factor of success. In this research we present an approach to automatically identify Architectural Technical Debt in Android applications. The approach takes advantage of architectural guidelines extraction and modeling, architecture reverse engineering, and compliance checking. As future work, we plan to fully automate the process and empirically evaluate it via large-scale experiments.",
              "pageNumber": 35,
              "isPageNumberRoman": false
            },
            {
              "id": "5VqS8mfZW7sn91zphmb8BL",
              "type": "authorPaper",
              "text": "Programming Support for Data Intensive Distributed Mobile Applications at the Edge",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6AInFsuS2npMMVQb2C0TNM/2Szrs7IunbJrTEJ0wVFXwV.pdf",
              "extraLocations": [],
              "authorNames": "Breno Dantas Cruz (Virginia Polytechnic Institute and State University (Virginia Tech))",
              "abstract": "Mobile, IoT, and wearable devices have been transitioning from passive consumers of remote data to active generators of massive amounts of data. Mobile apps often need to move data, generated on one device, to other nearby devices for processing. For example, when reading its wearer's health vitals, a health monitoring app on a wearable device needs to transfer the data to the wearer's smartphone for display and analysis. This local processing of data by means of nearby computing resources has been promoted as a solution to network bandwidth bottlenecks, and commonly referred to as edge computing. Despite the critical dependence of edge computing on the device-to-device data sharing functionality, its mainstream implementations introduce low-level and hard-to-maintain code into the mobile codebase. To address this problem, this research introduces Remote ICC (RICCi), a novel middleware framework that provides programming support for data-intensive mobile applications at the edge, thereby reconciling programming convenience and performance efficiency. RICCi builds upon the native Android Inter-Component Communication (ICC) to simultaneously support seamless and efficient inter-device data sharing via a convenient and familiar programming model. To reach these design objectives, RICCi innovates in the middleware space by offering distributed programming abstractions that are data-oriented rather than procedure-oriented, thereby elevating latency into a first-class design concern for developing distributed mobile apps.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Programming Support for Data Intensive Distributed Mobile Applications at the Edge 1521477271885 Breno Dantas Cruz Virginia Polytechnic Institute and State University (Virginia Tech) bdantasc@vt.edu Programming Model Data Sharing Distributed Computing Android Inter Component Communication Mobile, IoT, and wearable devices have been transitioning from passive consumers of remote data to active generators of massive amounts of data. Mobile apps often need to move data, generated on one device, to other nearby devices for processing. For example, when reading its wearer's health vitals, a health monitoring app on a wearable device needs to transfer the data to the wearer's smartphone for display and analysis. This local processing of data by means of nearby computing resources has been promoted as a solution to network bandwidth bottlenecks, and commonly referred to as edge computing. Despite the critical dependence of edge computing on the device-to-device data sharing functionality, its mainstream implementations introduce low-level and hard-to-maintain code into the mobile codebase. To address this problem, this research introduces Remote ICC (RICCi), a novel middleware framework that provides programming support for data-intensive mobile applications at the edge, thereby reconciling programming convenience and performance efficiency. RICCi builds upon the native Android Inter-Component Communication (ICC) to simultaneously support seamless and efficient inter-device data sharing via a convenient and familiar programming model. To reach these design objectives, RICCi innovates in the middleware space by offering distributed programming abstractions that are data-oriented rather than procedure-oriented, thereby elevating latency into a first-class design concern for developing distributed mobile apps.",
              "pageNumber": 37,
              "isPageNumberRoman": false
            },
            {
              "id": "4d90V4pDeyDfI0JgtCUbCj",
              "type": "authorPaper",
              "text": "Classifying Code Comments in Java Mobile Applications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Jpqy13chjNAIIWvMOHGWF/9Ww57ttOnSNXTkylyGQBo.pdf",
              "extraLocations": [],
              "authorNames": "Luca Pascarella (Delft University of Technology)",
              "abstract": "Developers adopt code comments for different reasons such as document source codes or change program flows. Due to a variety of use scenarios, code comments may impact on readability and maintainability. In this study, we investigate how developers of 5 open-source mobile applications use code comments to document their projects. Additionally, we evaluate the performance of two machine learning models to automatically classify code comments. Initial results show marginal differences between desktop and mobile applications.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Classifying Code Comments in Java Mobile Applications 1524038759054 Luca Pascarella Delft University of Technology l.pascarella@tudelft.nl Android Mining Software Repositories Code Comments Developers adopt code comments for different reasons such as document source codes or change program flows. Due to a variety of use scenarios, code comments may impact on readability and maintainability. In this study, we investigate how developers of 5 open-source mobile applications use code comments to document their projects. Additionally, we evaluate the performance of two machine learning models to automatically classify code comments. Initial results show marginal differences between desktop and mobile applications.",
              "pageNumber": 39,
              "isPageNumberRoman": false
            },
            {
              "id": "asYeMZWgsc4OLnyoRoWxe",
              "type": "authorPaper",
              "text": "Improving Android Permissions Models for Increased User Awareness and Security",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4r1iJW957QWaHnKs6smfiQ/5ETdQztLOpJldD8RMF1l4q.pdf",
              "extraLocations": [],
              "authorNames": "Jeffrey Palmerino (Rochester Institute of Technology)",
              "abstract": "Determining how to make users more aware of the permissions used in their favorite apps is one of the largest challenges facing mobile developers today. Research has shown that the less aware a user is, the less secure they feel while using the app. Unfortunately, this same research has shown that users are not well informed of the permissions their apps use, leading to many users feeling insecure. This makes us ask, how can users become more informed about the permissions their apps use so they can feel more secure? o better understand this question, we examined the effects of the previous and current Android permissions models, as well as our proposed permissions model through an in person study. Our primary findings were I) Our proposed permissions model makes users significantly more secure than both Android models. II) Run-time based permissions models make users significantly more informed than install-time based models.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Improving Android Permissions Models for Increased User Awareness and Security 1521490360252 Jeffrey Palmerino Rochester Institute of Technology jrp3143@rit.edu Mobile Permissions Mobile Security Mobile Privacy Determining how to make users more aware of the permissions used in their favorite apps is one of the largest challenges facing mobile developers today. Research has shown that the less aware a user is, the less secure they feel while using the app. Unfortunately, this same research has shown that users are not well informed of the permissions their apps use, leading to many users feeling insecure. This makes us ask, how can users become more informed about the permissions their apps use so they can feel more secure? o better understand this question, we examined the effects of the previous and current Android permissions models, as well as our proposed permissions model through an in person study. Our primary findings were I) Our proposed permissions model makes users significantly more secure than both Android models. II) Run-time based permissions models make users significantly more informed than install-time based models.",
              "pageNumber": 41,
              "isPageNumberRoman": false
            },
            {
              "id": "5Mq9IOeLZZnCojABGs6HQl",
              "type": "authorPaper",
              "text": "Does Source Code Quality Reflect the Ratings of Apps?",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7owz03DYR7RdSX0ZHXkBoA/4WJIMi1KIKSr1MOsbsoP3B.pdf",
              "extraLocations": [],
              "authorNames": "Gemma Catolino (University of Salerno)",
              "abstract": "In the past, bad code quality has been associated with higher bug-proneness. At the same time, the main reason why mobile users negatively rate an app is due to the presence of bugs leading to crashes. In this paper, we preliminarily investigate the extent to which code quality metrics can be exploited to predict the commercial success of mobile apps. Key results suggest the existence of a relation between code quality and commercial success; We found that inheritance and information hiding metrics represent important indicators and therefore should be carefully monitored by developers.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Does Source Code Quality Reflect the Ratings of Apps? 1524032275059 Gemma Catolino University of Salerno gcatolino@unisa.it Mobile Applications Metrics Software Quality In the past, bad code quality has been associated with higher bug-proneness. At the same time, the main reason why mobile users negatively rate an app is due to the presence of bugs leading to crashes. In this paper, we preliminarily investigate the extent to which code quality metrics can be exploited to predict the commercial success of mobile apps. Key results suggest the existence of a relation between code quality and commercial success; We found that inheritance and information hiding metrics represent important indicators and therefore should be carefully monitored by developers.",
              "pageNumber": 43,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S3: Permissiveness ",
          "lineItems": [
            {
              "id": "7vuRN6Pgo7hQNRlT0LXwX",
              "type": "authorPaper",
              "text": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf",
              "extraLocations": [],
              "authorNames": "Gian Luca Scoccia (Gran Sasso Science Institute), Stefano Ruberto (Gran Sasso Science Institute), Ivano Malavolta (Vrije Universiteit Amsterdam), Marco Autili (University of L’Aquila), Paola Inverardi (University of L’Aquila)",
              "abstract": "To protect the privacy of end users from intended or unintended malicious behavior, the Android operating system provides a permissions-based security model that restricts access to privacy-relevant parts of the platform. Starting with Android 6, the permission system has been revamped, moving to a run-time model. Users are now prompted for con rmation when an app attempts to access a re-stricted part of the platform. We conducted a large-scale empirical study to investigate how end users perceive the new run-time permission system of Android, collecting and inspecting over 4.3 million user reviews about 5,572 apps published in the Google Play Store. Among them, we identi ed, classi ed, and analyzed 3,574 permission-related reviews, employing machine learning and Natural Language Processing techniques. Out of the permission-related reviews, we determined recurring points made by users about the new permission system and classi ed them into a taxonomy. Results of our analysis suggest that, even with the new system, permission-related issues are widespread, with 8% of collected apps having user reviews with negative comments about permissions. We identify a number of points for improvement in the Android run-time permission system, and provide recommendations for future research.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 An Investigation Into Android Run-Time Permissions from the End Users' Perspective 1521316883705 Gian Luca Scoccia Gran Sasso Science Institute gianluca.scoccia@gssi.it Stefano Ruberto Gran Sasso Science Institute stefano.ruberto@gssi.it Ivano Malavolta Vrije Universiteit Amsterdam i.malavolta@vu.nl Marco Autili University of L’Aquila marco.autili@univaq.it Paola Inverardi University of L’Aquila paola.inverardi@univaq.it Android Permissions Apps Opinion Mining Review Analysis Privacy Security To protect the privacy of end users from intended or unintended malicious behavior, the Android operating system provides a permissions-based security model that restricts access to privacy-relevant parts of the platform. Starting with Android 6, the permission system has been revamped, moving to a run-time model. Users are now prompted for con rmation when an app attempts to access a re-stricted part of the platform. We conducted a large-scale empirical study to investigate how end users perceive the new run-time permission system of Android, collecting and inspecting over 4.3 million user reviews about 5,572 apps published in the Google Play Store. Among them, we identi ed, classi ed, and analyzed 3,574 permission-related reviews, employing machine learning and Natural Language Processing techniques. Out of the permission-related reviews, we determined recurring points made by users about the new permission system and classi ed them into a taxonomy. Results of our analysis suggest that, even with the new system, permission-related issues are widespread, with 8% of collected apps having user reviews with negative comments about permissions. We identify a number of points for improvement in the Android run-time permission system, and provide recommendations for future research.",
              "pageNumber": 45,
              "isPageNumberRoman": false
            },
            {
              "id": "3pc4MPWTSKO1VY5xO7gFRT",
              "type": "authorPaper",
              "text": "Investigating User Perception and Comprehension of Android Permission Models",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7k3Q4plDc6aAFKXUGrtnEp/3FcnYYOacoZsRsJJ05AkPm.pdf",
              "extraLocations": [],
              "authorNames": "Anthony Peruma (Rochester Institute of Technology), Jeffrey Palmerino (Rochester Institute of Technology), Daniel E. Krutz (Rochester Institute of Technology)",
              "abstract": "Do you know the permissions your favorite apps use? You probably don't, and you aren't alone. Everyone seemingly talks about how important app security and privacy is to them, but research has shown that users are generally not well informed about the permissions their apps use. This leads to serious ramifications for security, privacy and user perception (rating) of an app. Understanding the current Android permission model and how it can be improved offers significant benefits for both developers and users. To better understand user perception of the previous, current and a new proposed permission model, we conducted an in-person study involving 185 participants. Our primary findings include I) The current Android runtime model does not make users feel more secure in comparison with the older install-time model. II) Our proposed model is beneficial in helping users feel more secure. III) There is no statistically significant difference between the user ratings given to the apps using the different permissions models. IV) Runtime permission models are significantly beneficial in helping users to recall the requested permissions. V) We found that users were generally well informed about what the requested permissions meant, but age played a significant factor in reducing how informed users were.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Investigating User Perception and Comprehension of Android Permission Models 1521580413152 Anthony Peruma Rochester Institute of Technology axp6201@rit.edu Jeffrey Palmerino Rochester Institute of Technology jrp3143@rit.edu Daniel E. Krutz Rochester Institute of Technology dxkvse@rit.edu Mobile Permissions Mobile Privacy Mobile Security Do you know the permissions your favorite apps use? You probably don't, and you aren't alone. Everyone seemingly talks about how important app security and privacy is to them, but research has shown that users are generally not well informed about the permissions their apps use. This leads to serious ramifications for security, privacy and user perception (rating) of an app. Understanding the current Android permission model and how it can be improved offers significant benefits for both developers and users. To better understand user perception of the previous, current and a new proposed permission model, we conducted an in-person study involving 185 participants. Our primary findings include I) The current Android runtime model does not make users feel more secure in comparison with the older install-time model. II) Our proposed model is beneficial in helping users feel more secure. III) There is no statistically significant difference between the user ratings given to the apps using the different permissions models. IV) Runtime permission models are significantly beneficial in helping users to recall the requested permissions. V) We found that users were generally well informed about what the requested permissions meant, but age played a significant factor in reducing how informed users were.",
              "pageNumber": 56,
              "isPageNumberRoman": false
            },
            {
              "id": "4Uojdm7I8j0w9GaPGD5dqa",
              "type": "authorPaper",
              "text": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf",
              "extraLocations": [],
              "authorNames": "Malinda Dilhara (University of Moratuwa), Haipeng Cai (Washington State University), John Jenkins (Washington State University)",
              "abstract": "The runtime permission model of Android enhances security yet also constitutes a source of incompatibility issues that impedes the productivity of mobile developers. This paper presents a novel analysis that detects the incompatible permission uses in a given app and repairs them when found, hence automatically adapting the app to the runtime permission model. The key approach is to check and enforce the app's conformance to the runtime permission use protocol through static control flow analysis and bytecode transformation. We implemented our technique as an open-source tool, ARPDroid, and initially evaluated it on 20 incompatible and 3 compatible real-world apps, assisted by manual ground truth and verification. Our results show that ARPDroid achieved 100% detection accuracy, 90% repair success rate, and 91.3% overall adaptation success rate at an average time cost of about two minutes.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps 1521318667030 Malinda Dilhara University of Moratuwa malinda.dilhara@gmail.com Haipeng Cai Washington State University hcai@eecs.wsu.edu John Jenkins Washington State University john.jenkins@wsu.edu Android incompatibility detection repair runtime permission The runtime permission model of Android enhances security yet also constitutes a source of incompatibility issues that impedes the productivity of mobile developers. This paper presents a novel analysis that detects the incompatible permission uses in a given app and repairs them when found, hence automatically adapting the app to the runtime permission model. The key approach is to check and enforce the app's conformance to the runtime permission use protocol through static control flow analysis and bytecode transformation. We implemented our technique as an open-source tool, ARPDroid, and initially evaluated it on 20 incompatible and 3 compatible real-world apps, assisted by manual ground truth and verification. Our results show that ARPDroid achieved 100% detection accuracy, 90% repair success rate, and 91.3% overall adaptation success rate at an average time cost of about two minutes.",
              "pageNumber": 67,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S4: Poster & Tool Demo Madness ",
          "lineItems": [
            {
              "id": "4BdBHbXom5GoiSVCxAchtY",
              "type": "authorPaper",
              "text": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf",
              "extraLocations": [],
              "authorNames": "Felix Beierle (Technische Universität Berlin), Vinh Thuy Tran (Technische Universität Berlin), Mathias Allemand (University of Zurich), Patrick Neff (University of Regensburg), Winfried Schlee (University of Regensburg), Thomas Probst (Danube University Krems), Rüdiger Pryss (Ulm University), Johannes Zimmermann (Psychologische Hochschule Berlin)",
              "abstract": "We present the Android app TYDR (Track Your Daily Routine) which tracks smartphone sensor and usage data and utilizes standardized psychometric personality questionnaires. With the app, we aim at collecting data for researching correlations between the tracked smartphone data and the user's personality in order to predict personality from smartphone data. In this paper, we highlight our approaches in addressing the challenges in developing such an app. We optimize the tracking of sensor data by assessing the trade-off of size of data and battery consumption and granularity of the stored information. Our user interface is designed to incentivize users to install the app and fill out questionnaires. TYDR processes and visualizes the tracked sensor and usage data as well as the results of the personality questionnaires. When developing an app that will be used in psychological studies, requirements posed by ethics commissions / institutional review boards and data protection officials have to be met. We detail our approaches concerning those requirements regarding the anonymized storing of user data, informing the users about the data collection, and enabling an opt-out option. We present our process for anonymized data storing while still being able to identify individual users who successfully completed a psychological study with the app.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data 1521396630587 Felix Beierle Technische Universität Berlin beierle@tu-berlin.de Vinh Thuy Tran Technische Universität Berlin vinh.t.tran@campus.tu-berlin.de Mathias Allemand University of Zurich m.allemand@psychologie.uzh.ch Patrick Neff University of Regensburg patrick.neff@uzh.ch Winfried Schlee University of Regensburg winfried.schlee@tinnitusresearch.org Thomas Probst Danube University Krems thomas.probst@donau-uni.ac.at Rüdiger Pryss Ulm University ruediger.pryss@uni-ulm.de Johannes Zimmermann Psychologische Hochschule Berlin j.zimmermann@psychologische-hochschule.de context aware computing psychometrics sensor data Android We present the Android app TYDR (Track Your Daily Routine) which tracks smartphone sensor and usage data and utilizes standardized psychometric personality questionnaires. With the app, we aim at collecting data for researching correlations between the tracked smartphone data and the user's personality in order to predict personality from smartphone data. In this paper, we highlight our approaches in addressing the challenges in developing such an app. We optimize the tracking of sensor data by assessing the trade-off of size of data and battery consumption and granularity of the stored information. Our user interface is designed to incentivize users to install the app and fill out questionnaires. TYDR processes and visualizes the tracked sensor and usage data as well as the results of the personality questionnaires. When developing an app that will be used in psychological studies, requirements posed by ethics commissions / institutional review boards and data protection officials have to be met. We detail our approaches concerning those requirements regarding the anonymized storing of user data, informing the users about the data collection, and enabling an opt-out option. We present our process for anonymized data storing while still being able to identify individual users who successfully completed a psychological study with the app.",
              "pageNumber": 72,
              "isPageNumberRoman": false
            },
            {
              "id": "60pgqNPCOxz2mhFEowzbvZ",
              "type": "authorPaper",
              "text": "MobiCoMonkey - Context Testing of Android Apps",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf",
              "extraLocations": [],
              "authorNames": "Amit Seal Ami (Institute of Information Technology), Md. Mehedi Hasan (Institute of Information Technology), Md. Rayhanur Rahman (Institute of Information Technology), Kazi Sakib (Institute of Information Technology)",
              "abstract": "The functionality of many mobile applications is dependent on various contextual, external factors. Depending on unforeseen scenarios, mobile apps can even malfunction or crash. In this paper, we have introduced MobiCoMonkey - automated tool that allows a developer to test app against custom or auto generated contextual scenarios and help detect possible bugs through the emulator. Moreover, it reports the connection between the bugs and contextual factors so that the bugs can later be reproduced. It utilizes the tools offered by Android SDK and logcat to inject events and capture traces of the app execution.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 MobiCoMonkey - Context Testing of Android Apps 1521491438118 Amit Seal Ami Institute of Information Technology amit.seal@iit.du.ac.bd Md. Mehedi Hasan Institute of Information Technology mehedi.iitdu@gmail.com Md. Rayhanur Rahman Institute of Information Technology rayhan@du.ac.bd Kazi Sakib Institute of Information Technology sakib@iit.du.ac.bd Android Mobile Simulation Contextual Testing Stress Testing Emulator Empirical Software Engineering The functionality of many mobile applications is dependent on various contextual, external factors. Depending on unforeseen scenarios, mobile apps can even malfunction or crash. In this paper, we have introduced MobiCoMonkey - automated tool that allows a developer to test app against custom or auto generated contextual scenarios and help detect possible bugs through the emulator. Moreover, it reports the connection between the bugs and contextual factors so that the bugs can later be reproduced. It utilizes the tools offered by Android SDK and logcat to inject events and capture traces of the app execution.",
              "pageNumber": 76,
              "isPageNumberRoman": false
            },
            {
              "id": "34AVilfKeaMO7tTpZ3VTsT",
              "type": "authorPaper",
              "text": "ICC-Inspect: Supporting Runtime Inspection of Android Inter-Component Communications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/79ZgCqLFF9opAYHe8coy4l/25kpTIpW1VVxjjoh3biB75.pdf",
              "extraLocations": [],
              "authorNames": "John Jenkins (Washington State University), Haipeng Cai (Washington State University)",
              "abstract": "We present ICC-Inspect, a tool for understanding Android app behaviors exhibited at runtime via inter-component communication (ICC). Through lightweight Intent profiling, ICC-Inspect streams run-time ICC information to a dynamic visualization framework which depicts interactive ICC call graphs along with informative ICC statistics. This framework allows users to examine the details of a specific fragment of execution in the context of the holistic ICC view of an app. Through its ability to concisely map in a visual format the complex ICC mechanisms of any Android app, ICC-Inspect facilitates behavior understanding and debugging of Android programs. The open-source release, documentation, and a video demo of ICC-Inspect are available.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 ICC-Inspect: Supporting Runtime Inspection of Android Inter-Component Communications 1521318954657 John Jenkins Washington State University john.jenkins@wsu.edu Haipeng Cai Washington State University hcai@eecs.wsu.edu Android ICC behavior understanding inspection We present ICC-Inspect, a tool for understanding Android app behaviors exhibited at runtime via inter-component communication (ICC). Through lightweight Intent profiling, ICC-Inspect streams run-time ICC information to a dynamic visualization framework which depicts interactive ICC call graphs along with informative ICC statistics. This framework allows users to examine the details of a specific fragment of execution in the context of the holistic ICC view of an app. Through its ability to concisely map in a visual format the complex ICC mechanisms of any Android app, ICC-Inspect facilitates behavior understanding and debugging of Android programs. The open-source release, documentation, and a video demo of ICC-Inspect are available.",
              "pageNumber": 80,
              "isPageNumberRoman": false
            },
            {
              "id": "76gi12IJ1TT4ByO1XOsMgV",
              "type": "authorPaper",
              "text": "Analyzing the User Interface of Android Apps",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf",
              "extraLocations": [],
              "authorNames": "Konstantin Kuznetsov (Saarland University / CISPA), Vitalii Avdiienko (Saarland University / CISPA), Alessandra Gorla (IMDEA Software Institute), Andreas Zeller (Saarland University / CISPA)",
              "abstract": "When interacting with Android apps, users may not always get what they expect. For instance, when clicking on a button labeled \"upload picture\", the app may actually leak the user's location while uploading photos to a cloud service. In this paper we present BACKSTAGE, a static analysis framework that binds UI elements to their corresponding callbacks, and further extracts actions in the form of Android sensitive API calls that may be triggered by events on such UI elements. We illustrate the inner workings of the analysis implemented by BACKSTAGE and then compare it against similar frameworks.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Analyzing the User Interface of Android Apps 1522939564288 Konstantin Kuznetsov Saarland University / CISPA kuznetsov@st.cs.uni-saarland.de Vitalii Avdiienko Saarland University / CISPA vitalii.avdiienko@gmail.com Alessandra Gorla IMDEA Software Institute alessandra.gorla@imdea.org Andreas Zeller Saarland University / CISPA zeller@cs.uni-saarland.de User Interfaces Android Callback Analysis When interacting with Android apps, users may not always get what they expect. For instance, when clicking on a button labeled \"upload picture\", the app may actually leak the user's location while uploading photos to a cloud service. In this paper we present BACKSTAGE, a static analysis framework that binds UI elements to their corresponding callbacks, and further extracts actions in the form of Android sensitive API calls that may be triggered by events on such UI elements. We illustrate the inner workings of the analysis implemented by BACKSTAGE and then compare it against similar frameworks.",
              "pageNumber": 84,
              "isPageNumberRoman": false
            },
            {
              "id": "7iDgjteEKSPIIlmfbIihix",
              "type": "authorPaper",
              "text": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf",
              "extraLocations": [],
              "authorNames": "Alfredo J. Perez (Columbus State University), Kevin G. Rivera-Morales (Universidad del Turabo), Miguel A. Labrador (University of South Florida), Idalides Vergara-Laurens (Universidad del Turabo)",
              "abstract": "We study the authentication of the heart rate (HR) signal and we present HR-Auth, an algorithm to authenticate HR data using two independent wearable sensors. We describe and evaluate the proposed algorithm.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 HR-Auth: Heart Rate Data Authentication Using Consumer Wearables 1521261355155 Alfredo J. Perez Columbus State University perez_alfredo@columbusstate.edu Kevin G. Rivera-Morales Universidad del Turabo krivera382@email.suagm.edu Miguel A. Labrador University of South Florida mlabrador@usf.edu Idalides Vergara-Laurens Universidad del Turabo ivergara@suagm.edu Security authentication mHealth heart rate Internet of Things wearables smart health mobile sensing Android Wear We study the authentication of the heart rate (HR) signal and we present HR-Auth, an algorithm to authenticate HR data using two independent wearable sensors. We describe and evaluate the proposed algorithm.",
              "pageNumber": 88,
              "isPageNumberRoman": false
            },
            {
              "id": "7EXTZeTDAAE0EU00X5FB6c",
              "type": "authorPaper",
              "text": "API for Power-Aware Application Design on Mobile Systems",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf",
              "extraLocations": [],
              "authorNames": "Nadja Peters (Technical University of Munich), Sangyoung Park (Technical University of Munich), Daniel Clifford (Google Inc), Sami Kyostila (Google Inc), Ross McIlroy (Google Inc), Benedikt Meurer (Google Inc), Hannes Payer (Google Inc), Samarjit Chakraborty (Technical University of Munich)",
              "abstract": "Thanks to the performance improvements in hardware and software architectures, more applications, which used to run on desktop computers, are now being migrated to mobile devices. However, this entails increased power consumption, that necessitates more effective runtime power management techniques due to battery capacity constraints. Such techniques should reduce power consumption while satisfying user-perceived requirements, such as frame rate, and response times. A major hurdle in incorporating such techniques into real products is that user-perceived requirements are only visible to user applications, but not accessible by the power managers residing in the operating system. In this paper, we show that better power management is achievable by passing such information to the OS, and propose an API for that purpose.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 API for Power-Aware Application Design on Mobile Systems 1521842755224 Nadja Peters Technical University of Munich nadja.peters@tum.de Sangyoung Park Technical University of Munich sangyoung.park@tum.de Daniel Clifford Google Inc danno@google.com Sami Kyostila Google Inc skyostil@google.com Ross McIlroy Google Inc rmcilroy@google.com Benedikt Meurer Google Inc bmeurer@google.com Hannes Payer Google Inc hpayer@google.com Samarjit Chakraborty Technical University of Munich samarjit@tum.de Android Power Management Application aware Power Management Thanks to the performance improvements in hardware and software architectures, more applications, which used to run on desktop computers, are now being migrated to mobile devices. However, this entails increased power consumption, that necessitates more effective runtime power management techniques due to battery capacity constraints. Such techniques should reduce power consumption while satisfying user-perceived requirements, such as frame rate, and response times. A major hurdle in incorporating such techniques into real products is that user-perceived requirements are only visible to user applications, but not accessible by the power managers residing in the operating system. In this paper, we show that better power management is achievable by passing such information to the OS, and propose an API for that purpose.",
              "pageNumber": 90,
              "isPageNumberRoman": false
            },
            {
              "id": "Ej6Otu2a51XJjtSMAW6LP",
              "type": "authorPaper",
              "text": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf",
              "extraLocations": [],
              "authorNames": "Aline Ebone (Unisinos), Yongshan Tan (DePaul University), Xiaoping Jia (DePaul University)",
              "abstract": "There is a wide range of different approaches and tool for cross-platform mobile application development. We studied the performance characteristic of the mobile applications developed with a number of common approaches and tools for mobile application development, including the native SDK's of Google Android and Apple iOS, and cross-platform tools of Apache Cordova, Microsoft Xamarin, and Appcelerator Titanium. The data reveal insights to the designs and trade-offs of different approaches and offer guidance in selecting the appropriate approaches based on their respective performance characteristics.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 A Performance Evaluation of Cross-Platform Mobile Application Development Approaches 1521780612076 Aline Ebone Unisinos alinemacbon@gmail.com Yongshan Tan DePaul University ytan17@mail.depaul.edu Xiaoping Jia DePaul University xjia@cdm.depaul.edu Cross platform mobile application development performance evaluation user interface responsiveness There is a wide range of different approaches and tool for cross-platform mobile application development. We studied the performance characteristic of the mobile applications developed with a number of common approaches and tools for mobile application development, including the native SDK's of Google Android and Apple iOS, and cross-platform tools of Apache Cordova, Microsoft Xamarin, and Appcelerator Titanium. The data reveal insights to the designs and trade-offs of different approaches and offer guidance in selecting the appropriate approaches based on their respective performance characteristics.",
              "pageNumber": 92,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S5: Helpfulness ",
          "lineItems": [
            {
              "id": "4vHCVTIwj9LT6bYfiQ3H0A",
              "type": "authorPaper",
              "text": "Intent to Share: Enhancing Android Inter-Component Communication for Distributed Devices",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1S3Dd6OotKwfzlcbu8Wh4b/6GRtupRJo5b5742PvsDHTl.pdf",
              "extraLocations": [],
              "authorNames": "Breno Dantas Cruz (Virginia Tech), Eli Tilevich (Virginia Tech)",
              "abstract": "Data-intensive applications in diverse domains, including video streaming, gaming, and health monitoring, increasingly require that mobile devices directly share data with each other. However, developing distributed data sharing functionality introduces low-level, brittle, and hard-to-maintain code into the mobile codebase. To reconcile the goals of programming convenience and performance efficiency, we present a novel middleware framework that enhances the Android platform's component model to support seamless and efficient inter-device data sharing. Our framework provides a familiar programming interface that extends the ubiquitous Android Inter-Component Communication (ICC), thus lowering the learning curve. Unlike middleware platforms based on the RPC paradigm, our programming abstractions require that mobile application developers think through and express explicitly data transmission patterns, thus treating latency as a first-class design concern. Our performance evaluation shows that using our framework incurs little performance overhead, comparable to that of custom-built implementations. By providing reusable programming abstractions that preserve component encapsulation, our framework enables Android devices to efficiently share data at the component level, providing powerful building blocks for the development of emerging distributed mobile applications.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Intent to Share: Enhancing Android Inter-Component Communication for Distributed Devices 1521478579947 Breno Dantas Cruz Virginia Tech bdantasc@vt.edu Eli Tilevich Virginia Tech tilevich@cs.vt.edu Programming Model Data Sharing Distributed Computing Android Inter Component Communication Data-intensive applications in diverse domains, including video streaming, gaming, and health monitoring, increasingly require that mobile devices directly share data with each other. However, developing distributed data sharing functionality introduces low-level, brittle, and hard-to-maintain code into the mobile codebase. To reconcile the goals of programming convenience and performance efficiency, we present a novel middleware framework that enhances the Android platform's component model to support seamless and efficient inter-device data sharing. Our framework provides a familiar programming interface that extends the ubiquitous Android Inter-Component Communication (ICC), thus lowering the learning curve. Unlike middleware platforms based on the RPC paradigm, our programming abstractions require that mobile application developers think through and express explicitly data transmission patterns, thus treating latency as a first-class design concern. Our performance evaluation shows that using our framework incurs little performance overhead, comparable to that of custom-built implementations. By providing reusable programming abstractions that preserve component encapsulation, our framework enables Android devices to efficiently share data at the component level, providing powerful building blocks for the development of emerging distributed mobile applications.",
              "pageNumber": 94,
              "isPageNumberRoman": false
            },
            {
              "id": "3MgrmBiqeUV4LR4xCp3d92",
              "type": "authorPaper",
              "text": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf",
              "extraLocations": [],
              "authorNames": "Zheng Song (Virginia Tech), Sanchit Chadha (Virginia Tech), Antuan Byalik (Virginia Tech), Eli Tilevich (Virginia Tech)",
              "abstract": "Modern mobile users commonly use multiple heterogeneous mobile devices, including smartphones, tablets, and wearables. Enabling these devices to seamlessly share their computational, network, and sensing resources has great potential benefit. Sharing resources across collocated mobile devices creates mobile device clouds (MDCs), commonly used to optimize application performance and to enable novel applications. However, enabling heterogeneous mobile devices to share their resources presents a number of difficulties, including the need to coordinate and steer the execution of devices with dissimilar network interfaces, application programming models, and system architectures. In this paper, we describe a solution that systematically empowers heterogeneous mobile devices to seamlessly, reliably, and efficiently share their resources. We present a programming model and runtime support for heterogeneous mobile device-to-device resource sharing. Our solution comprises a declarative domain-specific language for device-to-device cooperation, supported by a powerful runtime infrastructure. we evaluated our solution by conducting a controlled user study and running performance/energy efficiency benchmarks. The evaluation results indicate that our solution can become a practical tool for enhancing the capabilities of modern mobile applications by leveraging the resources of nearby mobile devices.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Programming Support for Sharing Resources across Heterogeneous Mobile Devices 1521580739409 Zheng Song Virginia Tech songz@cs.vt.edu Sanchit Chadha Virginia Tech schadha@cs.vt.edu Antuan Byalik Virginia Tech antuanb@cs.vt.edu Eli Tilevich Virginia Tech tilevich@cs.vt.edu resource sharing programming support mobile device cooperation Modern mobile users commonly use multiple heterogeneous mobile devices, including smartphones, tablets, and wearables. Enabling these devices to seamlessly share their computational, network, and sensing resources has great potential benefit. Sharing resources across collocated mobile devices creates mobile device clouds (MDCs), commonly used to optimize application performance and to enable novel applications. However, enabling heterogeneous mobile devices to share their resources presents a number of difficulties, including the need to coordinate and steer the execution of devices with dissimilar network interfaces, application programming models, and system architectures. In this paper, we describe a solution that systematically empowers heterogeneous mobile devices to seamlessly, reliably, and efficiently share their resources. We present a programming model and runtime support for heterogeneous mobile device-to-device resource sharing. Our solution comprises a declarative domain-specific language for device-to-device cooperation, supported by a powerful runtime infrastructure. we evaluated our solution by conducting a controlled user study and running performance/energy efficiency benchmarks. The evaluation results indicate that our solution can become a practical tool for enhancing the capabilities of modern mobile applications by leveraging the resources of nearby mobile devices.",
              "pageNumber": 105,
              "isPageNumberRoman": false
            },
            {
              "id": "1Rcpdtno1dGuHoAouk6osv",
              "type": "authorPaper",
              "text": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf",
              "extraLocations": [],
              "authorNames": "Pablo Sanabria (Pontificia Universidad Católica de Chile), Jose I. Benedetto (Pontificia Universidad Católica de Chile), Andres Neyem (Pontificia Universidad Católica de Chile), Jaime Navon (Pontificia Universidad Católica de Chile), Christian Poellabauer (University of Notre Dame)",
              "abstract": "In this paper, we present a real-life case study of a mobile healthcare application that leverages code offloading techniques to accelerate the execution of a complex deep neural network algorithm for analyzing audio samples. Resource-intensive machine learning tasks take a significant time to complete on high-end devices, while lower-end devices may outright crash when attempting to run them. In our experiments, offloading granted the former a 3.6x performance improvement, and up to 80% reduction in energy consumption; while the latter gained the capability of running a process they originally could not.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study 1521440517007 Pablo Sanabria Pontificia Universidad Católica de Chile psanabria@uc.cl Jose I. Benedetto Pontificia Universidad Católica de Chile jibenede@uc.cl Andres Neyem Pontificia Universidad Católica de Chile aneyem@uc.cl Jaime Navon Pontificia Universidad Católica de Chile jnavon@uc.cl Christian Poellabauer University of Notre Dame cpoellab@nd.edu Mobile Cloud Computing Mobil Cloud Based Systems Mobile Code Offloading Cloud Based Mobile Augmentation In this paper, we present a real-life case study of a mobile healthcare application that leverages code offloading techniques to accelerate the execution of a complex deep neural network algorithm for analyzing audio samples. Resource-intensive machine learning tasks take a significant time to complete on high-end devices, while lower-end devices may outright crash when attempting to run them. In our experiments, offloading granted the former a 3.6x performance improvement, and up to 80% reduction in energy consumption; while the latter gained the capability of running a process they originally could not.",
              "pageNumber": 117,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S6: Inquisitiveness ",
          "lineItems": [
            {
              "id": "7efIGd6zNugPeuNrXiRZ7n",
              "type": "authorPaper",
              "text": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf",
              "extraLocations": [],
              "authorNames": "Ariel Rosenfeld (Weizmann Institute of Science), Odaya Kardashov (Bar-Ilan University), Orel Zang (Bar-Ilan University)",
              "abstract": "Following the ever-growing demand for mobile applications, researchers are constantly developing new test automation solutions for mobile developers. However, researchers have yet to produce an automated functional testing approach, resulting in many developers relying on a resource consuming manual testing. In this paper, we present a novel approach for the automation of functional testing in mobile software by leveraging machine learning techniques and reusing generic test scenarios. Our approach aims at relieving some of the manual functional testing burden by automatically classifying each of the application's screens to a set of common screen behaviors for which generic test scripts can be instantiated and reused. We empirically demonstrate the potential benefits of our approach in two experiments: First, using 26 randomly selected Android applications, we show that our approach can successfully instantiate and reuse generic functional tests and discover functional bugs. Second, in a human study with two experienced human mobile testers, we show that our approach can automatically cover a large portion of the human testers' work suggesting a significant potential relief in the manual testing efforts.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Automation of Android Applications Functional Testing Using Machine Learning Activities Classification 1521808252834 Ariel Rosenfeld Weizmann Institute of Science arielros1@gmail.com Odaya Kardashov Bar-Ilan University odaya1993@gmail.com Orel Zang Bar-Ilan University orelzang@gmail.com Android Applications Testing Mobile Testing Automation Activities Classification Following the ever-growing demand for mobile applications, researchers are constantly developing new test automation solutions for mobile developers. However, researchers have yet to produce an automated functional testing approach, resulting in many developers relying on a resource consuming manual testing. In this paper, we present a novel approach for the automation of functional testing in mobile software by leveraging machine learning techniques and reusing generic test scenarios. Our approach aims at relieving some of the manual functional testing burden by automatically classifying each of the application's screens to a set of common screen behaviors for which generic test scripts can be instantiated and reused. We empirically demonstrate the potential benefits of our approach in two experiments: First, using 26 randomly selected Android applications, we show that our approach can successfully instantiate and reuse generic functional tests and discover functional bugs. Second, in a human study with two experienced human mobile testers, we show that our approach can automatically cover a large portion of the human testers' work suggesting a significant potential relief in the manual testing efforts.",
              "pageNumber": 122,
              "isPageNumberRoman": false
            },
            {
              "id": "1lKIfHeRU81Xq3OeykBQLu",
              "type": "authorPaper",
              "text": "Guiding App Testing with Mined Interaction Models",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/dNmewr7weK1YD5YVdxv7F/3SlrPLN2rg60lt7lSePnqr.pdf",
              "extraLocations": [],
              "authorNames": "Nataniel P. Borges Jr. (Saarland University), Maria Gómez (Saarland University), Andreas Zeller (Saarland University)",
              "abstract": "Test generators for graphical user interfaces must constantly choose which UI element to interact with, and how. We guide this choice by mining associations between UI elements and their interactions from the most common applications. Once mined, the resulting UI interaction model can be easily applied to new apps and new test generators. In our experiments, the mined interaction models lead to code coverage improvements of 19.41% and 43.03% on average on two state-of-the-art tools (Droidmate and Droidbot), when executing the same number of actions.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Guiding App Testing with Mined Interaction Models 1521477912820 Nataniel P. Borges Jr. Saarland University nataniel.borges@cispa.saarland Maria Gómez Saarland University maria.gomez@uni-saarland.de Andreas Zeller Saarland University zeller@cs.uni-saarland.de mobile testing model mining Android Test generators for graphical user interfaces must constantly choose which UI element to interact with, and how. We guide this choice by mining associations between UI elements and their interactions from the most common applications. Once mined, the resulting UI interaction model can be easily applied to new apps and new test generators. In our experiments, the mined interaction models lead to code coverage improvements of 19.41% and 43.03% on average on two state-of-the-art tools (Droidmate and Droidbot), when executing the same number of actions.",
              "pageNumber": 133,
              "isPageNumberRoman": false
            },
            {
              "id": "56hNjzsvfxdofk2CNbC4tF",
              "type": "authorPaper",
              "text": "Self-Reported Activities of Android Developers",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf",
              "extraLocations": [],
              "authorNames": "Luca Pascarella (Delft University of Technology), Franz-Xaver Geiger (Vrije Universiteit Amsterdam), Fabio Palomba (University of Zurich), Dario Di Nucci (Vrije Universiteit Brussel), Ivano Malavolta (Vrije Universiteit Amsterdam), Alberto Bacchelli (University of Zurich)",
              "abstract": "To gain a deeper empirical understanding of how developers work on Android apps, we investigate self-reported activities of Android developers and to what extent these activities can be classified with machine learning techniques. To this aim, we firstly create a taxonomy of self-reported activities coming from the manual analysis of 5,000 commit messages from 8,280 Android apps. Then, we study the frequency of each category of self-reported activities identified in the taxonomy, and investigate the feasibility of an automated classification approach. Our findings can inform be used by both practitioners and researchers to take informed decisions or support other software engineering activities.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Self-Reported Activities of Android Developers 1521817790201 Luca Pascarella Delft University of Technology l.pascarella@tudelft.nl Franz-Xaver Geiger Vrije Universiteit Amsterdam f.geiger@student.vu.nl Fabio Palomba University of Zurich palomba@ifi.uzh.ch Dario Di Nucci Vrije Universiteit Brussel ddinucci@vub.ac.be Ivano Malavolta Vrije Universiteit Amsterdam i.malavolta@vu.nl Alberto Bacchelli University of Zurich bacchelli@ifi.uzh.ch Android Empirical Study Mining Software Repositories To gain a deeper empirical understanding of how developers work on Android apps, we investigate self-reported activities of Android developers and to what extent these activities can be classified with machine learning techniques. To this aim, we firstly create a taxonomy of self-reported activities coming from the manual analysis of 5,000 commit messages from 8,280 Android apps. Then, we study the frequency of each category of self-reported activities identified in the taxonomy, and investigate the feasibility of an automated classification approach. Our findings can inform be used by both practitioners and researchers to take informed decisions or support other software engineering activities.",
              "pageNumber": 144,
              "isPageNumberRoman": false
            },
            {
              "id": "2NPHOKlBbRutrsn5rBT7dS",
              "type": "authorPaper",
              "text": "How Do Android Operating System Updates Impact Apps?",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf",
              "extraLocations": [],
              "authorNames": "Guowei Yang (Texas State University), Jeffrey Jones (Rowan University), Austin Moninger (Rice University), Meiru Che (Concordia University Texas)",
              "abstract": "Mobile devices are practically ubiquitous in today's society. People are increasingly dependent on mobile devices, for uses such as computation, navigation, storing private information, and web browsing among others. Thus, developers are required to produce high quality mobile apps. However, mobile operating systems are frequently updated, which can affect the functionality of mobile apps and hinder developers' ability to consistently provide high quality apps across multiple operating systems versions. In this paper, we introduce a novel approach for automatically locating the part of Android apps that have been affected by an update of the underlying Android mobile operating system, and statistically analyzing the impact of the update. Preliminary evaluation shows that the overall impact of an operating system update is low.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 How Do Android Operating System Updates Impact Apps? 1521519549272 Guowei Yang Texas State University gyang@txstate.edu Jeffrey Jones Rowan University jeffjones2994@gmail.com Austin Moninger Rice University acm9@rice.edu Meiru Che Concordia University Texas meiru.che@concordia.edu Android change impact analysis mobile operating system API Mobile devices are practically ubiquitous in today's society. People are increasingly dependent on mobile devices, for uses such as computation, navigation, storing private information, and web browsing among others. Thus, developers are required to produce high quality mobile apps. However, mobile operating systems are frequently updated, which can affect the functionality of mobile apps and hinder developers' ability to consistently provide high quality apps across multiple operating systems versions. In this paper, we introduce a novel approach for automatically locating the part of Android apps that have been affected by an update of the underlying Android mobile operating system, and statistically analyzing the impact of the update. Preliminary evaluation shows that the overall impact of an operating system update is low.",
              "pageNumber": 156,
              "isPageNumberRoman": false
            },
            {
              "id": "7UNabfMds1cFaiOQNFOue",
              "type": "authorPaper",
              "text": "Detecting No-Sleep Energy Bugs Using Reference Counted Variables",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2UOr6Fneg8VkP5Lov34jPR/66V3zI1wNjTOB5RsCUBcW7.pdf",
              "extraLocations": [],
              "authorNames": "Scott Hall (Oakland University), Suman Nataraj (Oakland University), Dae-Kyoo Kim (Oakland University)",
              "abstract": "Mobile devices have become pervasive in today's society. The range of their use has been constantly increasing, which requires more computing capability. As the computing capability of mobile devices grow, so does the need for effective power management. There has been some work on reducing the power consumption of mobile applications by detecting energy bugs. In this work, we address no-sleep energy bugs with respect to semaphore wakelocks in consideration of race conditions with synchronization using reaching definitions and parallel flow graphs. We demonstrate the approach through a case example.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Detecting No-Sleep Energy Bugs Using Reference Counted Variables 1521474460455 Scott Hall Oakland University wshall@oakland.edu Suman Nataraj Oakland University snataraj@oakland.edu Dae-Kyoo Kim Oakland University kim2@oakland.edu Energy bugs mobile computing reaching definition race condition wakeLock Mobile devices have become pervasive in today's society. The range of their use has been constantly increasing, which requires more computing capability. As the computing capability of mobile devices grow, so does the need for effective power management. There has been some work on reducing the power consumption of mobile applications by detecting energy bugs. In this work, we address no-sleep energy bugs with respect to semaphore wakelocks in consideration of race conditions with synchronization using reaching definitions and parallel flow graphs. We demonstrate the approach through a case example.",
              "pageNumber": 161,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S7: Adaptiveness ",
          "lineItems": [
            {
              "id": "1TPuTC7QfnWq5VeWq8j3r",
              "type": "authorPaper",
              "text": "LiqDroid: Towards Seamlessly Distributed Android Applications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf",
              "extraLocations": [],
              "authorNames": "Luciano Baresi (DEIB - Politecnico di Milano), Anita Imani (DEIB - Politecnico di Milano), Cristina Frá (TIM S.p.A. - Services Innovation), Massimo Valla (TIM S.p.A. - Services Innovation)",
              "abstract": "Mobile devices have changed the way we live, but most applications are still conceived for isolated devices and do not allow the user to take advantage of the different devices (e.g., phones, cars, watches, televisions, etc.) opportunistically, efficiently, and dynamically. Multi-device interactions are currently mainly conceived as independent cooperating applications, which then require the a-priori definition of the set of communicating elements, along with the responsibility carried out by each participant. This paper tries to flip the perspective and fosters the idea of liquid, loosely coupled distributed Android applications by extending intent-based app communication, usually limited to the same device, to proximal devices. While changing the operating system would have been too expensive, the concept has been implemented through LiqDroid, a middleware that eases the creation of distributed Android applications and oversees their execution on a dynamically changing set of Android devices. Specifically, LiqDroid is an Android service that both augments each single Android device and manages their cooperation. Some example applications demonstrate the main characteristics of LiqDroid and provide interesting insights for possible future developments.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 LiqDroid: Towards Seamlessly Distributed Android Applications 1521455199611 Luciano Baresi DEIB - Politecnico di Milano luciano.baresi@polimi.it Anita Imani DEIB - Politecnico di Milano anita.imani@polimi.it Cristina Frá TIM S.p.A. - Services Innovation cristina.fra@telecomitalia.it Massimo Valla TIM S.p.A. - Services Innovation massimo.valla@telecomitalia.it LiqDroid liquid computing Android Distributed apps Mobile devices have changed the way we live, but most applications are still conceived for isolated devices and do not allow the user to take advantage of the different devices (e.g., phones, cars, watches, televisions, etc.) opportunistically, efficiently, and dynamically. Multi-device interactions are currently mainly conceived as independent cooperating applications, which then require the a-priori definition of the set of communicating elements, along with the responsibility carried out by each participant. This paper tries to flip the perspective and fosters the idea of liquid, loosely coupled distributed Android applications by extending intent-based app communication, usually limited to the same device, to proximal devices. While changing the operating system would have been too expensive, the concept has been implemented through LiqDroid, a middleware that eases the creation of distributed Android applications and oversees their execution on a dynamically changing set of Android devices. Specifically, LiqDroid is an Android service that both augments each single Android device and manages their cooperation. Some example applications demonstrate the main characteristics of LiqDroid and provide interesting insights for possible future developments.",
              "pageNumber": 166,
              "isPageNumberRoman": false
            },
            {
              "id": "2Wruh8H5tWokB7badftaih",
              "type": "authorPaper",
              "text": "Towards a Framework for Proximity-Based Hybrid Mobile Applications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/c3yvsjcybuRWNJUh1ynnm/RpjaA5JJZVt0xjXCf14v3.pdf",
              "extraLocations": [],
              "authorNames": "Valerio Panzica La Manna (IMEC), Frank Pasveer (IMEC)",
              "abstract": "Despite the increasing availability of IoT devices and technology, the current user interaction requires users to download dedicated ad-hoc mobile apps, each of these remotely monitoring and controlling a limited set of IoT devices. In the near future, with billions of deployed IoT devices, this approach will not scale since users cannot be expected to download different apps for every place they visit or every device they interact with. To overcome such limitation, this paper presents the vision, the risks, and opportunities, of the development and deployment of future hybrid proximity services, as a paradigm shift for an intuitive interaction between users and the surrounding IoT environment. Hybrid proximity services are user-facing mobile applications developed and configured for specific locations and automatically installed on user mobile devices when the user is in their proximity and without the need of explicit download. A proximity service enabled environment can directly provide the user with the right service for the right place, and automatically instructs the user device on how to interact with the surrounding IoT devices.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Towards a Framework for Proximity-Based Hybrid Mobile Applications 1521479427044 Valerio Panzica La Manna IMEC valerio.panzicalamanna@imec-nl.nl Frank Pasveer IMEC frank.pasveer@imec-nl.nl proximity services location based services hybrid mobile applications physical web IoT Despite the increasing availability of IoT devices and technology, the current user interaction requires users to download dedicated ad-hoc mobile apps, each of these remotely monitoring and controlling a limited set of IoT devices. In the near future, with billions of deployed IoT devices, this approach will not scale since users cannot be expected to download different apps for every place they visit or every device they interact with. To overcome such limitation, this paper presents the vision, the risks, and opportunities, of the development and deployment of future hybrid proximity services, as a paradigm shift for an intuitive interaction between users and the surrounding IoT environment. Hybrid proximity services are user-facing mobile applications developed and configured for specific locations and automatically installed on user mobile devices when the user is in their proximity and without the need of explicit download. A proximity service enabled environment can directly provide the user with the right service for the right place, and automatically instructs the user device on how to interact with the surrounding IoT devices.",
              "pageNumber": 176,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S8: Resourcefulness ",
          "lineItems": [
            {
              "id": "45l43vQGCeVeHhBdPzJ2WT",
              "type": "authorPaper",
              "text": "Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/67gfBNc0dr0P1DQH78eAGU/2g2EA4pFdwSe4GsF2eqxyq.pdf",
              "extraLocations": [],
              "authorNames": "Kijin An (Virginia Tech), Na Meng (Virginia Tech), Eli Tilevich (Virginia Tech)",
              "abstract": "A native cross-platform mobile app has multiple platform-specific implementations. Typically, an app is developed for one platform and then ported to the remaining ones. Translating an app from one language (e.g., Java) to another (e.g., Swift) by hand is tedious and error-prone, while automated translators either require manually defined translation rules or focus on translating APIs. To automate the translation of native cross-platform apps, we present j2sInferer, a novel approach that iteratively infers syntactic transformation rules and API mappings from Java to Swift. Given a software corpus in both languages, j2sInferer first identifies the syntactically equivalent code based on braces and string similarity. For each pair of similar code segments, j2sInferer then creates syntax trees of both languages, leveraging the minimalist domain knowledge of language correspondence (e.g., operators and markers) to iteratively align syntax tree nodes, and to infer both syntax and API mapping rules. j2sInferer represents inferred rules as string templates, stored in a database, to translate code from Java to Swift. We evaluated j2sInferer with four applications, using one part of the data to infer translation rules, and the other part to apply the rules. With 76% in-project accuracy and 65% cross-project accuracy, j2sInferer outperforms in accuracy j2swift, a state-of-the-art Java-to-Swift conversion tool. As native cross-platform mobile apps grow in popularity, j2sInferer can shorten their time to market by automating the tedious and error prone task of source-to-source translation.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications 1521471025780 Kijin An Virginia Tech ankijin@vt.edu Na Meng Virginia Tech nm8247@cs.vt.edu Eli Tilevich Virginia Tech tilevich@cs.vt.edu source to source translation iterative rule inference minimalist domain knowledge A native cross-platform mobile app has multiple platform-specific implementations. Typically, an app is developed for one platform and then ported to the remaining ones. Translating an app from one language (e.g., Java) to another (e.g., Swift) by hand is tedious and error-prone, while automated translators either require manually defined translation rules or focus on translating APIs. To automate the translation of native cross-platform apps, we present j2sInferer, a novel approach that iteratively infers syntactic transformation rules and API mappings from Java to Swift. Given a software corpus in both languages, j2sInferer first identifies the syntactically equivalent code based on braces and string similarity. For each pair of similar code segments, j2sInferer then creates syntax trees of both languages, leveraging the minimalist domain knowledge of language correspondence (e.g., operators and markers) to iteratively align syntax tree nodes, and to infer both syntax and API mapping rules. j2sInferer represents inferred rules as string templates, stored in a database, to translate code from Java to Swift. We evaluated j2sInferer with four applications, using one part of the data to infer translation rules, and the other part to apply the rules. With 76% in-project accuracy and 65% cross-project accuracy, j2sInferer outperforms in accuracy j2swift, a state-of-the-art Java-to-Swift conversion tool. As native cross-platform mobile apps grow in popularity, j2sInferer can shorten their time to market by automating the tedious and error prone task of source-to-source translation.",
              "pageNumber": 180,
              "isPageNumberRoman": false
            },
            {
              "id": "6gRtmZA4pizfrqq45Z2lHL",
              "type": "authorPaper",
              "text": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf",
              "extraLocations": [],
              "authorNames": "Leonardo Corbalan (Universidad Nacional de la Plata), Juan Fernandez (Universidad Nacional de la Plata), Alfonso Cuitiño (Universidad Nacional de la Plata), Lisandro Delia (Universidad Nacional de la Plata), Germán Cáseres (Universidad Nacional de la Plata), Pablo Thomas (Universidad Nacional de la Plata), Patricia Pesado (Universidad Nacional de la Plata)",
              "abstract": "The development frameworks and the power efficiency in mobile devices have been studied separately. This paper deals with both topics together to determine how the selection of a development framework can impact on energy consumption of a mobile application. The focus is on applications with high processing load, audio and video playback. The results were analyzed and conclusions were reached.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption 1521492059412 Leonardo Corbalan Universidad Nacional de la Plata corbalan@lidi.info.unlp.edu.ar Juan Fernandez Universidad Nacional de la Plata jfernandez@lidi.info.unlp.edu.ar Alfonso Cuitiño Universidad Nacional de la Plata acuitino@lidi.info.unlp.edu.ar Lisandro Delia Universidad Nacional de la Plata ldelia@lidi.info.unlp.edu.ar Germán Cáseres Universidad Nacional de la Plata gcaseres@lidi.info.unlp.edu.ar Pablo Thomas Universidad Nacional de la Plata pthomas@lidi.info.unlp.edu.ar Patricia Pesado Universidad Nacional de la Plata ppesado@lidi.info.unlp.edu.ar Mobile devices multiplatform development approaches development frameworks native mobile applications energy consumption energy efficiency The development frameworks and the power efficiency in mobile devices have been studied separately. This paper deals with both topics together to determine how the selection of a development framework can impact on energy consumption of a mobile application. The focus is on applications with high processing load, audio and video playback. The results were analyzed and conclusions were reached.",
              "pageNumber": 191,
              "isPageNumberRoman": false
            },
            {
              "id": "4UZ0oTKHTLMyt9M6bAIEDW",
              "type": "authorPaper",
              "text": "ANEL: Robust Mobile Network Programming Using a Declarative Language",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6cvuWh9A5dODPN6zZ73nkV/6pY4QxksVXKUnmcWoGgUrZ.pdf",
              "extraLocations": [],
              "authorNames": "Xinxin Jin (University of California San Diego), William G. Griswold (University of California San Diego), Yuanyuan Zhou (University of California San Diego)",
              "abstract": "The dynamics of mobile networks make it difficult for mobile apps to deliver a seamless user experience. In particular, intermittent connections and weak signals pose challenges for app developers. While recent network libraries have simplified network programming, much expert knowledge is still required. However, most mobile app developers are relative novices and tend to assume a reliable network connection, paying little attention to handling network errors in programming until users complain and leave bad reviews. We argue that the difficulty of avoiding such software defects can be mitigated through an annotation language that allows developers to declaratively state desired and actual properties of the application, largely without reference to fault-tolerant concepts, much less implementation. A pre-compiler can process these annotations, replacing calls to standard networking libraries with customized calls to a specialized library that enhances the reliability. This paper presents ANEL, a declarative language and middleware for Android that en-ables non-experts. We demonstrate the expressiveness and practicability of ANEL annotation through case studies and usability studies on real-world networked mobile apps. We also show that the ANEL middleware introduces negligible runtime performance overhead.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 ANEL: Robust Mobile Network Programming Using a Declarative Language 1521523670771 Xinxin Jin University of California San Diego xinxin@cs.ucsd.edu William G. Griswold University of California San Diego wgg@cs.ucsd.edu Yuanyuan Zhou University of California San Diego yyzhou@cs.ucsd.edu Annotation Programming App reliability The dynamics of mobile networks make it difficult for mobile apps to deliver a seamless user experience. In particular, intermittent connections and weak signals pose challenges for app developers. While recent network libraries have simplified network programming, much expert knowledge is still required. However, most mobile app developers are relative novices and tend to assume a reliable network connection, paying little attention to handling network errors in programming until users complain and leave bad reviews. We argue that the difficulty of avoiding such software defects can be mitigated through an annotation language that allows developers to declaratively state desired and actual properties of the application, largely without reference to fault-tolerant concepts, much less implementation. A pre-compiler can process these annotations, replacing calls to standard networking libraries with customized calls to a specialized library that enhances the reliability. This paper presents ANEL, a declarative language and middleware for Android that en-ables non-experts. We demonstrate the expressiveness and practicability of ANEL annotation through case studies and usability studies on real-world networked mobile apps. We also show that the ANEL middleware introduces negligible runtime performance overhead.",
              "pageNumber": 202,
              "isPageNumberRoman": false
            },
            {
              "id": "5re79qzko0o3JZRtjkkJ1m",
              "type": "authorPaper",
              "text": "Beyond Web/Native/Hybrid: A New Taxonomy for Mobile App Development",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7mEd2jzriF7VRyHkP6uWHi/1AhvGKXWf1IXAKWtsV0cta.pdf",
              "extraLocations": [],
              "authorNames": "Robin Nunkesser (Hamm-Lippstadt University of Applied Sciences)",
              "abstract": "Currently, mobile operating systems are dominated by the duopoly of iOS and Android. App projects that intend to reach a high number of customers need to target these two platforms foremost. However, iOS and Android do not have an officially supported common development framework. Instead, different development approaches are available for multi-platform development. The standard taxonomy for different development approaches of mobile applications is: Web Apps, Native Apps, Hybrid Apps. While this made perfect sense for iPhone development, it is not accurate for Android or cross-platform development, for example. In this paper, a new taxonomy is proposed. Based on the fundamental difference in the tools and programming languages used for the task, six different categories are proposed for everyday use: Endemic Apps, Web Apps, Hybrid Web Apps, Hybrid Bridged Apps, System Language Apps, and Foreign Language Apps. In addition, when a more precise distinction is necessary, a total of three main categories and seven subcategories are defined. The paper also contains a short overview of the advantages and disadvantages of the approaches mentioned.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Beyond Web/Native/Hybrid: A New Taxonomy for Mobile App Development 1521360353659 Robin Nunkesser Hamm-Lippstadt University of Applied Sciences robin.nunkesser@hshl.de Mobile App Native Web Hybrid Android iOS Currently, mobile operating systems are dominated by the duopoly of iOS and Android. App projects that intend to reach a high number of customers need to target these two platforms foremost. However, iOS and Android do not have an officially supported common development framework. Instead, different development approaches are available for multi-platform development. The standard taxonomy for different development approaches of mobile applications is: Web Apps, Native Apps, Hybrid Apps. While this made perfect sense for iPhone development, it is not accurate for Android or cross-platform development, for example. In this paper, a new taxonomy is proposed. Based on the fundamental difference in the tools and programming languages used for the task, six different categories are proposed for everyday use: Endemic Apps, Web Apps, Hybrid Web Apps, Hybrid Bridged Apps, System Language Apps, and Foreign Language Apps. In addition, when a more precise distinction is necessary, a total of three main categories and seven subcategories are defined. The paper also contains a short overview of the advantages and disadvantages of the approaches mentioned.",
              "pageNumber": 214,
              "isPageNumberRoman": false
            },
            {
              "id": "6O24nm1cYPIxx3Kwk7WJ4k",
              "type": "authorPaper",
              "text": "Vision: Improved Development of Mobile eHealth Applications",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf",
              "extraLocations": [],
              "authorNames": "John Grundy (Monash University), Mohamed Abdelrazek (Deakin University), Maheswaree Kissoon Curumsing (Deakin University)",
              "abstract": "Mobile eHealth applications have become very popular, not just using mobile phones but also wearables, mobile AR/VR, and increasingly \"smart houses\" and \"smart care\" sensing and interaction facilities. However, a large majority of these solutions, despite early promise, suffer from a range of challenges including effort to develop, deploy and maintain; lack of end-user acceptance; integration with other health systems; diffculty in tailoring to divergent users; lack of adequate feedback to developers; lack of sustainable adoption; and ultimately lack of success. In this MobileSoft vision paper, we characterise these key issues from a Software Engineering perspective and present and discuss some approaches to mitigating them, building on our and others prior work.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Vision: Improved Development of Mobile eHealth Applications 1523096929366 John Grundy Monash University john.grundy@monash.edu Mohamed Abdelrazek Deakin University mohamed.abdelrazek@deakin.edu.au Maheswaree Kissoon Curumsing Deakin University m.curumsing@deakin.edu.au mobile eHealth applications living lab behavioral requirements emotion oriented requirements model driven engineering configuration and adaptation user feedback Mobile eHealth applications have become very popular, not just using mobile phones but also wearables, mobile AR/VR, and increasingly \"smart houses\" and \"smart care\" sensing and interaction facilities. However, a large majority of these solutions, despite early promise, suffer from a range of challenges including effort to develop, deploy and maintain; lack of end-user acceptance; integration with other health systems; diffculty in tailoring to divergent users; lack of adequate feedback to developers; lack of sustainable adoption; and ultimately lack of success. In this MobileSoft vision paper, we characterise these key issues from a Software Engineering perspective and present and discuss some approaches to mitigating them, building on our and others prior work.",
              "pageNumber": 219,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MobileSoft 2018 - S9: Usefulness ",
          "lineItems": [
            {
              "id": "04uuk5d8uVIBGMPTnIoYT",
              "type": "authorPaper",
              "text": "P2A: A Tool for Converting Pixels to Animated Mobile Application User Interfaces",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7f8hN7Pn6xO9QPMQzw9HO6/5VIEG0Hexz560riIylXdr7.pdf",
              "extraLocations": [],
              "authorNames": "Siva Natarajan (University of Texas at Arlington), Christoph Csallner (University of Texas at Arlington)",
              "abstract": "Developing mobile applications is typically a labor-intensive process in which software engineers manually re-implement in code screen designs, inter-screen transitions, and in-screen animations developed by user interface and user experience experts. Other engineering domains have used computer vision techniques to automate human perception and manual data entry tasks. The P2A tool adopts computer vision techniques for developing animated mobile applications. P2A infers from mobile application screen designs the user interface portion of an application's source code and other assets that are ready to be compiled and executed on a mobile phone. Among others, inferred mobile applications contain inter-screen transitions and in-screen animations. In our experiments on screenshots of 30 highly-ranked third-party Android applications, the P2A-generated application user interfaces exhibited high pixel-to-pixel similarity with their input screenshots. P2A took an average of 26 seconds to infer in-screen animations.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 P2A: A Tool for Converting Pixels to Animated Mobile Application User Interfaces 1521324918742 Siva Natarajan University of Texas at Arlington siva.natarajan@mavs.uta.edu Christoph Csallner University of Texas at Arlington csallner@uta.edu Mobile software engineering pixel based design Developing mobile applications is typically a labor-intensive process in which software engineers manually re-implement in code screen designs, inter-screen transitions, and in-screen animations developed by user interface and user experience experts. Other engineering domains have used computer vision techniques to automate human perception and manual data entry tasks. The P2A tool adopts computer vision techniques for developing animated mobile applications. P2A infers from mobile application screen designs the user interface portion of an application's source code and other assets that are ready to be compiled and executed on a mobile phone. Among others, inferred mobile applications contain inter-screen transitions and in-screen animations. In our experiments on screenshots of 30 highly-ranked third-party Android applications, the P2A-generated application user interfaces exhibited high pixel-to-pixel similarity with their input screenshots. P2A took an average of 26 seconds to infer in-screen animations.",
              "pageNumber": 224,
              "isPageNumberRoman": false
            },
            {
              "id": "6LmzOMMGQNrOmX31DGrh8E",
              "type": "authorPaper",
              "text": "GUIFetch: Supporting App Design and Development through GUI Search",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf",
              "extraLocations": [],
              "authorNames": "Farnaz Behrang (Georgia Tech), Steven P. Reiss (Brown University), Alessandro Orso (Georgia Tech)",
              "abstract": "A typical way to design and develop a mobile app is to sketch the graphical user interfaces (GUIs) for the different screens in the app and then create actual GUIs from these sketches. Doing so involves identifying which layouts to use, which widgets to add, and how to configure and connect the different pieces of the GUI. To help with this difficult and time-consuming task, we propose GUIFetch, a technique that takes as input the sketch for an app and leverages the growing number of open source apps in public repositories to identify apps with GUIs and transitions that are similar to those in the provided sketch. GUIFetch first searches public repositories to find potential apps using keyword matching. It then builds models of the identified apps’ screens and screen transitions using a combination of static and dynamic analyses and computes a similarity metric between the models and the provided sketch. Finally, GUIFetch ranks the identified apps (or parts thereof) based on their computed similarity value and produces a visual ranking of the results together with the code of the corresponding apps. We implemented GUIFetch for Android apps and evaluated it through user studies involving different types of apps.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 GUIFetch: Supporting App Design and Development through GUI Search Farnaz Behrang Georgia Tech behrang@gatech.edu Steven P. Reiss Brown University spr@cs.brown.edu Alessandro Orso Georgia Tech orso@cc.gatech.edu User-interface-design user-interface-programming code-search A typical way to design and develop a mobile app is to sketch the graphical user interfaces (GUIs) for the different screens in the app and then create actual GUIs from these sketches. Doing so involves identifying which layouts to use, which widgets to add, and how to configure and connect the different pieces of the GUI. To help with this difficult and time-consuming task, we propose GUIFetch, a technique that takes as input the sketch for an app and leverages the growing number of open source apps in public repositories to identify apps with GUIs and transitions that are similar to those in the provided sketch. GUIFetch first searches public repositories to find potential apps using keyword matching. It then builds models of the identified apps’ screens and screen transitions using a combination of static and dynamic analyses and computes a similarity metric between the models and the provided sketch. Finally, GUIFetch ranks the identified apps (or parts thereof) based on their computed similarity value and produces a visual ranking of the results together with the code of the corresponding apps. We implemented GUIFetch for Android apps and evaluated it through user studies involving different types of apps.",
              "pageNumber": 236,
              "isPageNumberRoman": false
            },
            {
              "id": "5g1ctCT6PIcIfwnhc868DS",
              "type": "authorPaper",
              "text": "Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1AqWIyNws8JvQIDx1b9cyZ/2HqGpmXwOoKrPJhNoIdfhq.pdf",
              "extraLocations": [],
              "authorNames": "Simon André Scherr (Fraunhofer IESE), Frank Elberzhager (Fraunhofer IESE), Konstantin Holl (Fraunhofer IESE)",
              "abstract": "Mobile applications are nowadays used by everyone. The success of a mobile app highly depends on its user acceptance, which must be checked as part of quality assurance. However, such tests are costly because they usually include testers using the app manually. An obvious solution for improving efficiency is to automate certain test steps. In this article, we present an approach that tracks user emotions automatically to support acceptance testing. Furthermore, we consider user motivation in a positive way with gamification solutions and focus on data privacy aspects in order to gain the trust of potential test users.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups 1521448759787 Simon André Scherr Fraunhofer IESE simon.scherr@iese.fraunhofer.de Frank Elberzhager Fraunhofer IESE frank.elberzhager@iese.fraunhofer.de Konstantin Holl Fraunhofer IESE konstantin.holl@iese.fraunhofer.de Test Emojis Animojis User Acceptance Automation Mobile applications are nowadays used by everyone. The success of a mobile app highly depends on its user acceptance, which must be checked as part of quality assurance. However, such tests are costly because they usually include testers using the app manually. An obvious solution for improving efficiency is to automate certain test steps. In this article, we present an approach that tracks user emotions automatically to support acceptance testing. Furthermore, we consider user motivation in a positive way with gamification solutions and focus on data privacy aspects in order to gain the trust of potential test users.",
              "pageNumber": 247,
              "isPageNumberRoman": false
            },
            {
              "id": "5uXwE9nnyZzTvUX57Gp3RT",
              "type": "authorPaper",
              "text": "Vision: Mobile eHealth Learning and Intervention Platform",
              "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf",
              "extraLocations": [],
              "authorNames": "Mohamed Abdelrazek (Deakin University), John Grundy (Monash University), Amani Ibrahim (Deakin University), Andrew Cain (Deakin University)",
              "abstract": "Face-to-face health educational and intervention programs are helpful in addressing mental and physical illness challenges in focused groups. However, these programs are expensive, resource-intensive and struggle with scalability and reachability, leading to limited take-up and short-term impact. Digital Health Intervention (DHI) programs incorporate the use of technology - mobile, web, wearables, virtual and augmented reality - to address these limitations while being more cost-effective. DHIs have shown major success in improving physical and mental health outcomes for the general public as well as reducing adverse outcomes or high-risk groups. However, it is still very challenging and expensive to design and run high quality mobile-based DHI programs, in part due to the lack of technical skills of researchers in this field. Our proposed mobile eHealth Learning and Intervention Platform (eHeLP) aims to address these challenges with a novel approach that allows health researchers to focus on their studies, and participants to have access to multiple health programs that meet their needs. The platform caters for identified stakeholders in the DHI field and encourages the development of a new health-tech industry. We present our vision eHeLP, why this idea is worth further research, risks we perceive, and next steps.",
              "searchText": "2018 ACM/IEEE 5th International Conference on Mobile Software Engineering and Systems MOBILESoft 2018 Vision: Mobile eHealth Learning and Intervention Platform 1523936903801 Mohamed Abdelrazek Deakin University mohamed.abdelrazek@deakin.edu.au John Grundy Monash University john.grundy@monash.edu Amani Ibrahim Deakin University amani.ibrahim@deakin.edu.au Andrew Cain Deakin University andrew.cain@deakin.edu.au mHealth Digitial Health Intervention eHealth Marketplace Health Analytics Face-to-face health educational and intervention programs are helpful in addressing mental and physical illness challenges in focused groups. However, these programs are expensive, resource-intensive and struggle with scalability and reachability, leading to limited take-up and short-term impact. Digital Health Intervention (DHI) programs incorporate the use of technology - mobile, web, wearables, virtual and augmented reality - to address these limitations while being more cost-effective. DHIs have shown major success in improving physical and mental health outcomes for the general public as well as reducing adverse outcomes or high-risk groups. However, it is still very challenging and expensive to design and run high quality mobile-based DHI programs, in part due to the lack of technical skills of researchers in this field. Our proposed mobile eHealth Learning and Intervention Platform (eHeLP) aims to address these challenges with a novel approach that allows health researchers to focus on their studies, and participants to have access to multiple health programs that meet their needs. The platform caters for identified stakeholders in the DHI field and encourages the development of a new health-tech industry. We present our vision eHeLP, why this idea is worth further research, risks we perceive, and next steps.",
              "pageNumber": 252,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories",
      "acronym": "MSR",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7LVvBR0SLwLHybMgodFjrv/12zVN0JWznm8aVksRteKNe.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/32tCyti1aaGedrrltnSoxP/2e0SoveLZLqGoum2h1BBe6.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DKxQGyDxzWE5jGvet3oS9/2vkBD4wObeuvXfEWvUbGXC.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1sSPaR1WFlCGKOQCGtWZvZ/2hXXz6z7DAuSQS8Liz8c4i.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/76PsEjbjj7GtJka64UNfPi/5uhEgvcUTSW3nQAGNqYt8t.pdf",
          "extraLocations": [],
          "pageNumber": 14,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from MSR 2018 Chairs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4085Sjoy3llPEuvCc6uF3W/13z0A9MDzq3a2JFjwF2I1Z.pdf",
          "extraLocations": [],
          "pageNumber": 17,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3jo92LyND1Lo4r4yzXJZoC/51BNNoyQCEloHKfP3QhNJL.pdf",
          "extraLocations": [],
          "pageNumber": 19,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee - Technical Paper",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/44JC2cI9hImStembqzhql3/5gWHjQ02Gd8sxpcEZjL5Nh.pdf",
          "extraLocations": [],
          "pageNumber": 21,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Mining Challenge Program Committee",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5D4PXfS6CrhQFbpeHthA88/4wOhd681gvdPEJZdHAVV6n.pdf",
          "extraLocations": [],
          "pageNumber": 28,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Data Showcase Committee",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/12SovLoSz8I1wlpltsgLSF/25ne2NdgadCBa5esKPtGYp.pdf",
          "extraLocations": [],
          "pageNumber": 31,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "Additional Reviewers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3jj5O0ZPlsvPCW2W95a1gl/5TKb4O32QX1efAdegZf0sg.pdf",
          "extraLocations": [],
          "pageNumber": 32,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5cjXLJRyZkeG33plj7d9pn/7qMX3mkyOZKoI2RiBDBOrA.pdf",
          "extraLocations": [],
          "pageNumber": 33,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3KxofHPHUMBzlK9MDZ8wn0/1zeevuUJq7AstfJR27zlTd.pdf",
          "extraLocations": [],
          "pageNumber": 593,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2rInDZXtZzJeYywDNghHk3/5LZhyVzPU01bniM5RA7sQA.pdf",
          "extraLocations": [],
          "pageNumber": 598,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MSR 2018 - Data Showcase",
          "lineItems": [
            {
              "id": "4Umcr69Ow0eZrvePdfGLYA",
              "type": "authorPaper",
              "text": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf",
              "extraLocations": [],
              "authorNames": "Pedro Martins (UCI), Rohan Achar (University of California), Cristina V. Lopes (University of California)",
              "abstract": "We provide a repository of 50,000 compilable Java projects. Each project in this dataset comes with references to all the dependencies required to compile it, the resulting bytecode, and the scripts with which the projects were built. The dependencies and the build scripts provide a mechanism to re-create compilation of the projects, if needed (to instruct source code for bytecode analysis, for example). The bytecode is ready for testing, execution, and dynamic analysis tools.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 50K-C: A Dataset of Compilable, and Compiled, Java Projects 1521238519892 Pedro Martins UCI pribeiro@uci.edu Rohan Achar University of California rachar@uci.edu Cristina V. Lopes University of California lopes@uci.edu Large Scale Compilation Runnable Software Repositories Software Mining We provide a repository of 50,000 compilable Java projects. Each project in this dataset comes with references to all the dependencies required to compile it, the resulting bytecode, and the scripts with which the projects were built. The dependencies and the build scripts provide a mechanism to re-create compilation of the projects, if needed (to instruct source code for bytecode analysis, for example). The bytecode is ready for testing, execution, and dynamic analysis tools.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            },
            {
              "id": "6LAqXvS1KUnG055ifOwBrD",
              "type": "authorPaper",
              "text": "JBench: A Dataset of Data Races for Concurrency Testing",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf",
              "extraLocations": [],
              "authorNames": "Jian Gao (Tsinghua University), Xin Yang (Tsinghua University), Yu Jiang (Tsinghua University), Han Liu (Tsinghua University), Weiliang Ying (Huawei Technologies Co.), Xian Zhang (Huawei Technologies Co.)",
              "abstract": "Race detection is increasingly popular, both in the academic research and in industrial practice. However, there is no specialized and comprehensive dataset of the data race, making it difficult to achieve the purpose of effectively evaluating race detectors or developing efficient race detection algorithms. In this paper, we presented JBench, a dataset with a total number of 985 data races from real-world applications and academic artifacts. We pointed out the locations of data races, provided source code, provided running commands and standardized storage structure. We also analyzed all the data races and classified them from four aspects: variable type, code structure, method span and cause. Furthermore, we discussed usages of the dataset in two scenarios: optimize race detection techniques and extract concurrency patterns.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 JBench: A Dataset of Data Races for Concurrency Testing 1521114954079 Jian Gao Tsinghua University gaojian094@gmail.com Xin Yang Tsinghua University yangx16@mails.tsinghua.edu.cn Yu Jiang Tsinghua University jiangyu198964@126.com Han Liu Tsinghua University liuhan0518@163.com Weiliang Ying Huawei Technologies Co. yingweiliang976@126.com Xian Zhang Huawei Technologies Co. zhangxian7902@163.com data race classification dataset concurrency testing Race detection is increasingly popular, both in the academic research and in industrial practice. However, there is no specialized and comprehensive dataset of the data race, making it difficult to achieve the purpose of effectively evaluating race detectors or developing efficient race detection algorithms. In this paper, we presented JBench, a dataset with a total number of 985 data races from real-world applications and academic artifacts. We pointed out the locations of data races, provided source code, provided running commands and standardized storage structure. We also analyzed all the data races and classified them from four aspects: variable type, code structure, method span and cause. Furthermore, we discussed usages of the dataset in two scenarios: optimize race detection techniques and extract concurrency patterns.",
              "pageNumber": 6,
              "isPageNumberRoman": false
            },
            {
              "id": "75HvEt5KtYLefzPTMxdwMA",
              "type": "authorPaper",
              "text": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf",
              "extraLocations": [],
              "authorNames": "Ripon Saha (Fujitsu Labs of America), Yingjun Lyu (University of Southern California), Wing Lam (University of Illinois at Urbana-Champaign), Hiroaki Yoshida (Fujitsu Labs of America), Mukul Prasad (Fujitsu Labs of America)",
              "abstract": "We present Bugs.jar, a large-scale dataset for research in automated debugging, patching, and testing of Java programs. Bugs.jar is comprised of 1,158 bugs and patches, drawn from 8 large, popular opensource Java projects, spanning 8 diverse and prominent application categories. It is an order of magnitude larger than Defects4J, the only other dataset in its class. We discuss the methodology used for constructing Bugs.jar, the representation of the dataset, several use-cases, and an illustration of three of the use-cases through the application of 3 specific tools on Bugs.jar, namely our own tool, Elixir, and two third-party tools, Ekstazi and JaCoCo.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs 1521247102696 Ripon Saha Fujitsu Labs of America rsaha@us.fujitsu.com Yingjun Lyu University of Southern California yingjunl@usc.edu Wing Lam University of Illinois at Urbana-Champaign winglam2@illinois.edu Hiroaki Yoshida Fujitsu Labs of America hyoshida@us.fujitsu.com Mukul Prasad Fujitsu Labs of America mukul@us.fujitsu.com Reproducible Bugs Large Scale Dataset Java Programs We present Bugs.jar, a large-scale dataset for research in automated debugging, patching, and testing of Java programs. Bugs.jar is comprised of 1,158 bugs and patches, drawn from 8 large, popular opensource Java projects, spanning 8 diverse and prominent application categories. It is an order of magnitude larger than Defects4J, the only other dataset in its class. We discuss the methodology used for constructing Bugs.jar, the representation of the dataset, several use-cases, and an illustration of three of the use-cases through the application of 3 specific tools on Bugs.jar, namely our own tool, Elixir, and two third-party tools, Ekstazi and JaCoCo.",
              "pageNumber": 10,
              "isPageNumberRoman": false
            },
            {
              "id": "1BET2JBtn0KZ1Yv22R19QO",
              "type": "authorPaper",
              "text": "A Gold Standard for Emotion Annotation in Stack Overflow",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2zXXCaCZSLbHi9Q37UvpS9/ND7YXM1z7MerOP41IKQNG.pdf",
              "extraLocations": [],
              "authorNames": "Nicole Novielli (University of Bari Aldo Moro), Fabio Calefato (University of Bari Aldo Moro), Filippo Lanubile (University of Bari Aldo Moro)",
              "abstract": "Software developers experience and share a wide range of emotions throughout a rich ecosystem of communication channels. A recent trend that has emerged in empirical software engineering studies is leveraging sentiment analysis of developers' communication traces. We release a dataset of 4,800 questions, answers, and comments from Stack Overflow, manually annotated for emotions. Our dataset contributes to the building of a shared corpus of annotated resources to support research on emotion awareness in software development.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Gold Standard for Emotion Annotation in Stack Overflow 1521048012999 Nicole Novielli University of Bari Aldo Moro nicole.novielli@uniba.it Fabio Calefato University of Bari Aldo Moro fabio.calefato@uniba.it Filippo Lanubile University of Bari Aldo Moro filippo.lanubile@uniba.it Emotion Mining Sentiment Analysis Communication Channels Stack Overflow Social Software Engineering Software developers experience and share a wide range of emotions throughout a rich ecosystem of communication channels. A recent trend that has emerged in empirical software engineering studies is leveraging sentiment analysis of developers' communication traces. We release a dataset of 4,800 questions, answers, and comments from Stack Overflow, manually annotated for emotions. Our dataset contributes to the building of a shared corpus of annotated resources to support research on emotion awareness in software development.",
              "pageNumber": 14,
              "isPageNumberRoman": false
            },
            {
              "id": "3DlPDObiqnkqV2TkfjhD58",
              "type": "authorPaper",
              "text": "VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1nUxyIEZiXlC3woWkerAB3/4sbqMlxiIxD1zaEVwS8TkJ.pdf",
              "extraLocations": [],
              "authorNames": "Antonios Gkortzis (Athens University of Economics and Business), Dimitris Mitropoulos (Athens University of Economics and Business), Diomidis Spinellis (Athens University of Economics and Business)",
              "abstract": "Examining the different characteristics of open-source software in relation to security vulnerabilities, can provide the research community with findings that can lead to the development of more secure systems. We present a dataset where the reported vulnerabilities of 8694 open-source project versions, can be correlated with the corresponding source code and a number of software metrics. The metrics were obtained by analyzing the project's source code via well-established tools. Apart from commonly used metrics (e.g. loc), we also provide data related to modern development trends such as continuous integration and testing. We outline motivational examples based on the dataset we describe.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems 1521451997203 Antonios Gkortzis Athens University of Economics and Business antoniosgkortzis@aueb.gr Dimitris Mitropoulos Athens University of Economics and Business dimitro@aueb.gr Diomidis Spinellis Athens University of Economics and Business dds@aueb.gr Security Vulnerabilities Open-source Software Continuous Integration Testing Examining the different characteristics of open-source software in relation to security vulnerabilities, can provide the research community with findings that can lead to the development of more secure systems. We present a dataset where the reported vulnerabilities of 8694 open-source project versions, can be correlated with the corresponding source code and a number of software metrics. The metrics were obtained by analyzing the project's source code via well-established tools. Apart from commonly used metrics (e.g. loc), we also provide data related to modern development trends such as continuous integration and testing. We outline motivational examples based on the dataset we describe.",
              "pageNumber": 18,
              "isPageNumberRoman": false
            },
            {
              "id": "2HrjulXtn4WsrGTeTTIUHN",
              "type": "authorPaper",
              "text": "A Dataset of Duplicate Pull-Requests in GitHub",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf",
              "extraLocations": [],
              "authorNames": "Yue Yu (College of Computer), Zhixing Li (College of Computer), Gang Yin (College of Computer), Tao Wang (College of Computer), Huaimin Wang (College of Computer)",
              "abstract": "In GitHub, the pull-based development model enables community contributors to collaborate in a more efficient way. However, the distributed and parallel characteristics of this model pose a potential risk for developers to submit duplicate pull-requests (PRs), which increase the extra cost of project maintenance. To facilitate the further studies to better understand and solve the issues introduced by duplicate PRs, we construct a large dataset of historical duplicate PRs extracted from 26 popular open source projects in GitHub by using a semi-automatic approach. Furthermore, we present some preliminary applications to illustrate how further researches can be conducted based on this dataset.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Dataset of Duplicate Pull-Requests in GitHub 1521103253051 Yue Yu College of Computer yuyue@nudt.edu.cn Zhixing Li College of Computer lizhixing15@nudt.edu.cn Gang Yin College of Computer yingang@nudt.edu.cn Tao Wang College of Computer taowang2005@nudt.edu.cn Huaimin Wang College of Computer hmwang@nudt.edu.cn Duplicate pull-request distributed software development GitHub In GitHub, the pull-based development model enables community contributors to collaborate in a more efficient way. However, the distributed and parallel characteristics of this model pose a potential risk for developers to submit duplicate pull-requests (PRs), which increase the extra cost of project maintenance. To facilitate the further studies to better understand and solve the issues introduced by duplicate PRs, we construct a large dataset of historical duplicate PRs extracted from 26 popular open source projects in GitHub by using a semi-automatic approach. Furthermore, we present some preliminary applications to illustrate how further researches can be conducted based on this dataset.",
              "pageNumber": 22,
              "isPageNumberRoman": false
            },
            {
              "id": "6aZTB4NUiAbp1hhVp6BGxI",
              "type": "authorPaper",
              "text": "Structured Information on State and Evolution of Dockerfiles on GitHub",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tbcdm06zSC6TEH3VA6arE/4bOo28bCYpLh3XngDSLPNJ.pdf",
              "extraLocations": [],
              "authorNames": "Gerald Schermann (University of Zurich), Sali Zumberi (University of Zurich), Jürgen Cito (University of Zurich)",
              "abstract": "Docker containers are standardized, self-contained units of applications, packaged with their dependencies and execution environment. The environment is defined in a Dockerfile that specifies the steps to reach a certain system state as infrastructure code, with the aim of enabling reproducible builds of the container. To lay the groundwork for research on infrastructure code, we collected structured information about the state and the evolution of Docker-files on GitHub and release it as a PostgreSQL database archive (over 100,000 unique Dockerfiles in over 15,000 GitHub projects). Our dataset enables answering a multitude of interesting research questions related to different kinds of software evolution behavior in the Docker ecosystem.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Structured Information on State and Evolution of Dockerfiles on GitHub 1521484796896 Gerald Schermann University of Zurich schermann@ifi.uzh.ch Sali Zumberi University of Zurich sali.zumberi@uzh.ch Jürgen Cito University of Zurich cito@ifi.uzh.ch Docker GitHub Containers Mining Software Repositories Docker containers are standardized, self-contained units of applications, packaged with their dependencies and execution environment. The environment is defined in a Dockerfile that specifies the steps to reach a certain system state as infrastructure code, with the aim of enabling reproducible builds of the container. To lay the groundwork for research on infrastructure code, we collected structured information about the state and the evolution of Docker-files on GitHub and release it as a PostgreSQL database archive (over 100,000 unique Dockerfiles in over 15,000 GitHub projects). Our dataset enables answering a multitude of interesting research questions related to different kinds of software evolution behavior in the Docker ecosystem.",
              "pageNumber": 26,
              "isPageNumberRoman": false
            },
            {
              "id": "6YLwMZtejgzuhAzcrR9Art",
              "type": "authorPaper",
              "text": "A Graph-Based Dataset of Commit History of Real-World Android apps",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf",
              "extraLocations": [],
              "authorNames": "Franz-Xaver Geiger (Vrije Universiteit Amsterdam), Ivano Malavolta (Vrije Universiteit Amsterdam), Luca Pascarella (Delft University of Technology), Fabio Palomba (Delft University of Technology), Dario Di Nucci (Vrije Universiteit Brussel), Alberto Bacchelli (University of Zurich)",
              "abstract": "Obtaining a good dataset to conduct empirical studies on the engineering of Android apps is an open challenge. To start tackling this challenge, we present AndroidTimeMachine, the rst, self-contained, publicly available dataset weaving spread-out data sources about real-world, open-source Android apps. Encoded as a graph-based database, AndroidTimeMachine concerns 8,431 real open-source Android apps and contains: (i) metadata about the apps' GitHub projects, (ii) Git repositories with full commit history and (iii) metadata extracted from the Google Play store, such as app ratings and permissions.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Graph-Based Dataset of Commit History of Real-World Android apps 1521286515367 Franz-Xaver Geiger Vrije Universiteit Amsterdam f.geiger@student.vu.nl Ivano Malavolta Vrije Universiteit Amsterdam i.malavolta@vu.nl Luca Pascarella Delft University of Technology l.pascarella@tudelft.nl Fabio Palomba Delft University of Technology palomba@ifi.uzh.ch Dario Di Nucci Vrije Universiteit Brussel ddinucci@vub.ac.be Alberto Bacchelli University of Zurich bacchelli@ifi.uzh.ch Android Mining Software Repositories Dataset Obtaining a good dataset to conduct empirical studies on the engineering of Android apps is an open challenge. To start tackling this challenge, we present AndroidTimeMachine, the rst, self-contained, publicly available dataset weaving spread-out data sources about real-world, open-source Android apps. Encoded as a graph-based database, AndroidTimeMachine concerns 8,431 real open-source Android apps and contains: (i) metadata about the apps' GitHub projects, (ii) Git repositories with full commit history and (iii) metadata extracted from the Google Play store, such as app ratings and permissions.",
              "pageNumber": 30,
              "isPageNumberRoman": false
            },
            {
              "id": "1Wwb2dfz1w2BbBp3m0rH4",
              "type": "authorPaper",
              "text": "Public Git Archive: A Big Code Dataset for All",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/22Twq1K4q0KBiv1E9lDd1N/1o2e5Gi5jqbzKJMEhX2QzU.pdf",
              "extraLocations": [],
              "authorNames": "Vadim Markovtsev (source{d}), Waren Long (source{d})",
              "abstract": "The number of open source software projects has been growing exponentially. The major online software repository host, GitHub, has accumulated tens of millions of publicly available Git version-controlled repositories. Although the research potential enabled by the available open source code is clearly substantial, no significant large-scale open source code datasets exist. In this paper, we present the Public Git Archive – dataset of 182,014 top-bookmarked Git repositories from GitHub. We describe the novel data retrieval pipeline to reproduce it. We also elaborate on the strategy for performing dataset updates and legal issues. The Public Git Archive occupies 3.0 TB on disk and is an order of magnitude larger than the current source code datasets. The dataset is made available through HTTP and provides the source code of the projects, the related metadata, and development history. The data retrieval pipeline employs an optimized worker queue model and an optimized archive format to efficiently store forked Git repositories, reducing the amount of data to download and persist. Public Git Archive aims to open a myriad of new opportunities for \"Big Code\" research.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Public Git Archive: A Big Code Dataset for All 1521567359069 Vadim Markovtsev source{d} vadim@sourced.tech Waren Long source{d} waren@sourced.tech source code git GitHub software repositories development history open dataset The number of open source software projects has been growing exponentially. The major online software repository host, GitHub, has accumulated tens of millions of publicly available Git version-controlled repositories. Although the research potential enabled by the available open source code is clearly substantial, no significant large-scale open source code datasets exist. In this paper, we present the Public Git Archive – dataset of 182,014 top-bookmarked Git repositories from GitHub. We describe the novel data retrieval pipeline to reproduce it. We also elaborate on the strategy for performing dataset updates and legal issues. The Public Git Archive occupies 3.0 TB on disk and is an order of magnitude larger than the current source code datasets. The dataset is made available through HTTP and provides the source code of the projects, the related metadata, and development history. The data retrieval pipeline employs an optimized worker queue model and an optimized archive format to efficiently store forked Git repositories, reducing the amount of data to download and persist. Public Git Archive aims to open a myriad of new opportunities for \"Big Code\" research.",
              "pageNumber": 34,
              "isPageNumberRoman": false
            },
            {
              "id": "7H7iKZl7V98VLdjdgjeNAz",
              "type": "authorPaper",
              "text": "Word Embeddings for the Software Engineering Domain",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2yUcqdZ1sGSWDujwCuUbAN/1gygjbeTTFatgdTevMgK1V.pdf",
              "extraLocations": [],
              "authorNames": "Vasiliki Efstathiou (Athens University of Economics and Business), Christos Chatzilenas (Athens University of Economics and Business), Diomidis Spinellis (Athens University of Economics and Business)",
              "abstract": "The software development process produces vast amounts of textual data expressed in natural language. Outcomes from the natural language processing community have been adapted in software engineering research for leveraging this rich textual information; these include methods and readily available tools, often furnished with pretrained models. State of the art pretrained models however, capture general, common sense knowledge, with limited value when it comes to handling data specific to a specialized domain. There is currently a lack of domain-specific pretrained models that would further enhance the processing of natural language artefacts related to software engineering. To this end, we release a word2vec model trained over 15GB of textual data from Stack Overflow posts. We illustrate how the model disambiguates polysemous words by interpreting them within their software engineering context. In addition, we present examples of fine-grained semantics captured by the model, that imply transferability of these results to diverse, targeted information retrieval tasks in software engineering and motivate for further reuse of the model.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Word Embeddings for the Software Engineering Domain 1521215370782 Vasiliki Efstathiou Athens University of Economics and Business vefstathiou@aueb.gr Christos Chatzilenas Athens University of Economics and Business xatzilenas16@aueb.gr Diomidis Spinellis Athens University of Economics and Business dds@aueb.gr Natural Language Processing Skip gram word2vec Stack Overflow The software development process produces vast amounts of textual data expressed in natural language. Outcomes from the natural language processing community have been adapted in software engineering research for leveraging this rich textual information; these include methods and readily available tools, often furnished with pretrained models. State of the art pretrained models however, capture general, common sense knowledge, with limited value when it comes to handling data specific to a specialized domain. There is currently a lack of domain-specific pretrained models that would further enhance the processing of natural language artefacts related to software engineering. To this end, we release a word2vec model trained over 15GB of textual data from Stack Overflow posts. We illustrate how the model disambiguates polysemous words by interpreting them within their software engineering context. In addition, we present examples of fine-grained semantics captured by the model, that imply transferability of these results to diverse, targeted information retrieval tasks in software engineering and motivate for further reuse of the model.",
              "pageNumber": 38,
              "isPageNumberRoman": false
            },
            {
              "id": "5mCiFP9zsQs9md7kmplc08",
              "type": "authorPaper",
              "text": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf",
              "extraLocations": [],
              "authorNames": "Kyriakos Chatzidimitriou (Electrical and Computer Engineering Dept.), Michail Papamichail (Electrical and Computer Engineering Dept.), Themistoklis Diamantopoulos (Electrical and Computer Engineering Dept.), Michail Tsapanos (Electrical and Computer Engineering Dept.), Andreas Symeonidis (Electrical and Computer Engineering Dept.)",
              "abstract": "As the popularity of the JavaScript language is constantly increasing, one of the most important challenges today is to assess the quality of JavaScript packages. Developers often employ tools for code linting and for the extraction of static analysis metrics in order to assess and/or improve their code. In this context, we have developed npn-miner, a platform that crawls the npm registry and analyzes the packages using static analysis tools in order to extract detailed quality metrics as well as high-level quality attributes, such as maintainability and security. Our infrastructure includes an index that is accessible through a web interface, while we have also constructed a dataset with the results of a detailed analysis for 2000 popular npm packages.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry 1521211279690 Kyriakos Chatzidimitriou Electrical and Computer Engineering Dept. kyrcha@issel.ee.auth.gr Michail Papamichail Electrical and Computer Engineering Dept. mpapamic@issel.ee.auth.gr Themistoklis Diamantopoulos Electrical and Computer Engineering Dept. thdiaman@issel.ee.auth.gr Michail Tsapanos Electrical and Computer Engineering Dept. michael.tsapanos@issel.ee.auth.gr Andreas Symeonidis Electrical and Computer Engineering Dept. asymeon@eng.auth.gr static analysis software quality javascript npm As the popularity of the JavaScript language is constantly increasing, one of the most important challenges today is to assess the quality of JavaScript packages. Developers often employ tools for code linting and for the extraction of static analysis metrics in order to assess and/or improve their code. In this context, we have developed npn-miner, a platform that crawls the npm registry and analyzes the packages using static analysis tools in order to extract detailed quality metrics as well as high-level quality attributes, such as maintainability and security. Our infrastructure includes an index that is accessible through a web interface, while we have also constructed a dataset with the results of a detailed analysis for 2000 popular npm packages.",
              "pageNumber": 42,
              "isPageNumberRoman": false
            },
            {
              "id": "vUqrrPfO5QNImVYHQ5dNr",
              "type": "authorPaper",
              "text": "CROP: Linking Code Reviews to Source Code Changes",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf",
              "extraLocations": [],
              "authorNames": "Matheus Paixao (University College London), Jens Krinke (University College London), Donggyun Han (University College London), Mark Harman (Fcebook and University College London)",
              "abstract": "Code review has been widely adopted by both industrial and open source software development communities. Research in code review is highly dependant on real-world data, and although existing researchers have attempted to provide code review datasets, there is still no dataset that links code reviews with complete versions of the system's code base mainly because reviewed versions are not kept in the system's version control repository. Thus, we present CROP, the Code Review Open Platform, the first curated code review repository that links review data with isolated complete versions (snapshots) of the source code at the time of review. CROP currently provides data for 8 software systems, 48,975 reviews and 112,617 patches, including versions of the systems that are inaccessible in the systems' original repositories. Moreover, CROP is extensible, and it will be continuously curated and extended.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 CROP: Linking Code Reviews to Source Code Changes 1521149781594 Matheus Paixao University College London matheus.paixao.14@ucl.ac.uk Jens Krinke University College London j.krinke@ucl.ac.uk Donggyun Han University College London d.han.14@ucl.ac.uk Mark Harman Fcebook and University College London mark.harman@ucl.ac.uk Code Review Repository Platform Software Change Analysis Code review has been widely adopted by both industrial and open source software development communities. Research in code review is highly dependant on real-world data, and although existing researchers have attempted to provide code review datasets, there is still no dataset that links code reviews with complete versions of the system's code base mainly because reviewed versions are not kept in the system's version control repository. Thus, we present CROP, the Code Review Open Platform, the first curated code review repository that links review data with isolated complete versions (snapshots) of the source code at the time of review. CROP currently provides data for 8 software systems, 48,975 reviews and 112,617 patches, including versions of the systems that are inaccessible in the systems' original repositories. Moreover, CROP is extensible, and it will be continuously curated and extended.",
              "pageNumber": 46,
              "isPageNumberRoman": false
            },
            {
              "id": "30IiKQ1oIHlxVraZM6bKfW",
              "type": "authorPaper",
              "text": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf",
              "extraLocations": [],
              "authorNames": "Aiko Yamashita (OsloMet - Oslo Metropolitan University), Fabio Petrillo (Concordia University), Foutse Khomh (Polytechnique Montreal), Yann-Gaël Guéhéneuc (Concordia University)",
              "abstract": "There are two well-known difficulties to test and interpret methodologies for mining developer interaction traces: first, the lack of enough large datasets needed by mining or machine learning approaches to provide reliable results; and second, the lack of \"ground truth\" or empirical evidence that can be used to triangulate the results, or to verify their accuracy and correctness. Moreover, relying solely on interaction traces limits our ability to take into account contextual factors that can affect the applicability of mining techniques in other contexts, as well hinders our ability to fully understand the mechanics behind observed phenomena. The data presented in this paper attempts to alleviate these challenges by providing 600+ hours of developer interaction traces, from which 26+ hours are backed with video recordings of the IDE screen and developer's comments. This data set is relevant to researchers interested in investigating program comprehension, and those who are developing techniques for interaction traces analysis and mining.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions 1521077776960 Aiko Yamashita OsloMet - Oslo Metropolitan University aiko.fallas@gmail.com Fabio Petrillo Concordia University fabio@petrillo.com Foutse Khomh Polytechnique Montreal foutse.khomh@polymtl.ca Yann-Gaël Guéhéneuc Concordia University yann-gael.gueheneuc@concordia.ca empirical study industrial data interaction traces log mining program comprehension programming flow There are two well-known difficulties to test and interpret methodologies for mining developer interaction traces: first, the lack of enough large datasets needed by mining or machine learning approaches to provide reliable results; and second, the lack of \"ground truth\" or empirical evidence that can be used to triangulate the results, or to verify their accuracy and correctness. Moreover, relying solely on interaction traces limits our ability to take into account contextual factors that can affect the applicability of mining techniques in other contexts, as well hinders our ability to fully understand the mechanics behind observed phenomena. The data presented in this paper attempts to alleviate these challenges by providing 600+ hours of developer interaction traces, from which 26+ hours are backed with video recordings of the IDE screen and developer's comments. This data set is relevant to researchers interested in investigating program comprehension, and those who are developing techniques for interaction traces analysis and mining.",
              "pageNumber": 50,
              "isPageNumberRoman": false
            },
            {
              "id": "45oH0DFq6aDeb6gRZfAFkk",
              "type": "authorPaper",
              "text": "A Multi-level Dataset of Linux Kernel Patchwork",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2Cy38XQpH2jSuLo56Bf9NG/7s4N9TBZ65Snk6crd3tqua.pdf",
              "extraLocations": [],
              "authorNames": "Yulin Xu (School of Electronics Engineering and Computer Science), Minghui Zhou (School of Electronics Engineering and Computer Science)",
              "abstract": "In many open source software projects (e.g., the Linux kernel), people contribute by sending code patches to the community. The community evaluates these contributions and decides whether to integrate the changes. To improve the efficiency of code contributions, substantial effort has been devoted to analyzing how patches are submitted and processed. Patch data are critical for this type of analysis, while retrieving and cleaning the data is a non-trivial job. To facilitate these studies, we share a multi-level dataset of a Linux kernel patchwork covering a nine-year history of patches and related discussion recorded by the Linux kernel mailing list (LKML). The data and scripts are provided at: https://zenodo.org/record/1165576",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Multi-level Dataset of Linux Kernel Patchwork 1521268469646 Yulin Xu School of Electronics Engineering and Computer Science kylinxyl@pku.edu.cn Minghui Zhou School of Electronics Engineering and Computer Science zhmh@pku.edu.cn Linux kernel patchwork patch dataset mailing list In many open source software projects (e.g., the Linux kernel), people contribute by sending code patches to the community. The community evaluates these contributions and decides whether to integrate the changes. To improve the efficiency of code contributions, substantial effort has been devoted to analyzing how patches are submitted and processed. Patch data are critical for this type of analysis, while retrieving and cleaning the data is a non-trivial job. To facilitate these studies, we share a multi-level dataset of a Linux kernel patchwork covering a nine-year history of patches and related discussion recorded by the Linux kernel mailing list (LKML). The data and scripts are provided at: https://zenodo.org/record/1165576",
              "pageNumber": 54,
              "isPageNumberRoman": false
            },
            {
              "id": "3c4yZmpXZGcuAE7MlGu1DP",
              "type": "authorPaper",
              "text": "Documented Unix Facilities over 48 Years",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4FJhB6MFicRFcJtYeq859b/532J4Nwk2EzsJ8YrSy9370.pdf",
              "extraLocations": [],
              "authorNames": "Diomidis Spinellis (Athens University of Economics and Business)",
              "abstract": "The documented Unix facilities data set provides the details regarding the evolution of 15596 unique facilities through 93 versions of Unix over a period of 48 years. It is based on the manual transcription of early scanned documents, on the curation of text obtained through optical character recognition, and on the automatic extraction of data from code available on the Unix History Repository. The data are categorized into user commands, system calls, C library functions, devices and special files, file formats and conventions, games et. al., miscellanea, system maintenance procedures and commands, and system kernel interfaces. A timeline view allows the visualization of the evolution across releases. The data can be used for empirical research regarding API evolution, system design, as well as technology adoption and trends.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Documented Unix Facilities over 48 Years 1521549205551 Diomidis Spinellis Athens University of Economics and Business dds@aueb.gr Unix software evolution API evolution The documented Unix facilities data set provides the details regarding the evolution of 15596 unique facilities through 93 versions of Unix over a period of 48 years. It is based on the manual transcription of early scanned documents, on the curation of text obtained through optical character recognition, and on the automatic extraction of data from code available on the Unix History Repository. The data are categorized into user commands, system calls, C library functions, devices and special files, file formats and conventions, games et. al., miscellanea, system maintenance procedures and commands, and system kernel interfaces. A timeline view allows the visualization of the evolution across releases. The data can be used for empirical research regarding API evolution, system design, as well as technology adoption and trends.",
              "pageNumber": 58,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MSR 2018 - Mining Challenge",
          "lineItems": [
            {
              "id": "x7GD6essynLK2x5xhIY5F",
              "type": "authorPaper",
              "text": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf",
              "extraLocations": [],
              "authorNames": "Sebastian Proksch (University of Zurich), Sven Amann (Technische Universität Darmstadt), Sarah Nadi (University of Alberta)",
              "abstract": "Developers have been the subject of many empirical studies over the years. To assist developers in their everyday work, an understanding of their activities is necessary, especially how they develop source code. Unfortunately, conducting such studies is very expensive and researchers often resort to studying artifacts after the fact. To pave the road for future empirical studies on developer activities, we built FeedBaG, a general-purpose interaction tracker for Visual Studio that monitors development activities. The observations are stored in enriched event streams that encode a holistic picture of the in-IDE development process. Enriched event streams capture all commands invoked in the IDE with additional context information, such as the test being run or the accompanying fine-grained code edits. We used FeedBaG to collect enriched event streams from 81 developers. Over 1,527 days, we collected more than 11M events that correspond to 15K hours of working time.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers 1521210013632 Sebastian Proksch University of Zurich proksch@ifi.uzh.ch Sven Amann Technische Universität Darmstadt amann@cs.tu-darmstadt.de Sarah Nadi University of Alberta nadi@ualberta.ca Integrated Development Environment In-IDE Interaction Tracking Event Stream Usage Data Fine-Grained Change Information Developers have been the subject of many empirical studies over the years. To assist developers in their everyday work, an understanding of their activities is necessary, especially how they develop source code. Unfortunately, conducting such studies is very expensive and researchers often resort to studying artifacts after the fact. To pave the road for future empirical studies on developer activities, we built FeedBaG, a general-purpose interaction tracker for Visual Studio that monitors development activities. The observations are stored in enriched event streams that encode a holistic picture of the in-IDE development process. Enriched event streams capture all commands invoked in the IDE with additional context information, such as the test being run or the accompanying fine-grained code edits. We used FeedBaG to collect enriched event streams from 81 developers. Over 1,527 days, we collected more than 11M events that correspond to 15K hours of working time.",
              "pageNumber": 62,
              "isPageNumberRoman": false
            },
            {
              "id": "Y1RJfSaP51AYPvbWWOxpv",
              "type": "authorPaper",
              "text": "Comprehension Effort and Programming Activities: Related? Or Not Related?",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3NKUe2aOSenqglECedNY5y/3qyMl0I6sjBmLY5jaE0FwS.pdf",
              "extraLocations": [],
              "authorNames": "Akond Rahman (North Carolina State University)",
              "abstract": "Researchers have observed programmers to allocate considerable amount of effort in program comprehension. But, how does program comprehension effort relate with programming activities? We answer this question by conducting an empirical study using the MSR 2018 Mining Challenge Dataset. We quantify programmers' comprehension effort, and investigate the relationship between program comprehension effort and four programming activities: navigating, editing, building projects, and debugging. We observe when programmers are involved in high comprehension effort they navigate and make edits at a significantly slower rate. However, we do not observe any significant differences in programmers' build and debugging behavior, when programmers are involved in high comprehension effort. Our findings suggest that the relationship between program comprehension effort and programming activities is nuanced, as not all programming activities associate with program comprehension effort.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Comprehension Effort and Programming Activities: Related? Or Not Related? 1520986927316 Akond Rahman North Carolina State University aarahman@ncsu.edu comprehension Halstead's complexity programming behavior programmer Researchers have observed programmers to allocate considerable amount of effort in program comprehension. But, how does program comprehension effort relate with programming activities? We answer this question by conducting an empirical study using the MSR 2018 Mining Challenge Dataset. We quantify programmers' comprehension effort, and investigate the relationship between program comprehension effort and four programming activities: navigating, editing, building projects, and debugging. We observe when programmers are involved in high comprehension effort they navigate and make edits at a significantly slower rate. However, we do not observe any significant differences in programmers' build and debugging behavior, when programmers are involved in high comprehension effort. Our findings suggest that the relationship between program comprehension effort and programming activities is nuanced, as not all programming activities associate with program comprehension effort.",
              "pageNumber": 66,
              "isPageNumberRoman": false
            },
            {
              "id": "3RFTXITsg05YUCOfixggYI",
              "type": "authorPaper",
              "text": "The Hidden Cost of Code Completion: Understanding the Impact of the Recommendation-List Length on its Efficiency",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/NW7H41z6ua4JPpVmIO4af/7tWrBYn4tHTBMYDxHnitYt.pdf",
              "extraLocations": [],
              "authorNames": "Xianhao Jin (Virginia Tech), Francisco Servant (Virginia Tech)",
              "abstract": "Automatic code completion is a useful and popular technique that software developers use to write code more effectively and efficiently. However, while the benefits of code completion are clear, its cost is yet not well understood. We hypothesize the existence of a hidden cost of code completion, which mostly impacts developers when code completion techniques produce long recommendations. We study this hidden cost of code completion by evaluating how the length of the recommendation list affects other factors that may cause inefficiencies in the process. We study how common long recommendations are, whether they often provide low-ranked correct items, whether they incur longer time to be assessed, and whether they were more prevalent when developers did not select any item in the list. In our study, we observe evidence for all these factors, confirming the existence of a hidden cost of code completion.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 The Hidden Cost of Code Completion: Understanding the Impact of the Recommendation-List Length on its Efficiency 1521228658880 Xianhao Jin Virginia Tech xianhao8@vt.edu Francisco Servant Virginia Tech fservant@vt.edu Code Completion Cost IntelliSense Automatic code completion is a useful and popular technique that software developers use to write code more effectively and efficiently. However, while the benefits of code completion are clear, its cost is yet not well understood. We hypothesize the existence of a hidden cost of code completion, which mostly impacts developers when code completion techniques produce long recommendations. We study this hidden cost of code completion by evaluating how the length of the recommendation list affects other factors that may cause inefficiencies in the process. We study how common long recommendations are, whether they often provide low-ranked correct items, whether they incur longer time to be assessed, and whether they were more prevalent when developers did not select any item in the list. In our study, we observe evidence for all these factors, confirming the existence of a hidden cost of code completion.",
              "pageNumber": 70,
              "isPageNumberRoman": false
            },
            {
              "id": "9OzBOY9MJL2JTbIkQJLTL",
              "type": "authorPaper",
              "text": "Empirical Study on the Relationship Between Developer's Working Habits and Efficiency",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4YR4IiN7N2xD8SPmKPg9GE/3IAtokElNPYIhiQlp2nnH2.pdf",
              "extraLocations": [],
              "authorNames": "Ariel Rodriguez (kyushu university), fumiya tanaka (kyushu university), yasutaka kamei (kyushu university)",
              "abstract": "Software developers can have a reputation for frequently working long and irregular hours which are widely considered to inhibit mental capacity and negatively affect work quality. This paper analyzes the working habits of software developers and the effects these habits have on efciency based on a large amount of data extracted from the actions of developers in the IDE (Integrated Development Environment), Visual Studio. We use events that recorded the times at which all developer actions were performed along with the numbers of successful and failed build and test events. Due to the high level of detail of the events provided by KaVE project's tool, we were able to analyze the data in a way that previous studies have not been able to. We structure our study along three dimensions: (1) days of the week, (2) time of the day, and (3) continuous work. Our findings will help software developers and team leaders to appropriately allocate working times and to maximise work quality.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Empirical Study on the Relationship Between Developer's Working Habits and Efficiency 1521433583458 Ariel Rodriguez kyushu university roda@kyudai.jp fumiya tanaka kyushu university tanaka@f.ait.kyushu-u.ac.jp yasutaka kamei kyushu university kamei@ait.kyushu-u.ac.jp human factors developer working hours developer activity efficiency productivity user studies Software developers can have a reputation for frequently working long and irregular hours which are widely considered to inhibit mental capacity and negatively affect work quality. This paper analyzes the working habits of software developers and the effects these habits have on efciency based on a large amount of data extracted from the actions of developers in the IDE (Integrated Development Environment), Visual Studio. We use events that recorded the times at which all developer actions were performed along with the numbers of successful and failed build and test events. Due to the high level of detail of the events provided by KaVE project's tool, we were able to analyze the data in a way that previous studies have not been able to. We structure our study along three dimensions: (1) days of the week, (2) time of the day, and (3) continuous work. Our findings will help software developers and team leaders to appropriately allocate working times and to maximise work quality.",
              "pageNumber": 74,
              "isPageNumberRoman": false
            },
            {
              "id": "4SyX82T3pBRbEDCp1gaXTn",
              "type": "authorPaper",
              "text": "Mining and Extraction of Personal Software Process Measures through IDE Interaction Logs",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4SPwj7oHM58u1ebfOvCkzd/6nkv830YYUB4WCKRG51ZPB.pdf",
              "extraLocations": [],
              "authorNames": "Alireza Joonbakhsh (Shiraz University), Ashkan Sami (Shiraz University)",
              "abstract": "The Personal Software Process (PSP) is an effective software process improvement method that heavily relies on manual collection of software development data. This paper describes a semi-automated method that reduces the burden of PSP data collection by extracting the required time and size of PSP measurements from IDE interaction logs. The tool mines enriched event data streams so can be easily generalized to other developing environment also. In addition, the proposed method is adaptable to phase definition changes and creates activity visualizations and summarizations that are helpful for software project management. Tools and processed data used for this paper are available on GitHub at: https://github.com/unknowngithubuser1/data.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Mining and Extraction of Personal Software Process Measures through IDE Interaction Logs 1521540595699 Alireza Joonbakhsh Shiraz University ac_ali2582@yahoo.com Ashkan Sami Shiraz University sami@shirazu.ac.ir IDE Personal Software Process The Personal Software Process (PSP) is an effective software process improvement method that heavily relies on manual collection of software development data. This paper describes a semi-automated method that reduces the burden of PSP data collection by extracting the required time and size of PSP measurements from IDE interaction logs. The tool mines enriched event data streams so can be easily generalized to other developing environment also. In addition, the proposed method is adaptable to phase definition changes and creates activity visualizations and summarizations that are helpful for software project management. Tools and processed data used for this paper are available on GitHub at: https://github.com/unknowngithubuser1/data.",
              "pageNumber": 78,
              "isPageNumberRoman": false
            },
            {
              "id": "28mlXQuNGSnD34ZVnP39Ly",
              "type": "authorPaper",
              "text": "Predicting Developers' IDE Commands with Machine Learning",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3sIkWAZkujnhOEp1TgwToe/6hZmbi8mq10FXusX1xqFGM.pdf",
              "extraLocations": [],
              "authorNames": "Tyson Bulmer (University of Victoria), Lloyd Montgomery (University of Victoria), Daniela Damian (University of Victoria)",
              "abstract": "When a developer is writing code they are usually focused and in a state-of-mind which some refer to as flow. Breaking out of this flow can cause the developer to lose their train of thought and have to start their thought process from the beginning. This loss of thought can be caused by interruptions and sometimes slow IDE interactions. Predictive functionality has been harnessed in user applications to speed up load times, such as in Google Chrome's browser which has a feature called \"Predicting Network Actions\". This will pre-load web-pages that the user is most likely to click through. This mitigates the interruption that load times can introduce. In this paper we seek to make the first step towards predicting user commands in the IDE. Using the MSR 2018 Challenge Data of over 3000 developer session and over 10 million recorded events, we analyze and cleanse the data to be parsed into event series, which can then be used to train a variety of machine learning models, including a neural network, to predict user induced commands. Our highest performing model is able to obtain a 5 cross-fold validation prediction accuracy of 64%.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Predicting Developers' IDE Commands with Machine Learning 1521534033617 Tyson Bulmer University of Victoria tysonbul@uvic.ca Lloyd Montgomery University of Victoria lloydrm@uvic.ca Daniela Damian University of Victoria danielad@uvic.ca IDE Monitoring Machine Learning Neural Network Developer Commands When a developer is writing code they are usually focused and in a state-of-mind which some refer to as flow. Breaking out of this flow can cause the developer to lose their train of thought and have to start their thought process from the beginning. This loss of thought can be caused by interruptions and sometimes slow IDE interactions. Predictive functionality has been harnessed in user applications to speed up load times, such as in Google Chrome's browser which has a feature called \"Predicting Network Actions\". This will pre-load web-pages that the user is most likely to click through. This mitigates the interruption that load times can introduce. In this paper we seek to make the first step towards predicting user commands in the IDE. Using the MSR 2018 Challenge Data of over 3000 developer session and over 10 million recorded events, we analyze and cleanse the data to be parsed into event series, which can then be used to train a variety of machine learning models, including a neural network, to predict user induced commands. Our highest performing model is able to obtain a 5 cross-fold validation prediction accuracy of 64%.",
              "pageNumber": 82,
              "isPageNumberRoman": false
            },
            {
              "id": "3leR2Mp7TG3AGlFQIq3IlZ",
              "type": "authorPaper",
              "text": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf",
              "extraLocations": [],
              "authorNames": "Rahul Amlekar (McGill University), Andrés Felipe Rincón Gamboa (McGill University), Keheliya Gallaba (McGill University), Shane McIntosh (McGill University)",
              "abstract": "Autocomplete is a common workspace feature that is used to recommend code snippets as developers type in their IDEs. Users of autocomplete features no longer need to remember programming syntax and the names and details of the API methods that are needed to accomplish tasks. Moreover, autocompletion of code snippets may have an accelerating effect, lowering the number of keystrokes that are needed to type the code. However, like any tool, implicit tendencies of users may emerge. Knowledge of how developers in different roles use autocompletion features may help to guide future autocompletion development, research, and training material. In this paper, we set out to better understand how usage of autocompletion varies among software engineers and other developers (i.e., academic researchers, industry researchers, hobby programmers, and students). Analysis of autocompletion events in the Mining Software Repositories (MSR) challenge dataset reveals that: (1) rates of autocompletion usage among software engineers and other developers are not significantly different; and (2) although several non-negligible effect sizes of autocompletion targets (e.g., local variables, method names) are detected between the two groups, the rates at which these targets appear do not vary to a significant degree. These inconclusive results are likely due to the small sample size (n = 35); however, they do provide an interesting insight for future studies to build upon.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Do Software Engineers Use Autocompletion Features Differently than Other Developers? 1521257223948 Rahul Amlekar McGill University rahul.amlekar@mail.mcgill.ca Andrés Felipe Rincón Gamboa McGill University andres.rincon@mail.mcgill.ca Keheliya Gallaba McGill University keheliya.gallaba@mail.mcgill.ca Shane McIntosh McGill University shane.mcintosh@mcgill.ca Autocomplete IDE Interaction Data Empirical Software Engineering Command Recommendation Systems Autocomplete is a common workspace feature that is used to recommend code snippets as developers type in their IDEs. Users of autocomplete features no longer need to remember programming syntax and the names and details of the API methods that are needed to accomplish tasks. Moreover, autocompletion of code snippets may have an accelerating effect, lowering the number of keystrokes that are needed to type the code. However, like any tool, implicit tendencies of users may emerge. Knowledge of how developers in different roles use autocompletion features may help to guide future autocompletion development, research, and training material. In this paper, we set out to better understand how usage of autocompletion varies among software engineers and other developers (i.e., academic researchers, industry researchers, hobby programmers, and students). Analysis of autocompletion events in the Mining Software Repositories (MSR) challenge dataset reveals that: (1) rates of autocompletion usage among software engineers and other developers are not significantly different; and (2) although several non-negligible effect sizes of autocompletion targets (e.g., local variables, method names) are detected between the two groups, the rates at which these targets appear do not vary to a significant degree. These inconclusive results are likely due to the small sample size (n = 35); however, they do provide an interesting insight for future studies to build upon.",
              "pageNumber": 86,
              "isPageNumberRoman": false
            },
            {
              "id": "6e0uYWKGukafUseyqLGTZ6",
              "type": "authorPaper",
              "text": "Who's This? Developer Identification Using IDE Event Data",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf",
              "extraLocations": [],
              "authorNames": "John Wilkie (University College London), Ziad Al Halabi (University College London), Alperen Karaoglu (University College London), Jiafeng Liao (University College London), George Ndungu (University College London), Chaiyong Ragkhitwetsagul (University College London), Matheus Paixao (University College London), Jens Krinke (University College London)",
              "abstract": "This paper presents a technique to identify a developer based on their IDE event data. We exploited the KaVE data set which recorded IDE activities from 85 developers with 11M events. We found that using an SVM with a linear kernel on raw event count outperformed k-NN in identifying developers with an accuracy of 0.52. Moreover, after setting the optimal number of events and sessions to train the classifier, we achieved a higher accuracy of 0.69 and 0.71 respectively. The findings shows that we can identify developers based on their IDE event data. The technique can be expanded further to group similar developers for IDE feature recommendations.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Who's This? Developer Identification Using IDE Event Data 1521245457031 John Wilkie University College London john.wilkie.17@ucl.ac.uk Ziad Al Halabi University College London ziad.halabi.17@ucl.ac.uk Alperen Karaoglu University College London alperen.karaoglu.17@ucl.ac.uk Jiafeng Liao University College London jiafeng.liao.14@ucl.ac.uk George Ndungu University College London george.ndungu.17@ucl.ac.uk Chaiyong Ragkhitwetsagul University College London chaiyong.ragkhitwetsagul.14@ucl.ac.uk Matheus Paixao University College London matheus.paixao.14@ucl.ac.uk Jens Krinke University College London j.krinke@ucl.ac.uk Machine Learning Integrated Development Environment Recommendation Systems This paper presents a technique to identify a developer based on their IDE event data. We exploited the KaVE data set which recorded IDE activities from 85 developers with 11M events. We found that using an SVM with a linear kernel on raw event count outperformed k-NN in identifying developers with an accuracy of 0.52. Moreover, after setting the optimal number of events and sessions to train the classifier, we achieved a higher accuracy of 0.69 and 0.71 respectively. The findings shows that we can identify developers based on their IDE event data. The technique can be expanded further to group similar developers for IDE feature recommendations.",
              "pageNumber": 90,
              "isPageNumberRoman": false
            },
            {
              "id": "DY49f5cmc6Ltuv09XO8P6",
              "type": "authorPaper",
              "text": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf",
              "extraLocations": [],
              "authorNames": "Agnieszka Ciborowska (Virginia Commonwealth University), Nicholas A. Kraft (ABB Corporate Research), Kostadin Damevski (Virginia Commonwealth University)",
              "abstract": "Modern software development is social and relies on many online resources and tools. In this paper, we study opportunistic code reuse from the Web, e.g. when developers copy code snippets from popular Q&amp;A sites and paste them into their projects. Our focus is the behavior of developers following opportunistic code reuse, which reveals the success or failure of the action. We study developer behavior via a large, representative dataset of micro-interactions in the IDE. Our analysis of developer behavior exhibited in this dataset confirms laboratory study observations that code reuse from the Web is followed by heavy editing, in some cases by a rapid undo, and rarely by the execution of tests.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web 1521122950155 Agnieszka Ciborowska Virginia Commonwealth University ciborowskaa@vcu.edu Nicholas A. Kraft ABB Corporate Research nicholas.a.kraft@us.abb.com Kostadin Damevski Virginia Commonwealth University kdamevski@vcu.edu opportunistic reuse code snippet developer behavior interaction data field study Modern software development is social and relies on many online resources and tools. In this paper, we study opportunistic code reuse from the Web, e.g. when developers copy code snippets from popular Q&amp;A sites and paste them into their projects. Our focus is the behavior of developers following opportunistic code reuse, which reveals the success or failure of the action. We study developer behavior via a large, representative dataset of micro-interactions in the IDE. Our analysis of developer behavior exhibited in this dataset confirms laboratory study observations that code reuse from the Web is followed by heavy editing, in some cases by a rapid undo, and rarely by the execution of tests.",
              "pageNumber": 94,
              "isPageNumberRoman": false
            },
            {
              "id": "3kVuCEJIG6ezSwG568VeoG",
              "type": "authorPaper",
              "text": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf",
              "extraLocations": [],
              "authorNames": "Noam Rabbani (McGill University), Michael S. Harvey (McGill University), Sadnan Saquif (McGill University), Keheliya Gallaba (McGill University), Shane McIntosh (McGill University)",
              "abstract": "Build systems translate sources into deliverables. Developers execute builds on a regular basis in order to integrate their personal code changes into testable deliverables. Prior studies have evaluated the rate at which builds in large organizations fail. A recent study at Google has analyzed (among other things) the rate at which builds in developer workspaces fail. In this paper, we replicate the Google study in the Visual Studio context of the MSR challenge. We extract and analyze 13,300 build events, observing that builds are failing 67%-76% less frequently and are fixed 46%-78% faster in our study context. Our results suggest that build failure rates are highly sensitive to contextual factors. Given the large number of factors by which our study contexts differ (e.g., system size, team size, IDE tooling, programming languages), it is not possible to trace the root cause for the large differences in our results. Additional data is needed to arrive at more complete conclusions.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Revisiting \"Programmers' Build Errors\" in the Visual Studio Context 1521242957540 Noam Rabbani McGill University nawras.rabbani@mail.mcgill.ca Michael S. Harvey McGill University michael.harvey@mail.mcgill.ca Sadnan Saquif McGill University sadnan.saquif@mail.mcgill.ca Keheliya Gallaba McGill University keheliya.gallaba@mail.mcgill.ca Shane McIntosh McGill University shane.mcintosh@mcgill.ca Build Systems Empirical Software Engineering IDE Interaction Traces Build systems translate sources into deliverables. Developers execute builds on a regular basis in order to integrate their personal code changes into testable deliverables. Prior studies have evaluated the rate at which builds in large organizations fail. A recent study at Google has analyzed (among other things) the rate at which builds in developer workspaces fail. In this paper, we replicate the Google study in the Visual Studio context of the MSR challenge. We extract and analyze 13,300 build events, observing that builds are failing 67%-76% less frequently and are fixed 46%-78% faster in our study context. Our results suggest that build failure rates are highly sensitive to contextual factors. Given the large number of factors by which our study contexts differ (e.g., system size, team size, IDE tooling, programming languages), it is not possible to trace the root cause for the large differences in our results. Additional data is needed to arrive at more complete conclusions.",
              "pageNumber": 98,
              "isPageNumberRoman": false
            },
            {
              "id": "1YqGlZKdNdTyV874YVbMhz",
              "type": "authorPaper",
              "text": "Common Statement Kind Changes to Inform Automatic Program Repair",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4yKOiRx1rEPHJaytESAo26/EznOWdoFNxGH37gYu2wyO.pdf",
              "extraLocations": [],
              "authorNames": "Mauricio Soto (Carnegie Mellon University), Claire Le Goues (Carnegie Mellon University)",
              "abstract": "The search space for automatic program repair approaches is vast and the search for mechanisms to help restrict this search are increasing. We make a granular analysis based on statement kinds to find which statements are more likely to be modified than others when fixing an error. We construct a corpus for analysis by delimiting debugging regions in the provided dataset and recursively analyze the differences between the Simplified Syntax Trees associated with EditEvent's. We build a distribution of statement kinds with their corresponding likelihood of being modified and we validate the usage of this distribution to guide the statement selection. We then build association rules with different confidence thresholds to describe statement kinds commonly modified together for multi-edit patch creation. Finally we evaluate association rule coverage over a held out test set and find that when using a 95% confidence threshold we can create less and more accurate rules that fully cover 93.8% of the testing instances.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Common Statement Kind Changes to Inform Automatic Program Repair 1521153263778 Mauricio Soto Carnegie Mellon University mauriciosoto@cmu.edu Claire Le Goues Carnegie Mellon University clegoues@cs.cmu.edu Automatic Program Repair Fault localization The search space for automatic program repair approaches is vast and the search for mechanisms to help restrict this search are increasing. We make a granular analysis based on statement kinds to find which statements are more likely to be modified than others when fixing an error. We construct a corpus for analysis by delimiting debugging regions in the provided dataset and recursively analyze the differences between the Simplified Syntax Trees associated with EditEvent's. We build a distribution of statement kinds with their corresponding likelihood of being modified and we validate the usage of this distribution to guide the statement selection. We then build association rules with different confidence thresholds to describe statement kinds commonly modified together for multi-edit patch creation. Finally we evaluate association rule coverage over a held out test set and find that when using a 95% confidence threshold we can create less and more accurate rules that fully cover 93.8% of the testing instances.",
              "pageNumber": 102,
              "isPageNumberRoman": false
            },
            {
              "id": "2Q3rlG6uWnHQ8Zghqf0XvZ",
              "type": "authorPaper",
              "text": "Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7nbYnyE9hZggqbfgQX5KLC/7dmrlRpgEBUXuzgQEUjC0E.pdf",
              "extraLocations": [],
              "authorNames": "Christopher Bellman (Carleton University), Ahmad Seet (Carleton University), Olga Baysal (Carleton University)",
              "abstract": "Every day, most software developers use development tools to write, build, and maintain their code. The most crucial of such tools is the integrated development environment (IDE), in which developers create and build code. Therefore, it is important to understand how developers perform their work and what impact each action has on their workflow to further enhance their productivity. In this work, we study the KaVE dataset of developer interactions within the Microsoft Visual Studio IDE and analyze a number of topics extracted from the data. First, we propose a method for developing what we call \"timelines\" that chronologically map an individual development session, and from this, we study build failures, code debugger usage, and we propose a metric for measuring developer throughput. We find that the timeline analysis may prove to be an invaluable tool for developer self-assessment and key to uncovering problem areas regarding build failures. Moreover, we find that developers spend a significant amount of time debugging their code, utilizing features such as breakpoints to resolve issues. Finally, we see that the developer metric can be used for self assessment, giving value to the amount of effort, put forth by a developer, in a given session.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE 1521169775488 Christopher Bellman Carleton University christopher.bellman@carleton.ca Ahmad Seet Carleton University ahmad.seet@carleton.ca Olga Baysal Carleton University olga.baysal@carleton.ca Visual Studio FeedBag KaVE IDE Build Debug Every day, most software developers use development tools to write, build, and maintain their code. The most crucial of such tools is the integrated development environment (IDE), in which developers create and build code. Therefore, it is important to understand how developers perform their work and what impact each action has on their workflow to further enhance their productivity. In this work, we study the KaVE dataset of developer interactions within the Microsoft Visual Studio IDE and analyze a number of topics extracted from the data. First, we propose a method for developing what we call \"timelines\" that chronologically map an individual development session, and from this, we study build failures, code debugger usage, and we propose a metric for measuring developer throughput. We find that the timeline analysis may prove to be an invaluable tool for developer self-assessment and key to uncovering problem areas regarding build failures. Moreover, we find that developers spend a significant amount of time debugging their code, utilizing features such as breakpoints to resolve issues. Finally, we see that the developer metric can be used for self assessment, giving value to the amount of effort, put forth by a developer, in a given session.",
              "pageNumber": 106,
              "isPageNumberRoman": false
            },
            {
              "id": "6nq4f70kTmSDhxzMcz79Fd",
              "type": "authorPaper",
              "text": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf",
              "extraLocations": [],
              "authorNames": "César Soto-Valero (Universidad Central \"Marta Abreu\" de Las Villas), Johann Bourcier (University of Rennes 1-IRISA), Benoit Baudry (KTH Royal Institute of Technology)",
              "abstract": "A growing body of research in empirical software engineering applies recurrent patterns analysis in order to make sense of the developers' behavior during their interactions with IDEs. However, the exploration of hidden real-time structures of programming behavior remains a challenging task. In this paper, we investigate the presence of temporal behavioral patterns (T-patterns) in debugging activities using the THEME software. Our preliminary exploratory results show that debugging activities are strongly correlated with code editing, file handling, window interactions and other general types of programming activities. The validation of our T-patterns detection approach demonstrates that debugging activities are performed on the basis of repetitive and well-organized behavioral events. Furthermore, we identify a large set of T-patterns that associate debugging activities with build success, which corroborates the positive impact of debugging practices on software development.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Detection and Analysis of Behavioral T-Patterns in Debugging Activities 1521225410984 César Soto-Valero Universidad Central \"Marta Abreu\" de Las Villas cesarsotovalero@gmail.com Johann Bourcier University of Rennes 1-IRISA johann.bourcier@irisa.fr Benoit Baudry KTH Royal Institute of Technology baudry@kth.se debugging interactions developers' behavior T-patterns analysis empirical software engineering A growing body of research in empirical software engineering applies recurrent patterns analysis in order to make sense of the developers' behavior during their interactions with IDEs. However, the exploration of hidden real-time structures of programming behavior remains a challenging task. In this paper, we investigate the presence of temporal behavioral patterns (T-patterns) in debugging activities using the THEME software. Our preliminary exploratory results show that debugging activities are strongly correlated with code editing, file handling, window interactions and other general types of programming activities. The validation of our T-patterns detection approach demonstrates that debugging activities are performed on the basis of repetitive and well-organized behavioral events. Furthermore, we identify a large set of T-patterns that associate debugging activities with build success, which corroborates the positive impact of debugging practices on software development.",
              "pageNumber": 110,
              "isPageNumberRoman": false
            },
            {
              "id": "7pBESuZXB5WukhZ59OXGA",
              "type": "authorPaper",
              "text": "A Study on the Use of IDE Features for Debugging",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tfhWhVMkdDfI2Dv4891FU/6Y8xYSkFixxV48LgNdhrYF.pdf",
              "extraLocations": [],
              "authorNames": "Afsoon Afzal (Carnegie Mellon University), Claire Le Goues (Carnegie Mellon University)",
              "abstract": "Integrated development environments (IDEs) provide features to help developers both create and understand code. As maintenance and bug repair are time-consuming and costly activities, IDEs have long integrated debugging features to simplify these tasks. In this paper we investigate the impact of using IDE debugger features on different aspects of programming and debugging. Using the data set provided by MSR challenge track, we compared debugging tasks performed with or without the IDE debugger. We find, on average, that developers spend more time and effort on debugging when they use the debugger. Typically, developers start using the debugger early, at the beginning of a debugging session, and that their editing behavior does not appear to significantly change when they are debugging regardless of whether debugging features are in use.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Study on the Use of IDE Features for Debugging 1521245672651 Afsoon Afzal Carnegie Mellon University afsoona@cs.cmu.edu Claire Le Goues Carnegie Mellon University clegoues@cs.cmu.edu mining debugging IDE integrated development environment Integrated development environments (IDEs) provide features to help developers both create and understand code. As maintenance and bug repair are time-consuming and costly activities, IDEs have long integrated debugging features to simplify these tasks. In this paper we investigate the impact of using IDE debugger features on different aspects of programming and debugging. Using the data set provided by MSR challenge track, we compared debugging tasks performed with or without the IDE debugger. We find, on average, that developers spend more time and effort on debugging when they use the debugger. Typically, developers start using the debugger early, at the beginning of a debugging session, and that their editing behavior does not appear to significantly change when they are debugging regardless of whether debugging features are in use.",
              "pageNumber": 114,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "MSR 2018 - Technical Papers - Welcome + Keynote ",
          "lineItems": [
            {
              "id": "1L78jf5vNi2AX2H7DgwA9M",
              "type": "authorPaper",
              "text": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4uQ9qNYdtevyu0Cpsh8V1P/3ipiI14cuE2PUzjnTOswW2.pdf",
              "extraLocations": [],
              "authorNames": "Andrew Ko (University of Washington)",
              "abstract": "The program comprehension and mining software repository communities are, in practice, two separate research endeavors. One is concerned with what's happening in a developer's mind, while the other is concerned with what's happening in a team. And yet, implicit in these fields is a common goal to make better software and the common approach of influencing developer decisions. In this keynote, I provide several examples of this overlap, suggesting several grand challenges in comprehension and mining.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining 1521060394161 Andrew Ko University of Washington ajko@uw.edu Mining software repositories program comprehension The program comprehension and mining software repository communities are, in practice, two separate research endeavors. One is concerned with what's happening in a developer's mind, while the other is concerned with what's happening in a team. And yet, implicit in these fields is a common goal to make better software and the common approach of influencing developer decisions. In this keynote, I provide several examples of this overlap, suggesting several grand challenges in comprehension and mining.",
              "pageNumber": 118,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - CI and Release Engineering ",
          "lineItems": [
            {
              "id": "4oh9yu5TCfwPd3oULjUtLa",
              "type": "authorPaper",
              "text": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf",
              "extraLocations": [],
              "authorNames": "Christoph Laaber (University of Zurich), Philipp Leitner (Chalmers ),  University of Gothenburg undefined (undefined)",
              "abstract": "Continuous integration (CI) emphasizes quick feedback to developers. This is at odds with current practice of performance testing, which predominantely focuses on long-running tests against entire systems in production-like environments. Alternatively, software microbenchmarking attempts to establish a performance baseline for small code fragments in short time. This paper investigates the quality of microbenchmark suites with a focus on suitability to deliver quick performance feedback and CI integration. We study ten open-source libraries written in Java and Go with benchmark suite sizes ranging from 16 to 983 tests, and runtimes between 11 minutes and 8.75 hours. We show that our study subjects include benchmarks with result variability of 50% or higher, indicating that not all benchmarks are useful for reliable discovery of slowdowns. We further artificially inject actual slowdowns into public API methods of the study subjects and test whether test suites are able to discover them. We introduce a performance-test quality metric called the API benchmarking score (ABS). ABS represents a benchmark suite's ability to find slowdowns among a set of defined core API methods. Resulting benchmarking scores (i.e., fraction of discovered slowdowns) vary between 10% and 100% for the study subjects. This paper's methodology and results can be used to (1) assess the quality of existing microbenchmark suites, (2) select a set of tests to be run as part of CI, and (3) suggest or generate benchmarks for currently untested parts of an API.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment 1521449961333 Christoph Laaber University of Zurich laaber@ifi.uzh.ch Philipp Leitner Chalmers philipp.leitner@chalmers.se University of Gothenburg undefined undefined undefined continuous integration software performance testing microbenchmarking empirical study Java Go Continuous integration (CI) emphasizes quick feedback to developers. This is at odds with current practice of performance testing, which predominantely focuses on long-running tests against entire systems in production-like environments. Alternatively, software microbenchmarking attempts to establish a performance baseline for small code fragments in short time. This paper investigates the quality of microbenchmark suites with a focus on suitability to deliver quick performance feedback and CI integration. We study ten open-source libraries written in Java and Go with benchmark suite sizes ranging from 16 to 983 tests, and runtimes between 11 minutes and 8.75 hours. We show that our study subjects include benchmarks with result variability of 50% or higher, indicating that not all benchmarks are useful for reliable discovery of slowdowns. We further artificially inject actual slowdowns into public API methods of the study subjects and test whether test suites are able to discover them. We introduce a performance-test quality metric called the API benchmarking score (ABS). ABS represents a benchmark suite's ability to find slowdowns among a set of defined core API methods. Resulting benchmarking scores (i.e., fraction of discovered slowdowns) vary between 10% and 100% for the study subjects. This paper's methodology and results can be used to (1) assess the quality of existing microbenchmark suites, (2) select a set of tests to be run as part of CI, and (3) suggest or generate benchmarks for currently untested parts of an API.",
              "pageNumber": 119,
              "isPageNumberRoman": false
            },
            {
              "id": "7xh4OthKqffXQEWHnUZvhR",
              "type": "authorPaper",
              "text": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf",
              "extraLocations": [],
              "authorNames": "João Helis Bernardo (Federal Institute of Rio Grande do Norte), Daniel Alencar da Costa (Queen's University), Uirá Kulesza (Federal University of Rio Grande do Norte)",
              "abstract": "Continuous Integration (CI) is a software development practice that leads developers to integrate their work more frequently. Software projects have broadly adopted CI to ship new releases more frequently and to improve code integration. The adoption of CI is motivated by the allure of delivering new functionalities more quickly. However, there is little empirical evidence to support such a claim. Through the analysis of 162,653 pull requests (PRs) of 87 GitHub projects that are implemented in 5 different programming languages, we empirically investigate the impact of adopting CI on the time to deliver merged PRs. Surprisingly, only 51.3% of the projects deliver merged PRs more quickly after adopting CI.We also observe that the large increase of PR submissions after CI is a key reason as to why projects deliver PRs more slowly after adopting CI. To investigate the factors that are related to the time-to-delivery of merged PRs, we train regression models that obtain sound median R-squares of 0.64-0.67. Finally, a deeper analysis of our models indicates that, before the adoption of CI, the integration-load of the development team, i.e., the number of submitted PRs competing for being merged, is the most impactful metric on the time to deliver merged PRs before CI. Our models also reveal that PRs that are merged more recently in a release cycle experience a slower delivery time.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests 1521648228268 João Helis Bernardo Federal Institute of Rio Grande do Norte joao.helis@ifrn.edu.br Daniel Alencar da Costa Queen's University daniel.alencar@queensu.ca Uirá Kulesza Federal University of Rio Grande do Norte uira@dimap.ufrn.br continuous integration pull-based development pull request delivery time delivery delay Continuous Integration (CI) is a software development practice that leads developers to integrate their work more frequently. Software projects have broadly adopted CI to ship new releases more frequently and to improve code integration. The adoption of CI is motivated by the allure of delivering new functionalities more quickly. However, there is little empirical evidence to support such a claim. Through the analysis of 162,653 pull requests (PRs) of 87 GitHub projects that are implemented in 5 different programming languages, we empirically investigate the impact of adopting CI on the time to deliver merged PRs. Surprisingly, only 51.3% of the projects deliver merged PRs more quickly after adopting CI.We also observe that the large increase of PR submissions after CI is a key reason as to why projects deliver PRs more slowly after adopting CI. To investigate the factors that are related to the time-to-delivery of merged PRs, we train regression models that obtain sound median R-squares of 0.64-0.67. Finally, a deeper analysis of our models indicates that, before the adoption of CI, the integration-load of the development team, i.e., the number of submitted PRs competing for being merged, is the most impactful metric on the time to deliver merged PRs before CI. Our models also reveal that PRs that are merged more recently in a release cycle experience a slower delivery time.",
              "pageNumber": 131,
              "isPageNumberRoman": false
            },
            {
              "id": "5nXRnMuYL0zmAAPoHfRv33",
              "type": "authorPaper",
              "text": "What did Really Change with the New Release of the App?",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf",
              "extraLocations": [],
              "authorNames": "Paolo Calciati (IMDEA Software Institute / Universidad Politécnica de Madrid), Konstantin Kuznetsov (Saarland University / CISPA), Xue Bai (Beijing Institute of Technology), Alessandra Gorla (IMDEA Software Institute)",
              "abstract": "The mobile app market is evolving at a very fast pace. In order to stay in the market and fulfill user's growing demands, developers have to continuously update their apps either to fix issues or to add new features. Users and market managers may have a hard time understanding what really changed in a new release though, and therefore may not make an informative guess of whether updating the app is recommendable, or whether it may pose new security and privacy threats for the user. We propose a ready-to-use framework to analyze the evolution of Android apps. Our framework extracts and visualizes various information -such as how an app uses sensitive data, which third-party libraries it relies on, which URLs it connects to, etc.- and combines it to create a comprehensive report on how the app evolved. Besides, we present the results of an empirical study on 235 applications with at least 50 releases using our framework. Our analysis reveals that Android apps tend to have more leaks of sensitive data over time, and that the majority of API calls relative to dangerous permissions are added to the code in releases posterior to the one where the corresponding permission was requested.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 What did Really Change with the New Release of the App? 1522140715591 Paolo Calciati IMDEA Software Institute / Universidad Politécnica de Madrid paolo.calciati@imdea.org Konstantin Kuznetsov Saarland University / CISPA kuznetsov@st.cs.uni-saarland.de Xue Bai Beijing Institute of Technology baixue_132@163.com Alessandra Gorla IMDEA Software Institute alessandra.gorla@imdea.org Android app evolution behavior change The mobile app market is evolving at a very fast pace. In order to stay in the market and fulfill user's growing demands, developers have to continuously update their apps either to fix issues or to add new features. Users and market managers may have a hard time understanding what really changed in a new release though, and therefore may not make an informative guess of whether updating the app is recommendable, or whether it may pose new security and privacy threats for the user. We propose a ready-to-use framework to analyze the evolution of Android apps. Our framework extracts and visualizes various information -such as how an app uses sensitive data, which third-party libraries it relies on, which URLs it connects to, etc.- and combines it to create a comprehensive report on how the app evolved. Besides, we present the results of an empirical study on 235 applications with at least 50 releases using our framework. Our analysis reveals that Android apps tend to have more leaks of sensitive data over time, and that the majority of API calls relative to dangerous permissions are added to the code in releases posterior to the one where the corresponding permission was requested.",
              "pageNumber": 142,
              "isPageNumberRoman": false
            },
            {
              "id": "BLhfPELbVgXeUyXjPTBBc",
              "type": "authorPaper",
              "text": "CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1TKlBTF3pMLDYWY56OUydc/1G6fsO6sfwnIHiY4TICQzT.pdf",
              "extraLocations": [],
              "authorNames": "Mathieu Nayrolles (La Forge Research Lab), Abdelwahab Hamou-Lhadj (ECE Department)",
              "abstract": "Automatic prevention and resolution of faults is an important research topic in the field of software maintenance and evolution. Existing approaches leverage code and process metrics to build metric-based models that can effectively prevent defect insertion in a software project. Metrics, however, may vary from one project to another, hindering the reuse of these models. Moreover, they tend to generate high false positive rates by classifying healthy commits as risky. Finally, they do not provide sufficient insights to developers on how to fix the detected risky commits. In this paper, we propose an approach, called CLEVER (Combining Levels of Bug Prevention and Resolution techniques), which relies on a two-phases process for intercepting risky commits before they reach the central repository. CLEVER was developed in collaboration with Ubisoft developers. When applied to 12 Ubisoft systems, the results show that CLEVER can detect risky commits with 79% precision and 65% recall, which outperforms the performance of Commit-guru, a recent approach that was proposed in the literature. In addition, CLEVER is able to recommend qualitative fixes to developers on how to fix risky commits in 66.7% of the cases.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects 1521387707339 Mathieu Nayrolles La Forge Research Lab mathieu.nayrolles@ubisoft.com Abdelwahab Hamou-Lhadj ECE Department wahab.hamou-lhadj@concordia.ca Bug Prediction Risky Software Commits Clone Detection Software Maintenance Automatic prevention and resolution of faults is an important research topic in the field of software maintenance and evolution. Existing approaches leverage code and process metrics to build metric-based models that can effectively prevent defect insertion in a software project. Metrics, however, may vary from one project to another, hindering the reuse of these models. Moreover, they tend to generate high false positive rates by classifying healthy commits as risky. Finally, they do not provide sufficient insights to developers on how to fix the detected risky commits. In this paper, we propose an approach, called CLEVER (Combining Levels of Bug Prevention and Resolution techniques), which relies on a two-phases process for intercepting risky commits before they reach the central repository. CLEVER was developed in collaboration with Ubisoft developers. When applied to 12 Ubisoft systems, the results show that CLEVER can detect risky commits with 79% precision and 65% recall, which outperforms the performance of Commit-guru, a recent approach that was proposed in the literature. In addition, CLEVER is able to recommend qualitative fixes to developers on how to fix risky commits in 66.7% of the cases.",
              "pageNumber": 153,
              "isPageNumberRoman": false
            },
            {
              "id": "4bg81KAl2cuhdQLNNhON4e",
              "type": "authorPaper",
              "text": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf",
              "extraLocations": [],
              "authorNames": "David Widder (Carnegie Mellon University), Bogdan Vasilescu (Carnegie Mellon University), Michael Hilton (Carnegie Mellon University), Christian Kästner (Carnegie Mellon University)",
              "abstract": "Continuous Integration (CI) services, which can automatically build, test, and deploy software projects, are an invaluable asset in distributed teams, increasing productivity and helping to maintain code quality. Prior work has shown that CI pipelines can be sophisticated, and choosing and configuring a CI system involves tradeoffs. As CI technology matures, new CI tool offerings arise to meet the distinct wants and needs of software teams, as they negotiate a path through these tradeoffs, depending on their context. In this paper, we begin to uncover these nuances, and tell the story of open-source projects falling out of love with Travis, the earliest and most popular cloud-based CI system. Using logistic regression, we quantify the effects that open-source community factors and project technical factors have on the rate of Travis abandonment. We find that increased build complexity reduces the chances of abandonment, that larger projects abandon at higher rates, and that a project's dominant language has significant but varying effects. Finally, we find the surprising result that metrics of configuration attempts and knowledge dispersion in the project do not appear to affect the rate of abandonment.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 I'm Leaving You, Travis: A Continuous Integration Breakup Story 1521239974024 David Widder Carnegie Mellon University dwidder@cmu.edu Bogdan Vasilescu Carnegie Mellon University vasilescu@cmu.edu Michael Hilton Carnegie Mellon University mhilton@cmu.edu Christian Kästner Carnegie Mellon University kaestner@cs.cmu.edu continuous integration travis tool abaondonment tool choice GitHub Continuous Integration (CI) services, which can automatically build, test, and deploy software projects, are an invaluable asset in distributed teams, increasing productivity and helping to maintain code quality. Prior work has shown that CI pipelines can be sophisticated, and choosing and configuring a CI system involves tradeoffs. As CI technology matures, new CI tool offerings arise to meet the distinct wants and needs of software teams, as they negotiate a path through these tradeoffs, depending on their context. In this paper, we begin to uncover these nuances, and tell the story of open-source projects falling out of love with Travis, the earliest and most popular cloud-based CI system. Using logistic regression, we quantify the effects that open-source community factors and project technical factors have on the rate of Travis abandonment. We find that increased build complexity reduces the chances of abandonment, that larger projects abandon at higher rates, and that a project's dominant language has significant but varying effects. Finally, we find the surprising result that metrics of configuration attempts and knowledge dispersion in the project do not appear to affect the rate of abandonment.",
              "pageNumber": 165,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Modularity and Dependency ",
          "lineItems": [
            {
              "id": "73RpcMOEoJA1Bg2umpyQrx",
              "type": "authorPaper",
              "text": "An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4wPidAyFv816mgEv4y4ufk/7t0r9Hn1L3qqIJ7X8vb4zo.pdf",
              "extraLocations": [],
              "authorNames": "Lina Ochoa (Centrum Wiskunde & Informatica), Thomas Degueule (Centrum Wiskunde & Informatica), Jurgen Vinju (Centrum Wiskunde & Informatica)",
              "abstract": "OSGi is a module system and service framework that aims to fill Java's lack of support for modular development. Using OSGi, developers divide software into multiple bundles that declare constrained dependencies towards other bundles. However, there are various ways of declaring and managing such dependencies, and it can be confusing for developers to choose one over another. Over the course of time, experts and practitioners have defined \"best practices\" related to dependency management in OSGi. The underlying assumptions are that these best practices (i) are indeed relevant and (ii) help to keep OSGi systems manageable and efficient. In this paper, we investigate these assumptions by first conducting a systematic review of the best practices related to dependency management issued by the OSGi Alliance and OSGi-endorsed organizations. Using a large corpus of OSGi bundles (1,124 core plug-ins of the Eclipse IDE), we then analyze the use and impact of 6 selected best practices. Our results show that the selected best practices are not widely followed in practice. Besides, we observe that following them strictly reduces classpath size of individual bundles by up to 23% and results in up to ±13% impact on performance at bundle resolution time. In summary, this paper contributes an initial empirical validation of industry-standard OSGi best practices. Our results should influence practitioners especially, by providing evidence of the impact of these best practices in real-world systems.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE 1521637336125 Lina Ochoa Centrum Wiskunde & Informatica lina.ochoa@cwi.nl Thomas Degueule Centrum Wiskunde & Informatica thomas.degueule@cwi.nl Jurgen Vinju Centrum Wiskunde & Informatica jurgen.vinju@cwi.nl empirical evaluation OSGi dependencies best practices smells OSGi is a module system and service framework that aims to fill Java's lack of support for modular development. Using OSGi, developers divide software into multiple bundles that declare constrained dependencies towards other bundles. However, there are various ways of declaring and managing such dependencies, and it can be confusing for developers to choose one over another. Over the course of time, experts and practitioners have defined \"best practices\" related to dependency management in OSGi. The underlying assumptions are that these best practices (i) are indeed relevant and (ii) help to keep OSGi systems manageable and efficient. In this paper, we investigate these assumptions by first conducting a systematic review of the best practices related to dependency management issued by the OSGi Alliance and OSGi-endorsed organizations. Using a large corpus of OSGi bundles (1,124 core plug-ins of the Eclipse IDE), we then analyze the use and impact of 6 selected best practices. Our results show that the selected best practices are not widely followed in practice. Besides, we observe that following them strictly reduces classpath size of individual bundles by up to 23% and results in up to ±13% impact on performance at bundle resolution time. In summary, this paper contributes an initial empirical validation of industry-standard OSGi best practices. Our results should influence practitioners especially, by providing evidence of the impact of these best practices in real-world systems.",
              "pageNumber": 170,
              "isPageNumberRoman": false
            },
            {
              "id": "7ChcQ3nO79LiWLqbqOhi3",
              "type": "authorPaper",
              "text": "On the Impact of Security Vulnerabilities in the npm Package Dependency Network",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/smpJmx8mh2G24jvMxWglO/63i23sBR9g3TNrLmC7312D.pdf",
              "extraLocations": [],
              "authorNames": "Alexandre Decan (University of Mons), Tom Mens (University of Mons), Eleni Constantinou (University of Mons)",
              "abstract": "Security vulnerabilities are among the most pressing problems in open source software package libraries. It may take a long time to discover and fix vulnerabilities in packages. In addition, vulnerabilities may propagate to dependent packages, making them vulnerable too. This paper presents an empirical study of nearly 400 security reports over a 6-year period in the npm dependency network containing over 610k JavaScript packages. Taking into account the severity of vulnerabilities, we analyse how and when these vulnerabilities are discovered and fixed, and to which extent they affect other packages in the packaging ecosystem in presence of dependency constraints. We report our findings and provide guidelines for package maintainers and tool developers to improve the process of dealing with security issues.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 On the Impact of Security Vulnerabilities in the npm Package Dependency Network 1521022497696 Alexandre Decan University of Mons alexandre.decan@umons.ac.be Tom Mens University of Mons tom.mens@umons.ac.be Eleni Constantinou University of Mons eleni.constantinou@umons.ac.be software repository mining software ecosystem dependency network security vulnerability semantic versioning Security vulnerabilities are among the most pressing problems in open source software package libraries. It may take a long time to discover and fix vulnerabilities in packages. In addition, vulnerabilities may propagate to dependent packages, making them vulnerable too. This paper presents an empirical study of nearly 400 security reports over a 6-year period in the npm dependency network containing over 610k JavaScript packages. Taking into account the severity of vulnerabilities, we analyse how and when these vulnerabilities are discovered and fixed, and to which extent they affect other packages in the packaging ecosystem in presence of dependency constraints. We report our findings and provide guidelines for package maintainers and tool developers to improve the process of dealing with security issues.",
              "pageNumber": 181,
              "isPageNumberRoman": false
            },
            {
              "id": "lugPqRK7GFLD7geOz8C3u",
              "type": "authorPaper",
              "text": "Feature Location Using Crowd-Based Screencasts",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf",
              "extraLocations": [],
              "authorNames": "Parisa Moslehi (Concordia University), Bram Adams (Polytechnique Montreal), Juergen Rilling (Concordia University)",
              "abstract": "Crowd-based multi-media documents such as screencasts have emerged as a source for documenting requirements of agile software projects. For example, screencasts can describe buggy scenarios of a software product, or present new features in an upcoming release. Unfortunately, the binary format of videos makes traceability between the video content and other related software artifacts (e.g., source code, bug reports) difficult. In this paper, we propose an LDA-based feature location approach that takes as input a set of screencasts (i.e., the GUI text and/or spoken words) to establish traceability link between the features described in the screencasts and source code fragments implementing them. We report on a case study conducted on 10 WordPress screencasts, to evaluate the applicability of our approach in linking these screencasts to their relevant source code artifacts. We find that the approach is able to successfully pinpoint relevant source code files at the top 10 hits using speech and GUI text. We also found that term frequency rebalancing can reduce noise and yield more precise results.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Feature Location Using Crowd-Based Screencasts 1521251821044 Parisa Moslehi Concordia University parisa.moslehi@gmail.com Bram Adams Polytechnique Montreal bram.adams@polymtl.ca Juergen Rilling Concordia University juergen.rilling@concordia.ca Crowd-based documentation mining video content feature location software traceability information extraction Crowd-based multi-media documents such as screencasts have emerged as a source for documenting requirements of agile software projects. For example, screencasts can describe buggy scenarios of a software product, or present new features in an upcoming release. Unfortunately, the binary format of videos makes traceability between the video content and other related software artifacts (e.g., source code, bug reports) difficult. In this paper, we propose an LDA-based feature location approach that takes as input a set of screencasts (i.e., the GUI text and/or spoken words) to establish traceability link between the features described in the screencasts and source code fragments implementing them. We report on a case study conducted on 10 WordPress screencasts, to evaluate the applicability of our approach in linking these screencasts to their relevant source code artifacts. We find that the approach is able to successfully pinpoint relevant source code files at the top 10 hits using speech and GUI text. We also found that term frequency rebalancing can reduce noise and yield more precise results.",
              "pageNumber": 192,
              "isPageNumberRoman": false
            },
            {
              "id": "dO6P6bFSypcc0gledMYcB",
              "type": "authorPaper",
              "text": "Profiling Call Changes Via Motif Mining",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1xiMLi0gUh1Ze5ANgiZYsF/5USzOOuiLHbJaUF7HEHpbu.pdf",
              "extraLocations": [],
              "authorNames": "Barbara Russo (Free University of Bozen-Bolzano)",
              "abstract": "Components' interactions in software systems evolve over time increasing in complexity and size. Developers might have hard time to master such complexity during their maintenance activities incrementing the risk to make mistakes. Understanding changes of such interactions helps developer plan their re-factoring activities. In this study, we propose a method to study the occurrence of motifs in call graphs and their role in the evolution of a system. In our settings, motifs are patterns of class calls that can arise for many reasons as, for example, by implementing design choices. By mining motifs of the call graph obtained from each system's release, we were able to profile the evolution of 68 releases of five open source systems and show that 1) systems have common motifs that occur non-randomly and persistently over their releases, 2) motifs can be used to describe the evolution of calls, compare systems and eventually reveal releases that underwent major changes, 3) there are no specific motif types that include design patterns in all systems under study, but each system has motifs that likely include them, motifs that do not include them at all, and motifs that include a design pattern and occur only once in every release. Some of the findings resemble the ones for biological / physical systems and, as such, path the way to study the evolution of call graphs as dynamical systems (i.e., as system regulated by analytic functions).",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Profiling Call Changes Via Motif Mining 1521048950659 Barbara Russo Free University of Bozen-Bolzano Barbara.Russo@unibz.it Call Graphs Motifs mining Design Patterns Software Evolution Components' interactions in software systems evolve over time increasing in complexity and size. Developers might have hard time to master such complexity during their maintenance activities incrementing the risk to make mistakes. Understanding changes of such interactions helps developer plan their re-factoring activities. In this study, we propose a method to study the occurrence of motifs in call graphs and their role in the evolution of a system. In our settings, motifs are patterns of class calls that can arise for many reasons as, for example, by implementing design choices. By mining motifs of the call graph obtained from each system's release, we were able to profile the evolution of 68 releases of five open source systems and show that 1) systems have common motifs that occur non-randomly and persistently over their releases, 2) motifs can be used to describe the evolution of calls, compare systems and eventually reveal releases that underwent major changes, 3) there are no specific motif types that include design patterns in all systems under study, but each system has motifs that likely include them, motifs that do not include them at all, and motifs that include a design pattern and occur only once in every release. Some of the findings resemble the ones for biological / physical systems and, as such, path the way to study the evolution of call graphs as dynamical systems (i.e., as system regulated by analytic functions).",
              "pageNumber": 203,
              "isPageNumberRoman": false
            },
            {
              "id": "2AqwVOxaZTmP4ORmXcBN3s",
              "type": "authorPaper",
              "text": "Toward Predicting Architectural Significance of Implementation Issues",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6YZBwy7ypYv0ELfqXGe1JQ/6O2doMdhWQsHIa9L6mtpC9.pdf",
              "extraLocations": [],
              "authorNames": "Arman Shahbazian (University of Southern California), Daye Nam (University of Southern California), Nenad Medvidovic (University of Southern California)",
              "abstract": "In a software system's development lifecycle, engineers make numerous design decisions that subsequently cause architectural change in the system. Previous studies have shown that, more often than not, these architectural changes are unintentional by-products of continual software maintenance tasks. The result of inadvertent architectural changes is accumulation of technical debt and deterioration of software quality. Despite their important implications, there is a relative shortage of techniques, tools, and empirical studies pertaining to architectural design decisions. In this paper, we take a step toward addressing that scarcity by using the information in the issue and code repositories of open-source software systems to investigate the cause and frequency of such architectural design decisions. Furthermore, building on these results, we develop a predictive model that is able to identify the architectural significance of newly submitted issues, thereby helping engineers to prevent the adverse effects of architectural decay. The results of this study are based on the analysis of 21,062 issues affecting 301 versions of 5 large open-source systems for which the code changes and issues were publicly accessible.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Toward Predicting Architectural Significance of Implementation Issues 1521137646692 Arman Shahbazian University of Southern California armansha@usc.edu Daye Nam University of Southern California dayenam@usc.edu Nenad Medvidovic University of Southern California neno@usc.edu Architectural Design Decisions Implementation Issues Architectural Change Prediction In a software system's development lifecycle, engineers make numerous design decisions that subsequently cause architectural change in the system. Previous studies have shown that, more often than not, these architectural changes are unintentional by-products of continual software maintenance tasks. The result of inadvertent architectural changes is accumulation of technical debt and deterioration of software quality. Despite their important implications, there is a relative shortage of techniques, tools, and empirical studies pertaining to architectural design decisions. In this paper, we take a step toward addressing that scarcity by using the information in the issue and code repositories of open-source software systems to investigate the cause and frequency of such architectural design decisions. Furthermore, building on these results, we develop a predictive model that is able to identify the architectural significance of newly submitted issues, thereby helping engineers to prevent the adverse effects of architectural decay. The results of this study are based on the analysis of 21,062 issues affecting 301 versions of 5 large open-source systems for which the code changes and issues were publicly accessible.",
              "pageNumber": 215,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Mobile ",
          "lineItems": [
            {
              "id": "78kpubqbMrGaYlwGElbrmt",
              "type": "authorPaper",
              "text": "The Android Update Problem: An Empirical Study",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/40ITzpu9A7gja2DFXlgksu/5xMIfFQxaevjACtqxWJBAz.pdf",
              "extraLocations": [],
              "authorNames": "Mehran Mahmoudi (University of Alberta), Sarah Nadi (University of Alberta)",
              "abstract": "Many phone vendors use Android as their underlying OS, but often extend it to add new functionality and to make it compatible with their specific phones. When a new version of Android is released, phone vendors need to merge or re-apply their customizations and changes to the new release. This is a difficult and time-consuming process, which often leads to late adoption of new versions. In this paper, we perform an empirical study to understand the nature of changes that phone vendors make, versus changes made in the original development of Android. By investigating the overlap of different changes, we also determine the possibility of having automated support for merging them. We develop a publicly available tool chain, based on a combination of existing tools, to study such changes and their overlap. As a proxy case study, we analyze the changes in the popular community-based variant of Android, LineageOS, and its corresponding Android versions. We investigate and report the common types of changes that occur in practice. Our findings show that 83% of subsystems modified by LineageOS are also modified in the next release of Android. By taking the nature of overlapping changes into account, we assess the feasibility of having automated tool support to help phone vendors with the Android update problem. Our results show that 56% of the changes in LineageOS have the potential to be safely automated.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 The Android Update Problem: An Empirical Study 1521566928879 Mehran Mahmoudi University of Alberta mehran@ualberta.ca Sarah Nadi University of Alberta nadi@ualberta.ca Android Software evolution Software merging Merge conflicts Many phone vendors use Android as their underlying OS, but often extend it to add new functionality and to make it compatible with their specific phones. When a new version of Android is released, phone vendors need to merge or re-apply their customizations and changes to the new release. This is a difficult and time-consuming process, which often leads to late adoption of new versions. In this paper, we perform an empirical study to understand the nature of changes that phone vendors make, versus changes made in the original development of Android. By investigating the overlap of different changes, we also determine the possibility of having automated support for merging them. We develop a publicly available tool chain, based on a combination of existing tools, to study such changes and their overlap. As a proxy case study, we analyze the changes in the popular community-based variant of Android, LineageOS, and its corresponding Android versions. We investigate and report the common types of changes that occur in practice. Our findings show that 83% of subsystems modified by LineageOS are also modified in the next release of Android. By taking the nature of overlapping changes into account, we assess the feasibility of having automated tool support to help phone vendors with the Android update problem. Our results show that 56% of the changes in LineageOS have the potential to be safely automated.",
              "pageNumber": 220,
              "isPageNumberRoman": false
            },
            {
              "id": "4flg2EpnvRtY1EzChPfPiq",
              "type": "authorPaper",
              "text": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf",
              "extraLocations": [],
              "authorNames": "Haoyu Wang (Beijing University of Posts and Telecommunications), Hao Li (OrangeApk), Li Li (Monash University), Yao Guo (Peking University), Guoai Xu (Beijing University of Posts and Telecommunications)",
              "abstract": "To ensure the quality and trustworthiness of the apps within its app market (i.e., Google Play), Google has released a series of policies to regulate app developers. As a result, policy-violating apps (e.g., malware, low-quality apps, etc.) have been removed by Google Play periodically. In reality, we have found that the number of removed apps are actually much more than what we have expected, as almost half of all the apps have been removed or replaced from Google Play during a two year period from 2015 to 2017. However, despite the significant number of removed apps, there are almost no study on the characterization of these removed apps. To this end, this paper takes the first step to understand why Android apps are removed from Google Play, aiming at observing promising insights for both market maintainers and app developers towards building a better app ecosystem. By leveraging two app sets crawled from Google Play in 2015 (over 1.5 million) and 2017 (over 2.1 million), we have identified a set of over 790K removed apps, which are then thoroughly investigated in various aspects. The experimental results have revealed various interesting findings, as well as insights for future research directions.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study 1521615324207 Haoyu Wang Beijing University of Posts and Telecommunications haoyuwang@bupt.edu.cn Hao Li OrangeApk lihao_0823@yeah.net Li Li Monash University li.li@monash.edu Yao Guo Peking University yaoguo@pku.edu.cn Guoai Xu Beijing University of Posts and Telecommunications xga@bupt.edu.cn App mining app store malware Android To ensure the quality and trustworthiness of the apps within its app market (i.e., Google Play), Google has released a series of policies to regulate app developers. As a result, policy-violating apps (e.g., malware, low-quality apps, etc.) have been removed by Google Play periodically. In reality, we have found that the number of removed apps are actually much more than what we have expected, as almost half of all the apps have been removed or replaced from Google Play during a two year period from 2015 to 2017. However, despite the significant number of removed apps, there are almost no study on the characterization of these removed apps. To this end, this paper takes the first step to understand why Android apps are removed from Google Play, aiming at observing promising insights for both market maintainers and app developers towards building a better app ecosystem. By leveraging two app sets crawled from Google Play in 2015 (over 1.5 million) and 2017 (over 2.1 million), we have identified a set of over 790K removed apps, which are then thoroughly investigated in various aspects. The experimental results have revealed various interesting findings, as well as insights for future research directions.",
              "pageNumber": 231,
              "isPageNumberRoman": false
            },
            {
              "id": "2mcsJbA5IRvDn8GBv8AYfu",
              "type": "authorPaper",
              "text": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf",
              "extraLocations": [],
              "authorNames": "Maleknaz Nayebi (University of Toronto), Konstantin Kuznetsov (Saarland University/CISPA), Paul Chen (University of Calgary), Andreas Zeller (Saarland University/CISPA), Guenther Ruhe (University of Calgary)",
              "abstract": "One of Lehman's laws of software evolution is that the functionality of programs has to increase over time to maintain user satisfaction. In the domain of mobile apps, though, too much functionality can easily impact usability, resource consumption, and maintenance effort. Hence, does the law of continuous growth apply there? This paper shows that in mobile apps, deletion of functionality is actually common, challenging Lehman's law. We analyzed user driven requests for deletions which were found in 213,866 commits from 1,519 open source Android mobile apps from a total of 14,238 releases. We applied hybrid (open and closed) card sorting and created taxonomies for nature and causes of deletions. We found that functionality deletions are mostly motivated by unneeded functionality, poor user experience, and compatibility issues. We also performed a survey with 106 mobile app developers. We found that 78.3% of developers consider deletion of functionality to be equally or more important than the addition of new functionality. Developers confirmed that they plan for deletions. This implies the need to re-think the process of planning for the next release, overcoming the simplistic assumptions to exclusively look at adding functionality to maximize the value of upcoming releases. Our work is the first to study the phenomenon of functionality deletion and opens the door to a wider perspective on software evolution.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps 1521243369088 Maleknaz Nayebi University of Toronto m.nayebi@utoronto.ca Konstantin Kuznetsov Saarland University/CISPA kuznetsov@st.cs.uni-saarland.de Paul Chen University of Calgary Paul.chen@ucalgary.ca Andreas Zeller Saarland University/CISPA zeller@cs.uni-saarland.de Guenther Ruhe University of Calgary ruhe@ucalgary.ca Deletion Taxonomy Functionality Mobile apps Survey App store mining One of Lehman's laws of software evolution is that the functionality of programs has to increase over time to maintain user satisfaction. In the domain of mobile apps, though, too much functionality can easily impact usability, resource consumption, and maintenance effort. Hence, does the law of continuous growth apply there? This paper shows that in mobile apps, deletion of functionality is actually common, challenging Lehman's law. We analyzed user driven requests for deletions which were found in 213,866 commits from 1,519 open source Android mobile apps from a total of 14,238 releases. We applied hybrid (open and closed) card sorting and created taxonomies for nature and causes of deletions. We found that functionality deletions are mostly motivated by unneeded functionality, poor user experience, and compatibility issues. We also performed a survey with 106 mobile app developers. We found that 78.3% of developers consider deletion of functionality to be equally or more important than the addition of new functionality. Developers confirmed that they plan for deletions. This implies the need to re-think the process of planning for the next release, overcoming the simplistic assumptions to exclusively look at adding functionality to maximize the value of upcoming releases. Our work is the first to study the phenomenon of functionality deletion and opens the door to a wider perspective on software evolution.",
              "pageNumber": 243,
              "isPageNumberRoman": false
            },
            {
              "id": "wpUFZwgMYJVpxd7ER70wU",
              "type": "authorPaper",
              "text": "Characterising Deprecated Android APIs",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf",
              "extraLocations": [],
              "authorNames": "Li Li (Monash University), Jun Gao (University of Luxembourg), Tegawendé Bissyandé (University of Luxembourg), Lei Ma (Harbin Institute of Technology), Xin Xia (Monash University), Jacques Klein (University of Luxembourg)",
              "abstract": "Because of functionality evolution, or security and performance-related changes, some APIs eventually become unnecessary in a software system and thus need to be cleaned to ensure proper maintainability. Those APIs are typically marked first as deprecated APIs and, as recommended, follow through a deprecated-replace-remove cycle, giving an opportunity to client application developers to smoothly adapt their code in next updates. Such a mechanism is adopted in the Android framework development where thousands of reusable APIs are made available to Android app developers. In this work, we present a research-based prototype tool called CDA and apply it to different revisions (i.e., releases or tags) of the Android framework code for characterising deprecated APIs. Based on the data mined by CDA, we then perform an exploratory study on API deprecation in the Android ecosystem and the associated challenges for maintaining quality apps. In particular, we investigate the prevalence of deprecated APIs, their annotations and documentation, their removal and consequences, their replacement messages, as well as developer reactions to API deprecation. Experimental results reveal several findings that further provide promising insights for future research directions related to deprecated Android APIs. Notably, by mining the source code of the Android framework base, we have identified three bugs related to deprecated APIs. These bugs have been quickly assigned and positively appreciated by the framework maintainers, who claim that these issues will be updated in future releases.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Characterising Deprecated Android APIs 1521068992364 Li Li Monash University li.li@monash.edu Jun Gao University of Luxembourg jun.gao@uni.lu Tegawendé Bissyandé University of Luxembourg tegawende.bissyande@uni.lu Lei Ma Harbin Institute of Technology malei@hit.edu.cn Xin Xia Monash University xin.xia@monash.edu Jacques Klein University of Luxembourg jacques.klein@uni.lu Android Deprecated APIs CDA Because of functionality evolution, or security and performance-related changes, some APIs eventually become unnecessary in a software system and thus need to be cleaned to ensure proper maintainability. Those APIs are typically marked first as deprecated APIs and, as recommended, follow through a deprecated-replace-remove cycle, giving an opportunity to client application developers to smoothly adapt their code in next updates. Such a mechanism is adopted in the Android framework development where thousands of reusable APIs are made available to Android app developers. In this work, we present a research-based prototype tool called CDA and apply it to different revisions (i.e., releases or tags) of the Android framework code for characterising deprecated APIs. Based on the data mined by CDA, we then perform an exploratory study on API deprecation in the Android ecosystem and the associated challenges for maintaining quality apps. In particular, we investigate the prevalence of deprecated APIs, their annotations and documentation, their removal and consequences, their replacement messages, as well as developer reactions to API deprecation. Experimental results reveal several findings that further provide promising insights for future research directions related to deprecated Android APIs. Notably, by mining the source code of the Android framework base, we have identified three bugs related to deprecated APIs. These bugs have been quickly assigned and positively appreciated by the framework maintainers, who claim that these issues will be updated in future releases.",
              "pageNumber": 254,
              "isPageNumberRoman": false
            },
            {
              "id": "2kNJ5FyvZWzbDHZdfoNXn3",
              "type": "authorPaper",
              "text": "Leveraging Historical Versions of Android Apps for Efficient and Precise Taint Analysis",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YO2FQIRP9udip8vAOMYyN/41wfwDnmzQjsSxizDP6kZ7.pdf",
              "extraLocations": [],
              "authorNames": "John Jenkins (Washington State University - Pullman), Haipeng Cai (Washington State University - Pullman)",
              "abstract": "Today, computing on various Android devices is pervasive. However, growing security vulnerabilities and attacks in the Android ecosystem constitute various threats through user apps. Taint analysis is a common technique for defending against these threats, yet it su?ers from challenges in attaining practical simultaneous scalability and e?ectiveness. This paper presents a novel approach to fast and precise taint checking, called incremental taint analysis, by exploiting the evolving nature of Android apps. The analysis narrows down the search space of taint checking from an entire app, as conventionally addressed, to the parts of the program that are di?erent from its previous versions. This technique improves the overall efciency of checking multiple versions of the app as it evolves. We have implemented the techniques as a tool prototype, EvoTaint, and evaluated our analysis by applying it to real-world evolving Android apps. Our preliminary results show that the incremental approach largely reduced the cost of taint analysis, by 78.6% on average, yet without sacrifcing the analysis e?ectiveness, relative to a representative precise taint analysis as the baseline.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Leveraging Historical Versions of Android Apps for Efficient and Precise Taint Analysis 1521250585713 John Jenkins Washington State University - Pullman john.jenkins@wsu.edu Haipeng Cai Washington State University - Pullman haipeng.cai@wsu.edu Android taint analysis incremental evolution differencing Today, computing on various Android devices is pervasive. However, growing security vulnerabilities and attacks in the Android ecosystem constitute various threats through user apps. Taint analysis is a common technique for defending against these threats, yet it su?ers from challenges in attaining practical simultaneous scalability and e?ectiveness. This paper presents a novel approach to fast and precise taint checking, called incremental taint analysis, by exploiting the evolving nature of Android apps. The analysis narrows down the search space of taint checking from an entire app, as conventionally addressed, to the parts of the program that are di?erent from its previous versions. This technique improves the overall efciency of checking multiple versions of the app as it evolves. We have implemented the techniques as a tool prototype, EvoTaint, and evaluated our analysis by applying it to real-world evolving Android apps. Our preliminary results show that the incremental approach largely reduced the cost of taint analysis, by 78.6% on average, yet without sacrifcing the analysis e?ectiveness, relative to a representative precise taint analysis as the baseline.",
              "pageNumber": 265,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Programming Practice ",
          "lineItems": [
            {
              "id": "WPJEWT3y01PZzEEN7HBef",
              "type": "authorPaper",
              "text": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf",
              "extraLocations": [],
              "authorNames": "Rômulo Meloca (Federal University of Technology - Paraná), Gustavo Pinto (University of Pará), Leonardo Baiser (Federal University of Technology - Paraná), Marco Mattos (Federal University of Technology - Paraná), Ivanilton Polato (Federal University of Technology - Paraná), Igor Wiese (Federal University of Technology - Paraná), Daniel M German (University of Victoria)",
              "abstract": "The software license is one of the most important non-executable pieces of any software system. However, due to its non-technical nature, developers often misuse or misunderstand software licenses. Although previous studies reported problems related to licenses clashes and inconsistencies, in this paper we shed the light on an important but yet overlooked issue: the use of non-approved open-source licenses. Such licenses claim to be open-source, but have not been formally approved by the Open Source Initiative (OSI). When a developer releases a software under a non-approved license, even if the interest is to make it open-source, the original author might not be granting the rights required by those who use the software. To uncover the reasons behind the use of non-approved licenses, we conducted a mix-method study, mining data from 657K open-source projects and their 4,367K versions, and surveying 76 developers that published some of these projects. Although 1,058,554 of the project versions employ at least one non-approved license, non-approved licenses account for 21.51% of license usage. We also observed that it is not uncommon for developers to change from a non-approved to an approved license. When asked, some developers mentioned that this transition was due to a better understanding of the disadvantages of using an non-approved license. This perspective is particularly important since developers often rely on package managers to easily and quickly get their dependencies working.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses 1521238245089 Rômulo Meloca Federal University of Technology - Paraná rmeloca@gmail.com Gustavo Pinto University of Pará gpinto@ufpa.br Leonardo Baiser Federal University of Technology - Paraná baiser@alunos.utfpr.edu.br Marco Mattos Federal University of Technology - Paraná marcomattos@alunos.utfpr.edu.br Ivanilton Polato Federal University of Technology - Paraná ipolato@utfpr.edu.br Igor Wiese Federal University of Technology - Paraná igor@utfpr.edu.br Daniel M German University of Victoria dmg@uvic.ca Open Source Software Software License OSI approved The software license is one of the most important non-executable pieces of any software system. However, due to its non-technical nature, developers often misuse or misunderstand software licenses. Although previous studies reported problems related to licenses clashes and inconsistencies, in this paper we shed the light on an important but yet overlooked issue: the use of non-approved open-source licenses. Such licenses claim to be open-source, but have not been formally approved by the Open Source Initiative (OSI). When a developer releases a software under a non-approved license, even if the interest is to make it open-source, the original author might not be granting the rights required by those who use the software. To uncover the reasons behind the use of non-approved licenses, we conducted a mix-method study, mining data from 657K open-source projects and their 4,367K versions, and surveying 76 developers that published some of these projects. Although 1,058,554 of the project versions employ at least one non-approved license, non-approved licenses account for 21.51% of license usage. We also observed that it is not uncommon for developers to change from a non-approved to an approved license. When asked, some developers mentioned that this transition was due to a better understanding of the disadvantages of using an non-approved license. This perspective is particularly important since developers often rely on package managers to easily and quickly get their dependencies working.",
              "pageNumber": 270,
              "isPageNumberRoman": false
            },
            {
              "id": "2gbunfAN8HcULd1M9tFMIm",
              "type": "authorPaper",
              "text": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf",
              "extraLocations": [],
              "authorNames": "Dan Gopstein (New York University), Henry Hongwei Zhou (New York University), Phyllis Frankl (New York University), Justin Cappos (New York University)",
              "abstract": "Prior work has shown that extremely small code patterns, such as the conditional operator and implicit type conversion, can cause considerable misunderstanding in programmers. Until now, the real world impact of these patterns - known as 'atoms of confusion' - was only speculative. This work uses a corpus of 14 of the most popular and influential open source C and C++ projects to measure the prevalence and significance of these small confusing patterns. Our results show that the 15 known types of confusing micro patterns occur millions of times in programs like the Linux kernel and GCC, appearing on average once every 23 lines. We show there is a strong correlation between these confusing patterns and bug-ix commits as well as a tendency for confusing patterns to be commented. We also explore patterns at the project level showing the rate of security vulnerabilities is higher in projects with more atoms. Finally, we examine real code examples containing these atoms, including ones that were used to ind and ix bugs in our corpus. In total this work demonstrates that beyond simple misunderstanding in the lab setting, atoms of confusion are both prevalent - occurring often in real projects, and meaningful - being removed by bug-fix commits at an elevated rate.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild 1522887852052 Dan Gopstein New York University dgopstein@nyu.edu Henry Hongwei Zhou New York University hz1101@nyu.edu Phyllis Frankl New York University pfrankl@nyu.edu Justin Cappos New York University jcappos@nyu.edu Programming Languages Program Understanding Prior work has shown that extremely small code patterns, such as the conditional operator and implicit type conversion, can cause considerable misunderstanding in programmers. Until now, the real world impact of these patterns - known as 'atoms of confusion' - was only speculative. This work uses a corpus of 14 of the most popular and influential open source C and C++ projects to measure the prevalence and significance of these small confusing patterns. Our results show that the 15 known types of confusing micro patterns occur millions of times in programs like the Linux kernel and GCC, appearing on average once every 23 lines. We show there is a strong correlation between these confusing patterns and bug-ix commits as well as a tendency for confusing patterns to be commented. We also explore patterns at the project level showing the rate of security vulnerabilities is higher in projects with more atoms. Finally, we examine real code examples containing these atoms, including ones that were used to ind and ix bugs in our corpus. In total this work demonstrates that beyond simple misunderstanding in the lab setting, atoms of confusion are both prevalent - occurring often in real projects, and meaningful - being removed by bug-fix commits at an elevated rate.",
              "pageNumber": 281,
              "isPageNumberRoman": false
            },
            {
              "id": "1jTCzTmrmPG11PSNxBiJLY",
              "type": "authorPaper",
              "text": "How Swift Developers Handle Errors",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf",
              "extraLocations": [],
              "authorNames": "Nathan Cassee (Eindhoven University of Technology), Gustavo Pinto (Federal University of Pará), Fernando Castor (Federal University of Pernambuco), Alexander Serebrenik (Eindhoven University of Technology)",
              "abstract": "Swift is a new programming language developed by Apple as a replacement to Objective-C. It features a sophisticated error handling (EH) mechanism that provides the kind of separation of concerns afforded by exception handling mechanisms in other languages, while also including constructs to improve safety and maintainability. However, Swift also inherits a software development culture stemming from Objective-C being the de-facto standard programming language for Apple platforms for the last 15 years. It is, therefore, a priori unclear whether Swift developers embrace the novel EH mechanisms of the programming language or still rely on the old EH culture of Objective-C even working in Swift. In this paper, we study to what extent developers adhere to good practices exemplified by EH guidelines and tutorials, and what are the common bad EH practices particularly relevant to Swift code. Furthermore, we investigate whether perception of these practices differs between novices and experienced Swift developers. To answer these questions we employ a mixed-methods approach and combine 10 semi-structured interviews with Swift developers and quantitative analysis of 78,760 Swift 4 files extracted from 2,733 open-source GitHub repositories. Our findings indicate that there is ample opportunity to improve the way Swift developers use error handling mechanisms. For instance, some recommendations derived in this work are not well spread in the corpus of studied Swift projects. For example, generic catch handlers are common in Swift (even though it is not uncommon for them to share space with their counterparts: non empty catch handlers), custom, developerdefined error types are rare, and developers are mostly reactive when it comes to error handling, using Swift's constructs mostly to handle errors thrown by libraries, instead of throwing and handling application-specific errors.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 How Swift Developers Handle Errors 1521230715323 Nathan Cassee Eindhoven University of Technology n.w.cassee@student.tue.nl Gustavo Pinto Federal University of Pará gpinto@ufpa.br Fernando Castor Federal University of Pernambuco castor@cin.ufpe.br Alexander Serebrenik Eindhoven University of Technology a.serebrenik@tue.nl Error handling Swift Language feature usage Swift is a new programming language developed by Apple as a replacement to Objective-C. It features a sophisticated error handling (EH) mechanism that provides the kind of separation of concerns afforded by exception handling mechanisms in other languages, while also including constructs to improve safety and maintainability. However, Swift also inherits a software development culture stemming from Objective-C being the de-facto standard programming language for Apple platforms for the last 15 years. It is, therefore, a priori unclear whether Swift developers embrace the novel EH mechanisms of the programming language or still rely on the old EH culture of Objective-C even working in Swift. In this paper, we study to what extent developers adhere to good practices exemplified by EH guidelines and tutorials, and what are the common bad EH practices particularly relevant to Swift code. Furthermore, we investigate whether perception of these practices differs between novices and experienced Swift developers. To answer these questions we employ a mixed-methods approach and combine 10 semi-structured interviews with Swift developers and quantitative analysis of 78,760 Swift 4 files extracted from 2,733 open-source GitHub repositories. Our findings indicate that there is ample opportunity to improve the way Swift developers use error handling mechanisms. For instance, some recommendations derived in this work are not well spread in the corpus of studied Swift projects. For example, generic catch handlers are common in Swift (even though it is not uncommon for them to share space with their counterparts: non empty catch handlers), custom, developerdefined error types are rare, and developers are mostly reactive when it comes to error handling, using Swift's constructs mostly to handle errors thrown by libraries, instead of throwing and handling application-specific errors.",
              "pageNumber": 292,
              "isPageNumberRoman": false
            },
            {
              "id": "7KmUre87WoxjmF9CpyuCXQ",
              "type": "authorPaper",
              "text": "What are Your Programming Language's Energy-Delay Implications?",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf",
              "extraLocations": [],
              "authorNames": "Stefanos Georgiou (Athens University of Economics and Business), Maria Kechagia (Delft University of Technology), Panos Louridas (Athens University of Economics and Business), Diomidis Spinellis (Athens University of Economics and Business)",
              "abstract": "Motivation: Even though many studies examine the energy efficiency of hardware and embedded systems, those that investigate the energy consumption of software applications are still limited, and mostly focused on mobile applications. As modern applications become even more complex and heterogeneous a need arises for methods that can accurately assess their energy consumption. Goal: Measure the energy consumption and run-time performance of commonly used programming tasks implemented in different programming languages and executed on a variety of platforms to help developers to choose appropriate implementation platforms. Method: Obtain measurements to calculate the Energy Delay Prod- uct, a weighted function that takes into account a task's energy consumption and run-time performance. We perform our tests by calculating the Energy Delay Product of 25 programming tasks, found in the Rosetta Code Repository, which are implemented in 14 programming languages and run on three different computer platforms, a server, a laptop, and an embedded system. Results: Compiled programming languages are outperforming the interpreted ones for most, but not for all tasks. C, C#, and JavaScript are on average the best performing compiled, semi-compiled, and interpreted programming languages for the Energy Delay Product, and Rust appears to be well-placed for i/o-intensive operations, such as file handling. We also find that a good behaviour, energy- wise, can be the result of clever optimizations and design choices in seemingly unexpected programming languages.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 What are Your Programming Language's Energy-Delay Implications? 1522901999494 Stefanos Georgiou Athens University of Economics and Business sgeorgiou@aueb.gr Maria Kechagia Delft University of Technology m.kechagia@tudelft.nl Panos Louridas Athens University of Economics and Business louridas@aueb.gr Diomidis Spinellis Athens University of Economics and Business dds@aueb.gr Programming Languages Energy-Efficiency Energy-Delay-Product Motivation: Even though many studies examine the energy efficiency of hardware and embedded systems, those that investigate the energy consumption of software applications are still limited, and mostly focused on mobile applications. As modern applications become even more complex and heterogeneous a need arises for methods that can accurately assess their energy consumption. Goal: Measure the energy consumption and run-time performance of commonly used programming tasks implemented in different programming languages and executed on a variety of platforms to help developers to choose appropriate implementation platforms. Method: Obtain measurements to calculate the Energy Delay Prod- uct, a weighted function that takes into account a task's energy consumption and run-time performance. We perform our tests by calculating the Energy Delay Product of 25 programming tasks, found in the Rosetta Code Repository, which are implemented in 14 programming languages and run on three different computer platforms, a server, a laptop, and an embedded system. Results: Compiled programming languages are outperforming the interpreted ones for most, but not for all tasks. C, C#, and JavaScript are on average the best performing compiled, semi-compiled, and interpreted programming languages for the Energy Delay Product, and Rust appears to be well-placed for i/o-intensive operations, such as file handling. We also find that a good behaviour, energy- wise, can be the result of clever optimizations and design choices in seemingly unexpected programming languages.",
              "pageNumber": 303,
              "isPageNumberRoman": false
            },
            {
              "id": "5HmbOhnp5fJfxjX7910iYZ",
              "type": "authorPaper",
              "text": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf",
              "extraLocations": [],
              "authorNames": "Asher Trockman (University of Evansville), Keenen Cates (University of Evansville), Mark Mozina (University of Evansville), Tuan Nguyen (University of Evansville), Christian Kästner (Carnegie Mellon University), Bogdan Vasilescu (Carnegie Mellon University)",
              "abstract": "Previous research shows that developers spend most of their time understanding code. Despite the importance of code understandability for maintenance-related activities, an objective measure of it remains an elusive goal. Recently, Scalabrino et al. reported on an experiment with 46 Java developers designed to evaluate metrics for code understandability. The authors collected and analyzed data on more than a hundred features describing the code snippets, the developers' experience, and the developers' performance on a quiz designed to assess understanding. They concluded that none of the metrics considered can individually capture understandability. Expecting that understandability is better captured by a combination of multiple features, we present a reanalysis of the data from the Scalabrino et al. study, in which we use different statistical modeling techniques. Our models suggest that some computed features of code, such as those arising from syntactic structure and documentation, have a small but significant correlation with understandability. Further, we construct a binary classifier of understandability based on various interpretable code features, which has a small amount of discriminating power. Our encouraging results, based on a small data set, suggest that a useful metric of understandability could feasibly be created, but more data is needed.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 \"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter 1522896957450 Asher Trockman University of Evansville asher.trockman@gmail.com Keenen Cates University of Evansville keenencates@gmail.com Mark Mozina University of Evansville mm696@evansville.edu Tuan Nguyen University of Evansville tn58@evansville.edu Christian Kästner Carnegie Mellon University kaestner@cs.cmu.edu Bogdan Vasilescu Carnegie Mellon University vasilescu@cmu.edu code understandability metric reanalysis statistical modeling readability classification replication program comprehension Previous research shows that developers spend most of their time understanding code. Despite the importance of code understandability for maintenance-related activities, an objective measure of it remains an elusive goal. Recently, Scalabrino et al. reported on an experiment with 46 Java developers designed to evaluate metrics for code understandability. The authors collected and analyzed data on more than a hundred features describing the code snippets, the developers' experience, and the developers' performance on a quiz designed to assess understanding. They concluded that none of the metrics considered can individually capture understandability. Expecting that understandability is better captured by a combination of multiple features, we present a reanalysis of the data from the Scalabrino et al. study, in which we use different statistical modeling techniques. Our models suggest that some computed features of code, such as those arising from syntactic structure and documentation, have a small but significant correlation with understandability. Further, we construct a binary classifier of understandability based on various interpretable code features, which has a small amount of discriminating power. Our encouraging results, based on a small data set, suggest that a useful metric of understandability could feasibly be created, but more data is needed.",
              "pageNumber": 314,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - 2008 Most Influential Paper Award and Evolution and Changes ",
          "lineItems": [
            {
              "id": "4FSVwWDgn1FAccsHwBF1Md",
              "type": "authorPaper",
              "text": "What Do Large Commits Tell Us? A Taxonomical Study of Large Commits",
              "articleLocation": null,
              "extraLocations": [],
              "authorNames": "",
              "abstract": "",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 What Do Large Commits Tell Us? A Taxonomical Study of Large Commits",
              "pageNumber": ""
            },
            {
              "id": "5HnSLMAERiZF481baXwFR2",
              "type": "authorPaper",
              "text": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf",
              "extraLocations": [],
              "authorNames": "Sebastian Baltes (University of Trier), Lorik Dumani (University of Trier), Christoph Treude (University of Adelaide), Stephan Diehl (University of Trier)",
              "abstract": "Stack Overflow (SO) is the most popular question-and-answer website for software developers, providing a large amount of code snippets and free-form text on a wide variety of topics. Like other software artifacts, questions and answers on SO evolve over time, for example when bugs in code snippets are fixed, code is updated to work with a more recent library version, or text surrounding a code snippet is edited for clarity. To be able to analyze how content on SO evolves, we built SOTorrent, an open dataset based on the official SO data dump. SOTorrent provides access to the version history of SO content at the level of whole posts and individual text or code blocks. It connects SO posts to other platforms by aggregating URLs from text blocks and by collecting references from GitHub files to SO posts. In this paper, we describe how we built SOTorrent, and in particular how we evaluated 134 different string similarity metrics regarding their applicability for reconstructing the version history of text and code blocks. Based on a first analysis using the dataset, we present insights into the evolution of SO posts, e.g., that post edits are usually small, happen soon after the initial creation of the post, and that code is rarely changed without also updating the surrounding text. Further, our analysis revealed a close relationship between post edits and comments. Our vision is that researchers will use SOTorrent to investigate and understand the evolution of SO posts and their relation to other platforms such as GitHub.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts 1521534412400 Sebastian Baltes University of Trier research@sbaltes.com Lorik Dumani University of Trier dumani@uni-trier.de Christoph Treude University of Adelaide christoph.treude@adelaide.edu.au Stephan Diehl University of Trier diehl@uni-trier.de stack overflow software evolution open dataset code snippets Stack Overflow (SO) is the most popular question-and-answer website for software developers, providing a large amount of code snippets and free-form text on a wide variety of topics. Like other software artifacts, questions and answers on SO evolve over time, for example when bugs in code snippets are fixed, code is updated to work with a more recent library version, or text surrounding a code snippet is edited for clarity. To be able to analyze how content on SO evolves, we built SOTorrent, an open dataset based on the official SO data dump. SOTorrent provides access to the version history of SO content at the level of whole posts and individual text or code blocks. It connects SO posts to other platforms by aggregating URLs from text blocks and by collecting references from GitHub files to SO posts. In this paper, we describe how we built SOTorrent, and in particular how we evaluated 134 different string similarity metrics regarding their applicability for reconstructing the version history of text and code blocks. Based on a first analysis using the dataset, we present insights into the evolution of SO posts, e.g., that post edits are usually small, happen soon after the initial creation of the post, and that code is rarely changed without also updating the surrounding text. Further, our analysis revealed a close relationship between post edits and comments. Our vision is that researchers will use SOTorrent to investigate and understand the evolution of SO posts and their relation to other platforms such as GitHub.",
              "pageNumber": 319,
              "isPageNumberRoman": false
            },
            {
              "id": "YdVSgRa6Q2bfPMb8Su303",
              "type": "authorPaper",
              "text": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf",
              "extraLocations": [],
              "authorNames": "Robert Benkoczi (University of Lethbridge), Daya Gaur (University of Lethbridge), Shahadat Hossain (University of Lethbridge), Muhammad Ali Khan (University of Lethbridge)",
              "abstract": "Several authors have quantified the modularity of software systems in terms of coupling and cohesion metrics. Most of these approaches focus on functional and procedural dependencies in the system. Although highly relevant at the design phase, these static dependencies alone do not account for how a software product evolves over time. Instead, this is also dictated by logical and hidden dependencies between system files. To a large extent, the co-change (co-commit) relation captures these different types of dependencies. In this paper, we define two measures of co-change-modularity of a software product based on a weighted design structure matrix (DSM). The first metric, called the weighted propagation cost, uses matrix exponential to measure how changes to one system file potentially affect the whole product. The second metric, called the weighted clustering cost, uses the output of the first metric to measure the partitionability of the system based on the co-change relation. In addition, we provide a visual representation of how the co-change structure of a system evolves over time. We discuss the theoretical foundation of our work and highlight its advantages over existing methodologies. We apply our approach to GNU Octave and show the findings to be consistent with the available literature on the evolution of Octave. Our analysis is extensible and applicable to a range of scenarios including open source systems.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products 1521595930620 Robert Benkoczi University of Lethbridge robert.benkoczi@uleth.ca Daya Gaur University of Lethbridge daya.gaur@uleth.ca Shahadat Hossain University of Lethbridge shahadat.hossain@uleth.ca Muhammad Ali Khan University of Lethbridge ma.khan@uleth.ca Co-change structure software modularity software evolution coupling and cohesion design structure matrix clustering. Several authors have quantified the modularity of software systems in terms of coupling and cohesion metrics. Most of these approaches focus on functional and procedural dependencies in the system. Although highly relevant at the design phase, these static dependencies alone do not account for how a software product evolves over time. Instead, this is also dictated by logical and hidden dependencies between system files. To a large extent, the co-change (co-commit) relation captures these different types of dependencies. In this paper, we define two measures of co-change-modularity of a software product based on a weighted design structure matrix (DSM). The first metric, called the weighted propagation cost, uses matrix exponential to measure how changes to one system file potentially affect the whole product. The second metric, called the weighted clustering cost, uses the output of the first metric to measure the partitionability of the system based on the co-change relation. In addition, we provide a visual representation of how the co-change structure of a system evolves over time. We discuss the theoretical foundation of our work and highlight its advantages over existing methodologies. We apply our approach to GNU Octave and show the findings to be consistent with the available literature on the evolution of Octave. Our analysis is extensible and applicable to a range of scenarios including open source systems.",
              "pageNumber": 331,
              "isPageNumberRoman": false
            },
            {
              "id": "61LIbezoIUp1YxO4OqMian",
              "type": "authorPaper",
              "text": "A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? —",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2FaENRgCasXURrdA1YYXET/3ytP2Fi5twQBv6D30oq5vQ.pdf",
              "extraLocations": [],
              "authorNames": "Ryo Arima (Osaka University), Yoshiki Higo (Osaka University), Shinji Kusumoto (Osaka University)",
              "abstract": "When we use code repositories, each commit should include code changes for only a single task and code changes for a single task should not be scattered over multiple commits. There are many studies on the former violation–often referred to as tangled commits–but the latter violation has been out of scope for MSR research. In this paper, we firstly investigate how much and what kinds of inappropriately partitioned commits in Java projects. Then, we propose a simple technique to detect such commits automatically. We also report evaluation results of the proposed technique.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? — 1521190369432 Ryo Arima Osaka University r-arima@ist.osaka-u.ac.jp Yoshiki Higo Osaka University higo@ist.osaka-u.ac.jp Shinji Kusumoto Osaka University kusumoto@ist.osaka-u.ac.jp Inappropriately partitioned commits tangled commits logical coupling When we use code repositories, each commit should include code changes for only a single task and code changes for a single task should not be scattered over multiple commits. There are many studies on the former violation–often referred to as tangled commits–but the latter violation has been out of scope for MSR research. In this paper, we firstly investigate how much and what kinds of inappropriately partitioned commits in Java projects. Then, we propose a simple technique to detect such commits automatically. We also report evaluation results of the proposed technique.",
              "pageNumber": 336,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Machine Learning for SE ",
          "lineItems": [
            {
              "id": "1pjMdUjnYsBBa9irMRBRTc",
              "type": "authorPaper",
              "text": "Data-Driven Search-Based Software Engineering",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf",
              "extraLocations": [],
              "authorNames": "Vivek Nair (North Carolina State University), Amritanshu Agrawal (North Carolina State University), Jianfeng Chen (North Carolina State University), Wei Fu (North Carolina State University), George Mathew (North Carolina State University), Tim Menzies (North Carolina State University), Leandro Minku (University of Leicester), Markus Wagner (The University of Adelaide), Zhe Yu (North Carolina State University)",
              "abstract": "This paper introduces Data-Driven Search-based Software Engineering (DSE), which combines insights from Mining Software Repositories (MSR) and Search-based Software Engineering (SBSE). While MSR formulates software engineering problems as data mining problems, SBSE reformulates Software Engineering (SE) problems as optimization problems and use meta-heuristic algorithms to solve them. Both MSR and SBSE share the common goal of providing insights to improve software engineering. The algorithms used in these two areas also have intrinsic relationships. We, therefore, argue that combining these two fields is useful for situations (a)~which require learning from a large data source or (b)~when optimizers need to know the lay of the land to find better solutions, faster. This paper aims to answer the following three questions: (1) What are the various topics addressed by DSE?, (2) What types of data are used by the researchers in this area?, and (3) What research approaches do researchers use? The paper briefly sets out to act as a practical guide to develop new DSE techniques and also to serve as a teaching resource. This paper also presents a resource (tiny.cc/data-se) for exploring DSE. The resource contains 89 artifacts which are related to DSE, divided into 13 groups such as requirements engineering, software product lines, software processes. All the materials in this repository have been used in recent software engineering papers; i.e., for all this material, there exist baseline results against which researchers can comparatively assess their new ideas.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Data-Driven Search-Based Software Engineering 1521229799005 Vivek Nair North Carolina State University vivekaxl@gmail.com Amritanshu Agrawal North Carolina State University aagrawa8@ncsu.edu Jianfeng Chen North Carolina State University jchen37@ncsu.edu Wei Fu North Carolina State University wfu@ncsu.edu George Mathew North Carolina State University george2@ncsu.edu Tim Menzies North Carolina State University tim@menzies.us Leandro Minku University of Leicester leandro.minku@leicester.ac.uk Markus Wagner The University of Adelaide markus.wagner@adelaide.edu.au Zhe Yu North Carolina State University zyu9@ncsu.edu Software Analytics SBSE This paper introduces Data-Driven Search-based Software Engineering (DSE), which combines insights from Mining Software Repositories (MSR) and Search-based Software Engineering (SBSE). While MSR formulates software engineering problems as data mining problems, SBSE reformulates Software Engineering (SE) problems as optimization problems and use meta-heuristic algorithms to solve them. Both MSR and SBSE share the common goal of providing insights to improve software engineering. The algorithms used in these two areas also have intrinsic relationships. We, therefore, argue that combining these two fields is useful for situations (a)~which require learning from a large data source or (b)~when optimizers need to know the lay of the land to find better solutions, faster. This paper aims to answer the following three questions: (1) What are the various topics addressed by DSE?, (2) What types of data are used by the researchers in this area?, and (3) What research approaches do researchers use? The paper briefly sets out to act as a practical guide to develop new DSE techniques and also to serve as a teaching resource. This paper also presents a resource (tiny.cc/data-se) for exploring DSE. The resource contains 89 artifacts which are related to DSE, divided into 13 groups such as requirements engineering, software product lines, software processes. All the materials in this repository have been used in recent software engineering papers; i.e., for all this material, there exist baseline results against which researchers can comparatively assess their new ideas.",
              "pageNumber": 341,
              "isPageNumberRoman": false
            },
            {
              "id": "IzrUvhf55bZEaBznLFdVf",
              "type": "authorPaper",
              "text": "The Open-Closed Principle of Modern Machine Learning Frameworks",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf",
              "extraLocations": [],
              "authorNames": "Houssem Ben Braiek (SWAT Lab.), Foutse Khomh (SWAT Lab.), Bram Adams (MCIS)",
              "abstract": "Recent advances in computing technologies and the availability of huge volumes of data have sparked a new machine learning (ML) revolution, where almost every day a new headline touts the demise of human experts by ML models on some task. Open source software development is rumoured to play a significant role in this revolution, with both academics and large corporations such as Google and Microsoft releasing their ML frameworks under an open source license. This paper takes a step back to examine and understand the role of open source development in modern ML, by examining the growth of the open source ML ecosystem on GitHub, its actors, and the adoption of frameworks over time. By mining LinkedIn and Google Scholar profiles, we also examine driving factors behind this growth (paid vs. voluntary contributors), as well as the major players who promote its democratization (companies vs. communities), and the composition of ML development teams (engineers vs. scientists). According to the technology adoption lifecycle, we find that ML is in between the stages of early adoption and early majority. Furthermore, companies are the main drivers behind open source ML, while the majority of development teams are hybrid teams comprising both engineers and professional scientists. The latter correspond to scientists employed by a company, and by far represent the most active profiles in the development of ML applications, which reflects the importance of a scientific background for the development of ML frameworks to complement coding skills. The large influence of cloud computing companies on the development of open source ML frameworks raises the risk of vendor lock-in. These frameworks, while open source, could be optimized for specific commercial cloud offerings.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 The Open-Closed Principle of Modern Machine Learning Frameworks 1521257759905 Houssem Ben Braiek SWAT Lab. houssem.ben-braiek@polymtl.ca Foutse Khomh SWAT Lab. foutse.khomh@polymtl.ca Bram Adams MCIS bram.adams@polymtl.ca Machine Learning Open Source Framework Technology adoption Recent advances in computing technologies and the availability of huge volumes of data have sparked a new machine learning (ML) revolution, where almost every day a new headline touts the demise of human experts by ML models on some task. Open source software development is rumoured to play a significant role in this revolution, with both academics and large corporations such as Google and Microsoft releasing their ML frameworks under an open source license. This paper takes a step back to examine and understand the role of open source development in modern ML, by examining the growth of the open source ML ecosystem on GitHub, its actors, and the adoption of frameworks over time. By mining LinkedIn and Google Scholar profiles, we also examine driving factors behind this growth (paid vs. voluntary contributors), as well as the major players who promote its democratization (companies vs. communities), and the composition of ML development teams (engineers vs. scientists). According to the technology adoption lifecycle, we find that ML is in between the stages of early adoption and early majority. Furthermore, companies are the main drivers behind open source ML, while the majority of development teams are hybrid teams comprising both engineers and professional scientists. The latter correspond to scientists employed by a company, and by far represent the most active profiles in the development of ML applications, which reflects the importance of a scientific background for the development of ML frameworks to complement coding skills. The large influence of cloud computing companies on the development of open source ML frameworks raises the risk of vendor lock-in. These frameworks, while open source, could be optimized for specific commercial cloud offerings.",
              "pageNumber": 353,
              "isPageNumberRoman": false
            },
            {
              "id": "6Jt5CD2AAvTdi7vOnRUIvp",
              "type": "authorPaper",
              "text": "A Benchmark Study on Sentiment Analysis for Software Engineering Research",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1jNhKLjuP971qE1RJy9uu5/7dzem7EqX1CwyPMxfPm4hq.pdf",
              "extraLocations": [],
              "authorNames": "Nicole Novielli (University of Bari Aldo Moro), Daniela Girardi (University of Bari Aldo Moro), Filippo Lanubile (University of Bari Aldo Moro)",
              "abstract": "A recent research trend has emerged to identify developers' emotions, by applying sentiment analysis to the content of communication traces left in collaborative development environments. Trying to overcome the limitations posed by using off-the-shelf sentiment analysis tools, researchers recently started to develop their own tools for the software engineering domain. In this paper, we report a benchmark study to assess the performance and reliability of three sentiment analysis tools specifically customized for software engineering. Furthermore, we offer a reflection on the open challenges, as they emerge from a qualitative analysis of misclassified texts.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Benchmark Study on Sentiment Analysis for Software Engineering Research 1521047283685 Nicole Novielli University of Bari Aldo Moro nicole.novielli@uniba.it Daniela Girardi University of Bari Aldo Moro daniela.girardi@uniba.it Filippo Lanubile University of Bari Aldo Moro filippo.lanubile@uniba.it Sentiment analysis Communication Channels Social Software Engineering NLP A recent research trend has emerged to identify developers' emotions, by applying sentiment analysis to the content of communication traces left in collaborative development environments. Trying to overcome the limitations posed by using off-the-shelf sentiment analysis tools, researchers recently started to develop their own tools for the software engineering domain. In this paper, we report a benchmark study to assess the performance and reliability of three sentiment analysis tools specifically customized for software engineering. Furthermore, we offer a reflection on the open challenges, as they emerge from a qualitative analysis of misclassified texts.",
              "pageNumber": 364,
              "isPageNumberRoman": false
            },
            {
              "id": "69WwaTYCo7f6D1ep5wVOcW",
              "type": "authorPaper",
              "text": "A Deep Learning Approach to Identifying Source Code in Images and Video",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf",
              "extraLocations": [],
              "authorNames": "Jordan Ott (Chapman University), Abigail Atchison (Chapman University), Paul Harnack (Chapman University), Adrienne Bergh (Chapman University), Erik Linstead (Chapman University)",
              "abstract": "While substantial progress has been made in mining code on an Internet scale, efforts to date have been overwhelmingly focused on data sets where source code is represented natively as text. Large volumes of source code available online and embedded in technical videos have remained largely unexplored, due in part to the complexity of extraction when code is represented with images. Existing approaches to code extraction and indexing in this environment rely heavily on computationally intense optical character recognition. To improve the ease and efficiency of identifying this embedded code, as well as identifying similar code examples, we develop a deep learning solution based on convolutional neural networks and autoencoders. Focusing on Java for proof of concept, our technique is able to identify the presence of typeset and handwritten source code in thousands of video images with 85.6%-98.6% accuracy based on syntactic and contextual features learned through deep architectures. When combined with traditional approaches, this provides a more scalable basis for video indexing that can be incorporated into existing software search and mining tools.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Deep Learning Approach to Identifying Source Code in Images and Video 1521426860720 Jordan Ott Chapman University ott109@mail.chapman.edu Abigail Atchison Chapman University atchi102@mail.chapman.edu Paul Harnack Chapman University harna100@mail.chapman.edu Adrienne Bergh Chapman University abergh@chapman.edu Erik Linstead Chapman University linstead@chapman.edu deep learning convolutional neural networks video mining programming tutorials While substantial progress has been made in mining code on an Internet scale, efforts to date have been overwhelmingly focused on data sets where source code is represented natively as text. Large volumes of source code available online and embedded in technical videos have remained largely unexplored, due in part to the complexity of extraction when code is represented with images. Existing approaches to code extraction and indexing in this environment rely heavily on computationally intense optical character recognition. To improve the ease and efficiency of identifying this embedded code, as well as identifying similar code examples, we develop a deep learning solution based on convolutional neural networks and autoencoders. Focusing on Java for proof of concept, our technique is able to identify the presence of typeset and handwritten source code in thousands of video images with 85.6%-98.6% accuracy based on syntactic and contextual features learned through deep architectures. When combined with traditional approaches, this provides a more scalable basis for video indexing that can be incorporated into existing software search and mining tools.",
              "pageNumber": 376,
              "isPageNumberRoman": false
            },
            {
              "id": "5j6voYmDNGLNt9kYMlAzfQ",
              "type": "authorPaper",
              "text": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf",
              "extraLocations": [],
              "authorNames": "Mika Mäntylä (University of Oulu), Fabio Calefato (University of Bari), Maëlick Claes (University of Oulu)",
              "abstract": "The use of natural language processing (NLP) is gaining popularity in software engineering. In order to correctly perform NLP, we must pre-process the textual information to separate natural language from other information, such as log messages, that are often part of the communication in software engineering. We present a simple approach for classifying whether some textual input is natural language or not. Although our NLoN package relies on only 11 language features and character tri-grams, we are able to achieve an area under the ROC curve performances between 0.976-0.987 on three different data sources, with Lasso regression from Glmnet as our learner and two human raters for providing ground truth. Cross-source prediction performance is lower and has more fluctuation with top ROC performances from 0.913 to 0.980. Compared with prior work, our approach offers similar performance but is considerably more lightweight, making it easier to apply in software engineering text mining pipelines. Our source code and data are provided as an R-package for further improvements.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline 1521183794722 Mika Mäntylä University of Oulu mika.mantyla@oulu.fi Fabio Calefato University of Bari fabio.calefato@uniba.it Maëlick Claes University of Oulu maelick.claes@oulu.fi natural language processing preprocessing filtering machine learning regular expressions character n-grams glmnet lasso logistic regression The use of natural language processing (NLP) is gaining popularity in software engineering. In order to correctly perform NLP, we must pre-process the textual information to separate natural language from other information, such as log messages, that are often part of the communication in software engineering. We present a simple approach for classifying whether some textual input is natural language or not. Although our NLoN package relies on only 11 language features and character tri-grams, we are able to achieve an area under the ROC curve performances between 0.976-0.987 on three different data sources, with Lasso regression from Glmnet as our learner and two human raters for providing ground truth. Cross-source prediction performance is lower and has more fluctuation with top ROC performances from 0.913 to 0.980. Compared with prior work, our approach offers similar performance but is considerably more lightweight, making it easier to apply in software engineering text mining pipelines. Our source code and data are provided as an R-package for further improvements.",
              "pageNumber": 387,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - OSS Practices and Methods ",
          "lineItems": [
            {
              "id": "50qDRNvsJcqrQZCqA4V7Y3",
              "type": "authorPaper",
              "text": "How Is Video Game Development Different from Software Development in Open Source?",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf",
              "extraLocations": [],
              "authorNames": "Luca Pascarella (Delft University of Technology), Fabio Palomba (University of Zurich), Massimiliano Di Penta (University of Sannio), Alberto Bacchelli (University of Zurich)",
              "abstract": "Recent research has provided evidence that, in the industrial context, developing video games diverges from developing software systems in other domains, such as office suites and system utilities. In this paper, we consider video game development in the open source system (OSS) context. Specifically, we investigate how developers contribute to video games vs. non-games by working on different kinds of artifacts, how they handle malfunctions, and how they perceive the development process of their projects. To this purpose, we conducted a mixed, qualitative and quantitative study on a broad suite of 60 OSS projects. Our results confirm the existence of significant differences between game and non-game development, in terms of how project resources are organized and in the diversity of developers' specializations. Moreover, game developers responding to our survey perceive more difficulties than other developers when reusing code as well as performing automated testing, and they lack a clear overview of their system's requirements.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 How Is Video Game Development Different from Software Development in Open Source? 1521283588051 Luca Pascarella Delft University of Technology l.pascarella@tudelft.nl Fabio Palomba University of Zurich palomba@ifi.uzh.ch Massimiliano Di Penta University of Sannio dipenta@unisannio.it Alberto Bacchelli University of Zurich bacchelli@ifi.uzh.ch video game mining software repositories empirical studies Recent research has provided evidence that, in the industrial context, developing video games diverges from developing software systems in other domains, such as office suites and system utilities. In this paper, we consider video game development in the open source system (OSS) context. Specifically, we investigate how developers contribute to video games vs. non-games by working on different kinds of artifacts, how they handle malfunctions, and how they perceive the development process of their projects. To this purpose, we conducted a mixed, qualitative and quantitative study on a broad suite of 60 OSS projects. Our results confirm the existence of significant differences between game and non-game development, in terms of how project resources are organized and in the diversity of developers' specializations. Moreover, game developers responding to our survey perceive more difficulties than other developers when reusing code as well as performing automated testing, and they lack a clear overview of their system's requirements.",
              "pageNumber": 392,
              "isPageNumberRoman": false
            },
            {
              "id": "2oL3xKe8mmhtiHnu5aXZwX",
              "type": "authorPaper",
              "text": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf",
              "extraLocations": [],
              "authorNames": "Justin Middleton (North Carolina State University), Emerson Murphy-Hill (North Carolina State University), Demetrius Green (North Carolina State University), Adam Meade (North Carolina State University), Roger Mayer (North Carolina State University), David White (North Carolina State University), Steve McDonald (North Carolina State University)",
              "abstract": "Open-source software (OSS) often evolves from volunteer contributions, so OSS development teams must cooperate with their communities to attract new developers. However, in view of the myriad ways that developers interact over platforms for OSS development, observers of these communities may have trouble discerning, and thus learning from, the successful patterns of developer-to-team interactions that lead to eventual team acceptance. In this work, we study project communities on GitHub to discover which forms of software contribution characterize developers who begin as development team outsiders and eventually join the team, in contrast to developers who remain team outsiders. From this, we identify and compare the forms of contribution, such as pull requests and several forms of discussion comments, that influence whether new developers join OSS teams, and we discuss the implications that these behavioral patterns have for the focus of designers and educators.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Which Contributions Predict Whether Developers are Accepted into GitHub Teams 1522939574244 Justin Middleton North Carolina State University jamiddl2@ncsu.edu Emerson Murphy-Hill North Carolina State University ermurph3@ncsu.edu Demetrius Green North Carolina State University dkgreen@ncsu.edu Adam Meade North Carolina State University awmeade@ncsu.edu Roger Mayer North Carolina State University rcmayer@ncsu.edu David White North Carolina State University dlwhite5@ncsu.edu Steve McDonald North Carolina State University sjmcdona@ncsu.edu open source software online communities organization acceptance Open-source software (OSS) often evolves from volunteer contributions, so OSS development teams must cooperate with their communities to attract new developers. However, in view of the myriad ways that developers interact over platforms for OSS development, observers of these communities may have trouble discerning, and thus learning from, the successful patterns of developer-to-team interactions that lead to eventual team acceptance. In this work, we study project communities on GitHub to discover which forms of software contribution characterize developers who begin as development team outsiders and eventually join the team, in contrast to developers who remain team outsiders. From this, we identify and compare the forms of contribution, such as pull requests and several forms of discussion comments, that influence whether new developers join OSS teams, and we discuss the implications that these behavioral patterns have for the focus of designers and educators.",
              "pageNumber": 403,
              "isPageNumberRoman": false
            },
            {
              "id": "1JIdGMaRRNv9ZoAQb2g3p9",
              "type": "authorPaper",
              "text": "Automatic Classification of Software Artifacts in Open-Source Applications",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf",
              "extraLocations": [],
              "authorNames": "Yuzhan Ma (Washington State University), Sarah Fakhoury (Washington State University), Michael Christensen (Washington State University), Venera Arnaoudova (Washington State University), Waleed Zogaan (Rochester Institute of Technology), Mehdi Mirakhorli (Rochester Institute of Technology)",
              "abstract": "With the increasing popularity of open-source software development, there is a tremendous growth of software artifacts that provide insight into how people build software. Researchers are always looking for large-scale and representative software artifacts to produce systematic and unbiased validation of novel and existing techniques. For example, in the domain of software requirements traceability, researchers often use software applications with multiple types of artifacts, such as requirements, system elements, verifications, or tasks to develop and evaluate their traceability analysis techniques. However, the manual identification of rich software artifacts is very labor-intensive. In this work, we first conduct a large-scale study to identify which types of software artifacts are produced by a wide variety of open-source projects at different levels of granularity. Then we propose an automated approach based on Machine Learning techniques to identify various types of software artifacts. Through a set of experiments, we report and compare the performance of these algorithms when applied to software artifacts.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Automatic Classification of Software Artifacts in Open-Source Applications 1521599789774 Yuzhan Ma Washington State University yuzhan.ma@wsu.edu Sarah Fakhoury Washington State University sarah.fakhoury@wsu.edu Michael Christensen Washington State University michael.christensen@wsu.edu Venera Arnaoudova Washington State University venera.arnaoudova@wsu.edu Waleed Zogaan Rochester Institute of Technology waz7355@rit.edu Mehdi Mirakhorli Rochester Institute of Technology mxmvse@rit.edu Open-source software machine learning software artifacts With the increasing popularity of open-source software development, there is a tremendous growth of software artifacts that provide insight into how people build software. Researchers are always looking for large-scale and representative software artifacts to produce systematic and unbiased validation of novel and existing techniques. For example, in the domain of software requirements traceability, researchers often use software applications with multiple types of artifacts, such as requirements, system elements, verifications, or tasks to develop and evaluate their traceability analysis techniques. However, the manual identification of rich software artifacts is very labor-intensive. In this work, we first conduct a large-scale study to identify which types of software artifacts are produced by a wide variety of open-source projects at different levels of granularity. Then we propose an automated approach based on Machine Learning techniques to identify various types of software artifacts. Through a set of experiments, we report and compare the performance of these algorithms when applied to software artifacts.",
              "pageNumber": 414,
              "isPageNumberRoman": false
            },
            {
              "id": "3HkOVueOLOQJZ3hxYnLqgB",
              "type": "authorPaper",
              "text": "Large-Scale Analysis of the Co-commit Patterns of the Active Developers in GitHub's Top Repositories",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2PSyuH7pzNXAyM3k94rV14/4xBLmX21LTvLL87RoQ8NCx.pdf",
              "extraLocations": [],
              "authorNames": "Eldan Cohen (University of Toronto), Mariano P. Consens (University of Toronto)",
              "abstract": "GitHub, the largest code hosting site (with 25 million public active repositories and contributions from 6 million active users), provides an unprecedented opportunity to observe the collaboration patterns of software developers. Understanding the patterns behind the social coding phenomena is an active research area where the insights gained can guide the design of better collaboration tools, and can also help to identify and select developer talent. In this paper, we present a large-scale analysis of the co-commit patterns in GitHub. We analyze 10 million commits made by 200 thousand developers to 16 thousand repositories, using 17 of the most popular programming languages over a period of 3 years. Although a large volume of data is included in our study, we pay close attention to the participation criteria for repositories and developers. We select repositories by reputation (based on star ranking), and we introduce the notion of active developer in GitHub (observing that a limited subset of developers is responsible for the vast majority of the commits). Using co-authorship networks, we analyze the co-commit patterns of the active developer network for each programming language. We observe that the active developer networks are less connected and more centralized than the general GitHub developer networks, and that the patterns vary significantly among languages. We compare our results to other collaborative environments (Wikipedia and scientific research networks), and we also describe the evolution of the co-commit patterns over time.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Large-Scale Analysis of the Co-commit Patterns of the Active Developers in GitHub's Top Repositories 1521593264210 Eldan Cohen University of Toronto ecohen@mie.utoronto.ca Mariano P. Consens University of Toronto consens@mie.utoronto.ca GitHub Co authorship network co commit GitHub, the largest code hosting site (with 25 million public active repositories and contributions from 6 million active users), provides an unprecedented opportunity to observe the collaboration patterns of software developers. Understanding the patterns behind the social coding phenomena is an active research area where the insights gained can guide the design of better collaboration tools, and can also help to identify and select developer talent. In this paper, we present a large-scale analysis of the co-commit patterns in GitHub. We analyze 10 million commits made by 200 thousand developers to 16 thousand repositories, using 17 of the most popular programming languages over a period of 3 years. Although a large volume of data is included in our study, we pay close attention to the participation criteria for repositories and developers. We select repositories by reputation (based on star ranking), and we introduce the notion of active developer in GitHub (observing that a limited subset of developers is responsible for the vast majority of the commits). Using co-authorship networks, we analyze the co-commit patterns of the active developer network for each programming language. We observe that the active developer networks are less connected and more centralized than the general GitHub developer networks, and that the patterns vary significantly among languages. We compare our results to other collaborative environments (Wikipedia and scientific research networks), and we also describe the evolution of the co-commit patterns over time.",
              "pageNumber": 426,
              "isPageNumberRoman": false
            },
            {
              "id": "YNsVds1HMX7JNzprxhO7w",
              "type": "authorPaper",
              "text": "Towards Automatically Identifying Paid Open Source Developers",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf",
              "extraLocations": [],
              "authorNames": "Maëlick Claes (University of Oulu), Mika Mäntylä (University of Oulu), Miikka Kuutila (University of Oulu), Umar Farooq (University of Oulu)",
              "abstract": "Open source development contains contributions from both hired and volunteer software developers. Identification of this status is important when we consider the transferability of research results to the closed source software industry, as they include no volunteer developers. While many studies have taken the employment status of developers into account, this information is often gathered manually due to the lack of accurate automatic methods. In this paper, we present an initial step towards predicting paid and unpaid open source development using machine learning and compare our results with automatic techniques used in prior work. By relying on code source repository meta-data from Mozilla, and manually collected employment status, we built a dataset of the most active developers, both volunteer and hired by Mozilla. We define a set of metrics based on developers' usual commit time pattern and use different classification methods (logistic regression, classification tree, and random forest). The results show that our proposed method identify paid and unpaid commits with an AUC of 0.75 using random forest, which is higher than the AUC of 0.64 obtained with the best of the previously used automatic methods.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Towards Automatically Identifying Paid Open Source Developers 1521233381515 Maëlick Claes University of Oulu maelick.claes@oulu.fi Mika Mäntylä University of Oulu mika.mantyla@oulu.fi Miikka Kuutila University of Oulu miikka.kuutila@oulu.fi Umar Farooq University of Oulu umar.farooq@oulu.fi machine learning random forest software repository mining mozilla open source paid software development volunteer Open source development contains contributions from both hired and volunteer software developers. Identification of this status is important when we consider the transferability of research results to the closed source software industry, as they include no volunteer developers. While many studies have taken the employment status of developers into account, this information is often gathered manually due to the lack of accurate automatic methods. In this paper, we present an initial step towards predicting paid and unpaid open source development using machine learning and compare our results with automatic techniques used in prior work. By relying on code source repository meta-data from Mozilla, and manually collected employment status, we built a dataset of the most active developers, both volunteer and hired by Mozilla. We define a set of metrics based on developers' usual commit time pattern and use different classification methods (logistic regression, classification tree, and random forest). The results show that our proposed method identify paid and unpaid commits with an AUC of 0.75 using random forest, which is higher than the AUC of 0.64 obtained with the best of the previously used automatic methods.",
              "pageNumber": 437,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Search and Traceability ",
          "lineItems": [
            {
              "id": "7mTMosY9DUD1MB26oCDb8Y",
              "type": "authorPaper",
              "text": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf",
              "extraLocations": [],
              "authorNames": "Michael Rath (Technische Universität Ilmenau), David Lo (Singapore Management University), Patrick Mäder (Technische Universität Ilmenau)",
              "abstract": "Locating bugs in industry-size software systems is time consuming and challenging. An automated approach for assisting the process of tracing from bug descriptions to relevant source code benefits developers. A large body of previous work aims to address this problem and demonstrates considerable achievements. Most existing approaches focus on the key challenge of improving techniques based on textual similarity to identify relevant files. However, there exists a lexical gap between the natural language used to formulate bug reports and the formal source code and its comments. To bridge this gap, state-of-the-art approaches contain a component for analyzing bug history information to increase retrieval performance. In this paper, we propose a novel approach TraceScore that also utilizes projects' requirements information and explicit dependency trace links to further close the gap in order to relate a new bug report to defective source code files. Our evaluation on more than 13,000 bug reports shows, that TraceScore significantly outperforms two state-of-the-art methods. Further, by integrating TraceScore into an existing bug localization algorithm, we found that TraceScore significantly improves retrieval performance by 49% in terms of mean average precision (MAP).",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Analyzing Requirements and Traceability Information to Improve Bug Localization 1521029880609 Michael Rath Technische Universität Ilmenau michael.rath@tu-ilmenau.de David Lo Singapore Management University davidlo@smu.edu.sg Patrick Mäder Technische Universität Ilmenau patrick.maeder@tu-ilmenau.de Requirements Traceability Bug Localization Software Maintenance Traceability Recovery Version History Machine Learning Locating bugs in industry-size software systems is time consuming and challenging. An automated approach for assisting the process of tracing from bug descriptions to relevant source code benefits developers. A large body of previous work aims to address this problem and demonstrates considerable achievements. Most existing approaches focus on the key challenge of improving techniques based on textual similarity to identify relevant files. However, there exists a lexical gap between the natural language used to formulate bug reports and the formal source code and its comments. To bridge this gap, state-of-the-art approaches contain a component for analyzing bug history information to increase retrieval performance. In this paper, we propose a novel approach TraceScore that also utilizes projects' requirements information and explicit dependency trace links to further close the gap in order to relate a new bug report to defective source code files. Our evaluation on more than 13,000 bug reports shows, that TraceScore significantly outperforms two state-of-the-art methods. Further, by integrating TraceScore into an existing bug localization algorithm, we found that TraceScore significantly improves retrieval performance by 49% in terms of mean average precision (MAP).",
              "pageNumber": 442,
              "isPageNumberRoman": false
            },
            {
              "id": "1AYGS39Co2za0E43cSJeu2",
              "type": "authorPaper",
              "text": "Towards Extracting Web API Specifications from Documentation",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf",
              "extraLocations": [],
              "authorNames": "Jinqiu Yang (University of Waterloo), Erik Wittern (IBM T.J. Watson Research Center), Annie T.T. Ying (EquitySim), Julian Dolby (IBM T.J. Watson Research Center), Lin Tan (University of Waterloo)",
              "abstract": "Web API specifications are machine-readable descriptions of APIs. These specifications, in combination with related tooling, simplify and support the consumption of APIs. However, despite the increased distribution of web APIs, specifications are rare and their creation and maintenance heavily rely on manual efforts by third parties. In this paper, we propose an automatic approach and an associated tool called D2Spec for extracting significant parts of such specifications from web API documentation pages. Given a seed online documentation page of an API, D2Spec first crawls all documentation pages on the API, and then uses a set of machine-learning techniques to extract the base URL, path templates, and HTTP methods – collectively describing the endpoints of the API. We evaluate whether D2Spec can accurately extract endpoints from documentation on 116 web APIs. The results show that D2Spec achieves a precision of 87.1% in identifying base URLs, a precision of 80.3% and a recall of 80.9% in generating path templates, and a precision of 83.8% and a recall of 77.2% in extracting HTTP methods. In addition, in an evaluation on 64 APIs with pre-existing API specifications, D2Spec revealed many inconsistencies between web API documentation and their corresponding publicly available specifications. API consumers would benefit from D2Spec pointing them to, and allowing them thus to fix, such inconsistencies.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Towards Extracting Web API Specifications from Documentation 1522881979420 Jinqiu Yang University of Waterloo j223yang@uwaterloo.ca Erik Wittern IBM T.J. Watson Research Center witternj@us.ibm.com Annie T.T. Ying EquitySim annie.ying@gmail.com Julian Dolby IBM T.J. Watson Research Center dolby@us.ibm.com Lin Tan University of Waterloo lintan@uwaterloo.ca Web API Web API Specification Information Extraction Web API specifications are machine-readable descriptions of APIs. These specifications, in combination with related tooling, simplify and support the consumption of APIs. However, despite the increased distribution of web APIs, specifications are rare and their creation and maintenance heavily rely on manual efforts by third parties. In this paper, we propose an automatic approach and an associated tool called D2Spec for extracting significant parts of such specifications from web API documentation pages. Given a seed online documentation page of an API, D2Spec first crawls all documentation pages on the API, and then uses a set of machine-learning techniques to extract the base URL, path templates, and HTTP methods – collectively describing the endpoints of the API. We evaluate whether D2Spec can accurately extract endpoints from documentation on 116 web APIs. The results show that D2Spec achieves a precision of 87.1% in identifying base URLs, a precision of 80.3% and a recall of 80.9% in generating path templates, and a precision of 83.8% and a recall of 77.2% in extracting HTTP methods. In addition, in an evaluation on 64 APIs with pre-existing API specifications, D2Spec revealed many inconsistencies between web API documentation and their corresponding publicly available specifications. API consumers would benefit from D2Spec pointing them to, and allowing them thus to fix, such inconsistencies.",
              "pageNumber": 454,
              "isPageNumberRoman": false
            },
            {
              "id": "6qjpbO7d1yTg0a0UdtFGo",
              "type": "authorPaper",
              "text": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf",
              "extraLocations": [],
              "authorNames": "Md Masudur Rahman (University of Virginia), Jed Barson (University of Virginia), Sydney Paul (Clemson University), Joshua Kayani (North Carolina State University), Federico Andrés Lois (Codealike), Sebastián Fernandez Quezada (Codealike), Christopher Parnin (North Carolina State University), Kathryn T. Stolee (North Carolina State University), Baishakhi Ray (University of Virginia)",
              "abstract": "Search is an integral part of a software development process. Developers often use search engines to look for information during development, including reusable code snippets, API understanding, and reference examples. Developers tend to prefer general-purpose search engines like Google, which are often not optimized for code related documents and use search strategies and ranking techniques that are more optimized for generic, non-code related information. In this paper, we explore whether a general purpose search engine like Google is an optimal choice for code-related searches. In particular, we investigate whether the performance of searching with Google varies for code vs. non-code related searches. To analyze this, we collect search logs from 310 developers that contains nearly 150,000 search queries from Google and the associated result clicks. To di?erentiate between code-related searches and non-code related searches, we build a model which identifies code intent of queries. Leveraging this model, we build an automatic classifier that detects a code and non-code related query. We confirm the e?ectiveness of the classifier on manually annotated queries where the classifier achieves a precision of 87%, a recall of 86%, and an F1-score of 87%. We apply this classifier to automatically annotate all the queries in the dataset. Analyzing this dataset, we observe that code related searching often requires more e?ort (e.g., time, result clicks, and query modifications) than general non-code search, which indicates code search performance with a general search engine is less effective.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval 1521261298675 Md Masudur Rahman University of Virginia masud@virginia.edu Jed Barson University of Virginia jb3bt@virginia.edu Sydney Paul Clemson University sepaul@g.clemson.edu Joshua Kayani North Carolina State University jkayani@ncsu.edu Federico Andrés Lois Codealike Federico.lois@corvalius.com Sebastián Fernandez Quezada Codealike sebastian.quezada@corvalius.com Christopher Parnin North Carolina State University cjparnin@ncsu.edu Kathryn T. Stolee North Carolina State University ktstolee@ncsu.edu Baishakhi Ray University of Virginia rayb@virginia.edu code search web search engine search log analysis Search is an integral part of a software development process. Developers often use search engines to look for information during development, including reusable code snippets, API understanding, and reference examples. Developers tend to prefer general-purpose search engines like Google, which are often not optimized for code related documents and use search strategies and ranking techniques that are more optimized for generic, non-code related information. In this paper, we explore whether a general purpose search engine like Google is an optimal choice for code-related searches. In particular, we investigate whether the performance of searching with Google varies for code vs. non-code related searches. To analyze this, we collect search logs from 310 developers that contains nearly 150,000 search queries from Google and the associated result clicks. To di?erentiate between code-related searches and non-code related searches, we build a model which identifies code intent of queries. Leveraging this model, we build an automatic classifier that detects a code and non-code related query. We confirm the e?ectiveness of the classifier on manually annotated queries where the classifier achieves a precision of 87%, a recall of 86%, and an F1-score of 87%. We apply this classifier to automatically annotate all the queries in the dataset. Analyzing this dataset, we observe that code related searching often requires more e?ort (e.g., time, result clicks, and query modifications) than general non-code search, which indicates code search performance with a general search engine is less effective.",
              "pageNumber": 465,
              "isPageNumberRoman": false
            },
            {
              "id": "KDI5lfqk078PlScNYdwj6",
              "type": "authorPaper",
              "text": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf",
              "extraLocations": [],
              "authorNames": "Pengcheng Yin (Carnegie Mellon University), Bowen Deng (Carnegie Mellon University), Edgar Chen (Carnegie Mellon University), Bogdan Vasilescu (Carnegie Mellon University), Graham Neubig (Carnegie Mellon University)",
              "abstract": "For tasks like code synthesis from natural language, code retrieval, and code summarization, data-driven models have shown great promise. However, creating these models require parallel data between natural language (NL) and code with fine-grained alignments. StackOverflow (SO) is a promising source to create such a data set: the questions are diverse and most of them have corresponding answers with high-quality code snippets. However, existing heuristic methods (e.g. pairing the title of a post with the code in the accepted answer) are limited both in their coverage and the correctness of the NL-code pairs obtained. In this paper, we propose a novel method to mine high-quality aligned data from SO using two sets of features: hand-crafted features considering the structure of the extracted snippets, and correspondence features obtained by training a probabilistic model to capture the correlation between NL and code using neural networks. These features are fed into a classifier that determines the quality of mined NL-code pairs. Experiments using Python and Java as test beds show that the proposed method greatly expands coverage and accuracy over existing mining methods, even when using only a small number of labeled examples. Further, we find that reasonable results are achieved even when training the classifier on one language and testing on another, showing promise for scaling NL-code mining to a wide variety of programming languages beyond those for which we are able to annotate data.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow 1521230983039 Pengcheng Yin Carnegie Mellon University pcyin@cs.cmu.edu Bowen Deng Carnegie Mellon University bdeng1@cs.cmu.edu Edgar Chen Carnegie Mellon University edgarc@cs.cmu.edu Bogdan Vasilescu Carnegie Mellon University bogdanv@cs.cmu.edu Graham Neubig Carnegie Mellon University gneubig@cs.cmu.edu Code Mining Stack Overflow Neural Networks For tasks like code synthesis from natural language, code retrieval, and code summarization, data-driven models have shown great promise. However, creating these models require parallel data between natural language (NL) and code with fine-grained alignments. StackOverflow (SO) is a promising source to create such a data set: the questions are diverse and most of them have corresponding answers with high-quality code snippets. However, existing heuristic methods (e.g. pairing the title of a post with the code in the accepted answer) are limited both in their coverage and the correctness of the NL-code pairs obtained. In this paper, we propose a novel method to mine high-quality aligned data from SO using two sets of features: hand-crafted features considering the structure of the extracted snippets, and correspondence features obtained by training a probabilistic model to capture the correlation between NL and code using neural networks. These features are fed into a classifier that determines the quality of mined NL-code pairs. Experiments using Python and Java as test beds show that the proposed method greatly expands coverage and accuracy over existing mining methods, even when using only a small number of labeled examples. Further, we find that reasonable results are achieved even when training the classifier on one language and testing on another, showing promise for scaling NL-code mining to a wide variety of programming languages beyond those for which we are able to annotate data.",
              "pageNumber": 476,
              "isPageNumberRoman": false
            },
            {
              "id": "16ZaewMlbGkNQKSWYXl9tq",
              "type": "authorPaper",
              "text": "A Search System for Mathematical Expressions on Software Binaries",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf",
              "extraLocations": [],
              "authorNames": "Ridhi Jain (Indraprastha Institute of Information Technology), Sai Prathik (Indraprastha Institute of Information Technology), Venkatesh Vinayakarao (Indraprastha Institute of Information Technology), Rahul Purandare (Indraprastha Institute of Information Technology)",
              "abstract": "Developers often ask for libraries that implement specific mathematical expressions. A fundamental bottleneck in building information retrieval (IR) systems to answer such mathematical queries is the inability to detect a given expression in software binaries. While we have a few math IR solutions such as EgoMath2 and Tangent-3 that work over text documents, none exist to search over software binaries. Our vision is to build a search system for binaries to answer queries containing mathematical expressions. A wide variety of compilers and differences in the way they optimize the code, pose difficult challenges to solve this problem. In this work, we discuss our preliminary results in detecting mathematical expressions in software binaries. We use a knowledge base assisted approach to solve this problem. We are able to search mathematical expressions with a precision of 80% and a recall of 53%. This work opens up interesting research opportunities in areas such as software security and performance, to help analysts in identifying and analyzing binaries for implementations of mathematical expressions.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 A Search System for Mathematical Expressions on Software Binaries 1521190578157 Ridhi Jain Indraprastha Institute of Information Technology ridhij@iiitd.ac.in Sai Prathik Indraprastha Institute of Information Technology saip@iiitd.ac.in Venkatesh Vinayakarao Indraprastha Institute of Information Technology venkateshv@iiitd.ac.in Rahul Purandare Indraprastha Institute of Information Technology purandare@iiitd.ac.in software binaries information retrieval mathematical expressions Developers often ask for libraries that implement specific mathematical expressions. A fundamental bottleneck in building information retrieval (IR) systems to answer such mathematical queries is the inability to detect a given expression in software binaries. While we have a few math IR solutions such as EgoMath2 and Tangent-3 that work over text documents, none exist to search over software binaries. Our vision is to build a search system for binaries to answer queries containing mathematical expressions. A wide variety of compilers and differences in the way they optimize the code, pose difficult challenges to solve this problem. In this work, we discuss our preliminary results in detecting mathematical expressions in software binaries. We use a knowledge base assisted approach to solve this problem. We are able to search mathematical expressions with a precision of 80% and a recall of 53%. This work opens up interesting research opportunities in areas such as software security and performance, to help analysts in identifying and analyzing binaries for implementations of mathematical expressions.",
              "pageNumber": 487,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - APIs and Code ",
          "lineItems": [
            {
              "id": "2vBmMAkAdEQstuVwGyvq68",
              "type": "authorPaper",
              "text": "Imprecisions Diagnostic in Source Code Deltas",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf",
              "extraLocations": [],
              "authorNames": "Guillermo de la Torre (DCC), Romain Robbes (SwSE Research Group), Alexandre Bergel (DCC)",
              "abstract": "Beyond a practical use in code review, source code change detection (SCCD) is an important component of many mining software repositories (MSR) approaches. As such, any error or imprecision in the detection may result in a wrong conclusion while mining repositories. We identified, analyzed, and characterized impressions in GumTree, which is the most advanced algorithm for SCCD. After analyzing its detection accuracy over a curated corpus of 107 C# projects, we diagnosed several imprecisions. Many of our findings confirm that a more language-aware perspective of GumTree can be helpful in reporting more precise changes.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Imprecisions Diagnostic in Source Code Deltas 1521154026789 Guillermo de la Torre DCC gdelator@dcc.uchile.cl Romain Robbes SwSE Research Group rrobbes@unibz.it Alexandre Bergel DCC abergel@dcc.uchile.cl source code change detection differencing quality GumTree Beyond a practical use in code review, source code change detection (SCCD) is an important component of many mining software repositories (MSR) approaches. As such, any error or imprecision in the detection may result in a wrong conclusion while mining repositories. We identified, analyzed, and characterized impressions in GumTree, which is the most advanced algorithm for SCCD. After analyzing its detection accuracy over a curated corpus of 107 C# projects, we diagnosed several imprecisions. Many of our findings confirm that a more language-aware perspective of GumTree can be helpful in reporting more precise changes.",
              "pageNumber": 492,
              "isPageNumberRoman": false
            },
            {
              "id": "1hP8UBXbQFgbaiVB6NNKZE",
              "type": "authorPaper",
              "text": "Exploring the Use of Automated API Migrating Techniques in Practice: An Experience Report on Android",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5jj41oQED5vy32x8NUcopV/7Gn5ZlgPZVo1KvH3gpWbz0.pdf",
              "extraLocations": [],
              "authorNames": "Maxime Lamothe (Concordia University), Weiyi Shang (Concordia University)",
              "abstract": "In recent years, open source software libraries have allowed developers to build robust applications by consuming freely available application program interfaces (API). However, when these APIs evolve, consumers are left with the difficult task of migration. Studies on API migration often assume that software documentation lacks explicit information for migration guidance and is impractical for API consumers. Past research has shown that it is possible to present migration suggestions based on historical code-change information. On the other hand, research approaches with optimistic views of documentation have also observed positive results. Yet, the assumptions made by prior approaches have not been evaluated on large scale practical systems, leading to a need to affirm their validity. This paper reports our recent practical experience migrating the use of Android APIs in FDroid apps when leveraging approaches based on documentation and historical code changes. Our experiences suggest that migration through historical code-changes presents various challenges and that API documentation is undervalued. In particular, the majority of migrations from removed or deprecated Android APIs to newly added APIs can be suggested by a simple keyword search in the documentation. More importantly, during our practice, we experienced that the challenges of API migration lie beyond migration suggestions, in aspects such as coping with parameter type changes in new API. Future research may aim to design automated approaches to address the challenges that are documented in this experience report.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Exploring the Use of Automated API Migrating Techniques in Practice: An Experience Report on Android 1521054295776 Maxime Lamothe Concordia University max_lam@encs.concordia.ca Weiyi Shang Concordia University shang@encs.concordia.ca Android API API migration Mining Software Repositories Software evolution In recent years, open source software libraries have allowed developers to build robust applications by consuming freely available application program interfaces (API). However, when these APIs evolve, consumers are left with the difficult task of migration. Studies on API migration often assume that software documentation lacks explicit information for migration guidance and is impractical for API consumers. Past research has shown that it is possible to present migration suggestions based on historical code-change information. On the other hand, research approaches with optimistic views of documentation have also observed positive results. Yet, the assumptions made by prior approaches have not been evaluated on large scale practical systems, leading to a need to affirm their validity. This paper reports our recent practical experience migrating the use of Android APIs in FDroid apps when leveraging approaches based on documentation and historical code changes. Our experiences suggest that migration through historical code-changes presents various challenges and that API documentation is undervalued. In particular, the majority of migrations from removed or deprecated Android APIs to newly added APIs can be suggested by a simple keyword search in the documentation. More importantly, during our practice, we experienced that the challenges of API migration lie beyond migration suggestions, in aspects such as coping with parameter type changes in new API. Future research may aim to design automated approaches to address the challenges that are documented in this experience report.",
              "pageNumber": 503,
              "isPageNumberRoman": false
            },
            {
              "id": "3kRYVnQmf4gfCJKaiQGpWr",
              "type": "authorPaper",
              "text": "The Patch-Flow Method for Measuring Inner Source Collaboration",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/67njFKnNg6BjSnzLM71Lr3/2Of8xip4ODYotv9xuWma7t.pdf",
              "extraLocations": [],
              "authorNames": "Maximilian Capraro (Friedrich-Alexander-Universität Erlangen-Nürnberg), Michael Dorner (Friedrich-Alexander-Universität Erlangen-Nürnberg), Dirk Riehle (Friedrich-Alexander-Universität Erlangen-Nürnberg)",
              "abstract": "Inner source (IS) is the use of open source software development (SD) practices and the establishment of an open source-like culture within an organization. IS enables and requires developers to collaborate more than traditional SD methods such as plan-driven or agile development. To better understand IS, researchers and practitioners need to measure IS collaboration. However, there is no method yet for doing so. In this paper, we present a method for measuring IS collaboration by measuring the patch-flow within an organization. Patch-flow is the flow of code contributions across organizational boundaries such as project, organizational unit, or profit center boundaries. We evaluate our patch-flow measurement method using case study research with a software developing multi-industry company. By applying the method in the case organization, we evaluate its relevance and viability and discuss its usefulness. We found that about half (47.9%) of all code contributions constitute patch-flow between organizational units, almost all (42.2%) being between organizational units working on different products. Such significant patch-flow indicates high relevance of the patch-flow phenomenon and hence the method presented in this paper. Our patch-flow measurement method is the first of its kind to measure and quantify IS collaboration. It can serve as a base for further quantitative analyses of IS collaboration.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 The Patch-Flow Method for Measuring Inner Source Collaboration 1521125456866 Maximilian Capraro Friedrich-Alexander-Universität Erlangen-Nürnberg maximilian.capraro@fau.de Michael Dorner Friedrich-Alexander-Universität Erlangen-Nürnberg michael.dorner@fau.de Dirk Riehle Friedrich-Alexander-Universität Erlangen-Nürnberg dirk.riehle@fau.de inner source internal open source inner source measurement patch-flow open source open collaboration software development collaboration measurement inner source metrics Inner source (IS) is the use of open source software development (SD) practices and the establishment of an open source-like culture within an organization. IS enables and requires developers to collaborate more than traditional SD methods such as plan-driven or agile development. To better understand IS, researchers and practitioners need to measure IS collaboration. However, there is no method yet for doing so. In this paper, we present a method for measuring IS collaboration by measuring the patch-flow within an organization. Patch-flow is the flow of code contributions across organizational boundaries such as project, organizational unit, or profit center boundaries. We evaluate our patch-flow measurement method using case study research with a software developing multi-industry company. By applying the method in the case organization, we evaluate its relevance and viability and discuss its usefulness. We found that about half (47.9%) of all code contributions constitute patch-flow between organizational units, almost all (42.2%) being between organizational units working on different products. Such significant patch-flow indicates high relevance of the patch-flow phenomenon and hence the method presented in this paper. Our patch-flow measurement method is the first of its kind to measure and quantify IS collaboration. It can serve as a base for further quantitative analyses of IS collaboration.",
              "pageNumber": 515,
              "isPageNumberRoman": false
            },
            {
              "id": "01PiuYoyxwGDnmX8tHHG3R",
              "type": "authorPaper",
              "text": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf",
              "extraLocations": [],
              "authorNames": "Fiorella Zampetti (University of Sannio), Alexander Serebrenik (Eindhoven University of Technology), Massimiliano Di Penta (University of Sannio)",
              "abstract": "Technical Debt (TD) has been defined as \"code being not quite right yet\", and its presence is often self-admitted by developers through comments. The purpose of such comments is to keep track of TD and appropriately address it when possible. Building on a previous quantitative investigation by Maldonado et al. on the removal of self-admitted technical debt (SATD), in this paper we perform an in-depth quantitative and qualitative study of how SATD is addressed in five Java open source projects. On the one hand, we look at whether SATD is \"accidentally\" removed, and the extent to which the SATD removal is being documented. We found that that (i) between 20% and 50% of SATD comments are accidentally removed while entire classes or methods are dropped, (ii) 8% of the SATD removal is acknowledged in commit messages, and (iii) while most of the changes addressing SATD require complex source code changes, very often SATD is addressed by specific changes to method calls or conditionals. Our results can be used to better plan TD management or learn patterns for addressing certain kinds of TD and provide recommendations to developers.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective 1521128636828 Fiorella Zampetti University of Sannio fiorella.zampetti@unisannio.it Alexander Serebrenik Eindhoven University of Technology a.serebrenik@tue.nl Massimiliano Di Penta University of Sannio dipenta@unisannio.it Software and its engineering Software evolution Technical Debt (TD) has been defined as \"code being not quite right yet\", and its presence is often self-admitted by developers through comments. The purpose of such comments is to keep track of TD and appropriately address it when possible. Building on a previous quantitative investigation by Maldonado et al. on the removal of self-admitted technical debt (SATD), in this paper we perform an in-depth quantitative and qualitative study of how SATD is addressed in five Java open source projects. On the one hand, we look at whether SATD is \"accidentally\" removed, and the extent to which the SATD removal is being documented. We found that that (i) between 20% and 50% of SATD comments are accidentally removed while entire classes or methods are dropped, (ii) 8% of the SATD removal is acknowledged in commit messages, and (iii) while most of the changes addressing SATD require complex source code changes, very often SATD is addressed by specific changes to method calls or conditionals. Our results can be used to better plan TD management or learn patterns for addressing certain kinds of TD and provide recommendations to developers.",
              "pageNumber": 526,
              "isPageNumberRoman": false
            },
            {
              "id": "3o66WyIgOeb4OOLHm7U7IJ",
              "type": "authorPaper",
              "text": "RestMule: Enabling Resilient Clients for Remote APIs",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf",
              "extraLocations": [],
              "authorNames": "Beatriz A. Sanchez (University of York), Konstantinos Barmpis (University of York), Patrick Neubauer (University of York), Richard F. Paige (University of York), Dimitrios S. Kolovos (University of York)",
              "abstract": "Mining data from remote repositories, such as GitHub and StackExchange, involves the execution of requests that can easily reach the limitations imposed by the respective APIs to shield their services from overload and abuse. Therefore, data mining clients are left alone to deal with such protective service policies which usually involves an extensive amount of manual implementation effort. In this work we present RestMule, a framework for handling various service policies, such as limited number of requests within a period of time and multi-page responses, by generating resilient clients that are able to handle request rate limits, network failures, response caching, and paging in a graceful and transparent manner. As a result, RestMule clients generated from OpenAPI specifications (i.e. standardized REST API descriptors), are suitable for intensive data-fetching scenarios. We evaluate our framework by reproducing an existing repository mining use case and comparing the results produced by employing a popular hand-written client and a RestMule client.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 RestMule: Enabling Resilient Clients for Remote APIs 1521221676317 Beatriz A. Sanchez University of York basp500@york.ac.uk Konstantinos Barmpis University of York konstantinos.barmpis@york.ac.uk Patrick Neubauer University of York patrick.neubauer@york.ac.uk Richard F. Paige University of York richard.paige@york.ac.uk Dimitrios S. Kolovos University of York dimitris.kolovos@york.ac.uk Resilience OpenAPI Specification HTTP API Clients Mining data from remote repositories, such as GitHub and StackExchange, involves the execution of requests that can easily reach the limitations imposed by the respective APIs to shield their services from overload and abuse. Therefore, data mining clients are left alone to deal with such protective service policies which usually involves an extensive amount of manual implementation effort. In this work we present RestMule, a framework for handling various service policies, such as limited number of requests within a period of time and multi-page responses, by generating resilient clients that are able to handle request rate limits, network failures, response caching, and paging in a graceful and transparent manner. As a result, RestMule clients generated from OpenAPI specifications (i.e. standardized REST API descriptors), are suitable for intensive data-fetching scenarios. We evaluate our framework by reproducing an existing repository mining use case and comparing the results produced by employing a popular hand-written client and a RestMule client.",
              "pageNumber": 537,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "Technical Papers - Modeling and Prediction ",
          "lineItems": [
            {
              "id": "4dAgj6VCv208owUKcTM1da",
              "type": "authorPaper",
              "text": "Deep Learning Similarities from Different Representations of Source Code",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf",
              "extraLocations": [],
              "authorNames": "Michele Tufano (College of William and Mary), Cody Watson (College of William and Mary), Gabriele Bavota (Università della Svizzera italiana (USI)), Massimiliano Di Penta (University of Sannio), Martin White (College of William and Mary), Denys Poshyvanyk (College of William and Mary)",
              "abstract": "Assessing the similarity between code components plays a pivotal role in a number of Software Engineering (SE) tasks, such as clone detection, impact analysis, refactoring, etc. Code similarity is generally measured by relying on manually defined or hand-crafted features, e.g., by analyzing the overlap among identifiers or comparing the Abstract Syntax Trees of two code components. These features represent a best guess at what SE researchers can utilize to exploit and reliably assess code similarity for a given task. Recent work has shown, when using a stream of identifiers to represent the code, that Deep Learning (DL) can effectively replace manual feature engineering for the task of clone detection. However, source code can be represented at different levels of abstraction: identifiers, Abstract Syntax Trees, Control Flow Graphs, and Bytecode. We conjecture that each code representation can provide a different, yet orthogonal view of the same code fragment, thus, enabling a more reliable detection of similarities in code. In this paper, we demonstrate how SE tasks can benefit from a DL-based approach, which can automatically learn code similarities from different representations.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Deep Learning Similarities from Different Representations of Source Code 1521250823074 Michele Tufano College of William and Mary mtufano@cs.wm.edu Cody Watson College of William and Mary cawatson@cs.wm.edu Gabriele Bavota Università della Svizzera italiana (USI) gabriele.bavota@usi.ch Massimiliano Di Penta University of Sannio dipenta@unisannio.it Martin White College of William and Mary mgwhite@cs.wm.edu Denys Poshyvanyk College of William and Mary denys@cs.wm.edu deep learning code similarities neural networks Assessing the similarity between code components plays a pivotal role in a number of Software Engineering (SE) tasks, such as clone detection, impact analysis, refactoring, etc. Code similarity is generally measured by relying on manually defined or hand-crafted features, e.g., by analyzing the overlap among identifiers or comparing the Abstract Syntax Trees of two code components. These features represent a best guess at what SE researchers can utilize to exploit and reliably assess code similarity for a given task. Recent work has shown, when using a stream of identifiers to represent the code, that Deep Learning (DL) can effectively replace manual feature engineering for the task of clone detection. However, source code can be represented at different levels of abstraction: identifiers, Abstract Syntax Trees, Control Flow Graphs, and Bytecode. We conjecture that each code representation can provide a different, yet orthogonal view of the same code fragment, thus, enabling a more reliable detection of similarities in code. In this paper, we demonstrate how SE tasks can benefit from a DL-based approach, which can automatically learn code similarities from different representations.",
              "pageNumber": 542,
              "isPageNumberRoman": false
            },
            {
              "id": "37m7tCt95miVfRGNKq2LdE",
              "type": "authorPaper",
              "text": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf",
              "extraLocations": [],
              "authorNames": "Tim Menzies (North Carolina State University), Suvodeep Majumder (North Carolina State University), Nikhila Balaji (North Carolina State University), Katie Brey (North Carolina State University), Wei Fu (North Carolina State University)",
              "abstract": "Deep learning methods are useful for high-dimensional data and are becoming widely used in many areas of software engineering. Deep learners utilizes extensive computational power and can take a long time to train– making it difficult to widely validate and repeat and improve their results. Further, they are not the best solution in all domains. For example, recent results show that for finding related Stack Overflow posts, a tuned SVM performs similarly to a deep learner, but is significantly faster to train.This paper extends that recent result by clustering the dataset, then tuning every learners within each cluster. This approach is over 500 times faster than deep learning (and over 900 times faster if we use all the cores on a standard laptop computer). Significantly, this faster approach generates classifiers nearly as good (within 2% F1 Score) as the much slower deep learning method. Hence we recommend this faster methods since it is much easier to reproduce and utilizes far fewer CPU resources. More generally, we recommend that before researchers release research results, that they compare their supposedly sophisticated methods against simpler alternatives(e.g applying simpler learners to build local models).",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow) 1521228270188 Tim Menzies North Carolina State University tim@menzies.us Suvodeep Majumder North Carolina State University smajumd3@ncsu.edu Nikhila Balaji North Carolina State University nbalaji@ncsu.edu Katie Brey North Carolina State University kebrey@ncsu.edu Wei Fu North Carolina State University wfu@ncsu.edu Deep learning parameter tuning DE KNN local versus global K-Means SVM CNN Deep learning methods are useful for high-dimensional data and are becoming widely used in many areas of software engineering. Deep learners utilizes extensive computational power and can take a long time to train– making it difficult to widely validate and repeat and improve their results. Further, they are not the best solution in all domains. For example, recent results show that for finding related Stack Overflow posts, a tuned SVM performs similarly to a deep learner, but is significantly faster to train.This paper extends that recent result by clustering the dataset, then tuning every learners within each cluster. This approach is over 500 times faster than deep learning (and over 900 times faster if we use all the cores on a standard laptop computer). Significantly, this faster approach generates classifiers nearly as good (within 2% F1 Score) as the much slower deep learning method. Hence we recommend this faster methods since it is much easier to reproduce and utilizes far fewer CPU resources. More generally, we recommend that before researchers release research results, that they compare their supposedly sophisticated methods against simpler alternatives(e.g applying simpler learners to build local models).",
              "pageNumber": 554,
              "isPageNumberRoman": false
            },
            {
              "id": "15rLCvvlxHv4eC4RGHAAtc",
              "type": "authorPaper",
              "text": "Studying the Relationship between Exception Handling Practices and Post-Release Defects",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YGRIbJjMeNQAV17b2ymJ9/yKCiY9IwfDACgeJQbjY4L.pdf",
              "extraLocations": [],
              "authorNames": "Guilherme B. de Pádua (Concordia University), Weiyi Shang (Concordia University)",
              "abstract": "Modern programming languages, such as Java and C#, typically provide features that handle exceptions. These features separate error-handling code from regular source code and aim to assist in the practice of software comprehension and maintenance. Nevertheless, their misuse can still cause reliability degradation or even catastrophic software failures. Prior studies on exception handling revealed the suboptimal practices of the exception handling flows and the prevalence of their anti-patterns. However, little is known about the relationship between exception handling practices and software quality. In this work, we investigate the relationship between software quality (measured by the probability of having post-release defects) and: (i) exception flow characteristics and (ii) 17 exception handling anti-patterns. We perform a case study on three Java and C# open-source projects. By building statistical models of the probability of post-release defects using traditional software metrics and metrics that are associated with exception handling practice, we study whether exception flow characteristics and exception handling anti-patterns have a statistically significant relationship with post-release defects. We find that exception flow characteristics in Java projects have a significant relationship with post-release defects. In addition, although the majority of the exception handing anti-patterns are not significant in the models, there exist anti-patterns that can provide significant explanatory power to the probability of post-release defects. Therefore, development teams should consider allocating more resources to improving their exception handling practices and avoid the anti-patterns that are found to have a relationship with post-release defects. Our findings also highlight the need for techniques that assist in handling exceptions in the software development practice.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Studying the Relationship between Exception Handling Practices and Post-Release Defects 1521237084664 Guilherme B. de Pádua Concordia University g_bicalh@encs.concordia.ca Weiyi Shang Concordia University shang@encs.concordia.ca Exception Handling Software Quality Empirical Software Engineering Modern programming languages, such as Java and C#, typically provide features that handle exceptions. These features separate error-handling code from regular source code and aim to assist in the practice of software comprehension and maintenance. Nevertheless, their misuse can still cause reliability degradation or even catastrophic software failures. Prior studies on exception handling revealed the suboptimal practices of the exception handling flows and the prevalence of their anti-patterns. However, little is known about the relationship between exception handling practices and software quality. In this work, we investigate the relationship between software quality (measured by the probability of having post-release defects) and: (i) exception flow characteristics and (ii) 17 exception handling anti-patterns. We perform a case study on three Java and C# open-source projects. By building statistical models of the probability of post-release defects using traditional software metrics and metrics that are associated with exception handling practice, we study whether exception flow characteristics and exception handling anti-patterns have a statistically significant relationship with post-release defects. We find that exception flow characteristics in Java projects have a significant relationship with post-release defects. In addition, although the majority of the exception handing anti-patterns are not significant in the models, there exist anti-patterns that can provide significant explanatory power to the probability of post-release defects. Therefore, development teams should consider allocating more resources to improving their exception handling practices and avoid the anti-patterns that are found to have a relationship with post-release defects. Our findings also highlight the need for techniques that assist in handling exceptions in the software development practice.",
              "pageNumber": 564,
              "isPageNumberRoman": false
            },
            {
              "id": "1IoFWahnxbpwmaHuqX1BF6",
              "type": "authorPaper",
              "text": "Analyzing Conflict Predictors in Open-Source Java Projects",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf",
              "extraLocations": [],
              "authorNames": "Paola Accioly (Federal University of Pernambuco), Paulo Borba (Federal University of Pernambuco), Léuson Silva (Federal University of Pernambuco), Guilherme Cavalcanti (Federal University of Pernambuco)",
              "abstract": "In collaborative development environments integration conflicts occur frequently. To alleviate this problem, different awareness tools have been proposed to alert developers about potential conflicts before they become too complex. However, there is not much empirical evidence supporting the strategies used by these tools. Learning about what types of changes most likely lead to conflicts might help to derive more appropriate requirements for early conflict detection, and suggest improvements to existing conflict detection tools. To bring such evidence, in this paper we analyze the effectiveness of two types of code changes as conflict predictors. Namely, editions to the same method, and editions to directly dependent methods. We conduct an empirical study analyzing part of the development history of 45 Java projects from GitHub and Travis CI, including 5,647 merge scenarios, to compute the precision and recall for the conflict predictors aforementioned. Our results indicate that the predictors combined have a precision of 57.99% and a recall of 82.67%. Moreover, we conduct a manual analysis which provides insights about strategies that could further increase the precision and the recall.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Analyzing Conflict Predictors in Open-Source Java Projects 1521241515478 Paola Accioly Federal University of Pernambuco prga@cin.ufpe.br Paulo Borba Federal University of Pernambuco phmb@cin.ufpe.br Léuson Silva Federal University of Pernambuco lmps2@cin.ufpe.br Guilherme Cavalcanti Federal University of Pernambuco gjcc@cin.ufpe.br Collaborative development awareness tools conflict predictors precision and recall In collaborative development environments integration conflicts occur frequently. To alleviate this problem, different awareness tools have been proposed to alert developers about potential conflicts before they become too complex. However, there is not much empirical evidence supporting the strategies used by these tools. Learning about what types of changes most likely lead to conflicts might help to derive more appropriate requirements for early conflict detection, and suggest improvements to existing conflict detection tools. To bring such evidence, in this paper we analyze the effectiveness of two types of code changes as conflict predictors. Namely, editions to the same method, and editions to directly dependent methods. We conduct an empirical study analyzing part of the development history of 45 Java projects from GitHub and Travis CI, including 5,647 merge scenarios, to compute the precision and recall for the conflict predictors aforementioned. Our results indicate that the predictors combined have a precision of 57.99% and a recall of 82.67%. Moreover, we conduct a manual analysis which provides insights about strategies that could further increase the precision and the recall.",
              "pageNumber": 576,
              "isPageNumberRoman": false
            },
            {
              "id": "4TsBK5abdjBHJkeipiRQIB",
              "type": "authorPaper",
              "text": "Bayesian Hierarchical Modelling for Tailoring Metric Thresholds",
              "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/380KUb1utXnZLErlFBBPxZ/6tPKF62ccqWlVS7oF9rRSc.pdf",
              "extraLocations": [],
              "authorNames": "Neil A. Ernst (University of Victoria)",
              "abstract": "Software is highly contextual. While there are cross-cutting 'global' lessons, individual software projects exhibit many 'local' properties. This data heterogeneity makes drawing local conclusions from global data dangerous. A key research challenge is to construct locally accurate prediction models that are informed by global characteristics and data volumes. Previous work has tackled this problem using clustering and transfer learning approaches, which identify locally similar characteristics. This paper applies a simpler approach known as Bayesian hierarchical modeling. We show that hierarchical modeling supports cross-project comparisons, while preserving local context. To demonstrate the approach, we conduct a conceptual replication of an existing study on setting software metrics thresholds. Our emerging results show our hierarchical model reduces model prediction error compared to a global approach by up to 50%.",
              "searchText": "2018 ACM/IEEE 15th International Conference on Mining Software Repositories MSR 2018 Bayesian Hierarchical Modelling for Tailoring Metric Thresholds 1521181910173 Neil A. Ernst University of Victoria nernst@uvic.ca hierarchical models metrics thresholds probabilistic programming Software is highly contextual. While there are cross-cutting 'global' lessons, individual software projects exhibit many 'local' properties. This data heterogeneity makes drawing local conclusions from global data dangerous. A key research challenge is to construct locally accurate prediction models that are informed by global characteristics and data volumes. Previous work has tackled this problem using clustering and transfer learning approaches, which identify locally similar characteristics. This paper applies a simpler approach known as Bayesian hierarchical modeling. We show that hierarchical modeling supports cross-project comparisons, while preserving local context. To demonstrate the approach, we conduct a conceptual replication of an existing study on setting software metrics thresholds. Our emerging results show our hierarchical model reduces model prediction error compared to a global approach by up to 50%.",
              "pageNumber": 587,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems",
      "acronym": "SEAMS",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1slRgvtc0MVj9lJQYFFtZP/7HfErbsmZ9TQi7NXMEFfQq.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/55E9UEcBP25sUDHHp3Sc9S/6vGBHjQjRU9AYi8vey60PF.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/EpBSYmC0dsaJtSxiYPBT1/6TnS4eW1vVrzngKwqaw0yb.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6PFVhG7jzABw2ejdHlkbvk/4yUTwgiQJpTmHeBaMhaNjJ.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/53qdVcQDUEolNsuREvue6h/WmOs40TtdTssFs7xsXXBA.pdf",
          "extraLocations": [],
          "pageNumber": 9,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from SEAMS 2018 Chairs",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/FdSbeHrNQXO7vTAxIfe3A/7dgX83XtjdQKarbfsHpRYb.pdf",
          "extraLocations": [],
          "pageNumber": 12,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/9xitgyp1PBHrA607gRS9C/41U985wcVHu4MKwgy7ulI3.pdf",
          "extraLocations": [],
          "pageNumber": 14,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/Y5Q714uC68cswrmIWgfbB/6cM2pKAyKMqjWnuD80XFqS.pdf",
          "extraLocations": [],
          "pageNumber": 15,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_REVIEWERS_LIST",
          "text": "Artifact Evaluation Committee",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/570iFuvoqw7jXdIe7ZXoiY/5kNOJpRx6qr1ip3Lf7RQix.pdf",
          "extraLocations": [],
          "pageNumber": 17,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Doctoral Projects Committee",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/28RwOiNS3VCygHQ1ebYPnJ/1Kw7EKz2vI2yYPVRvOrcqD.pdf",
          "extraLocations": [],
          "pageNumber": 18,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/511FnHIC1QCUQ7wuadqx2U/1W13yH6UDOGIDwHGJv9lSN.pdf",
          "extraLocations": [],
          "pageNumber": 19,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LONP_COMMITTEE_PHOTOS",
          "text": "Self Adaptive Software Systems are Essential for the Internet of Things",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4AoOwZxD1HwFE2BkUE1k5m/FJ70FUdOsCoJOzR7m5smk.pdf",
          "extraLocations": [],
          "pageNumber": 21,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/E3MFmLQWgXPXiP0a6hZFi/DbMaZ9pMbFcBuzHyaSqh2.pdf",
          "extraLocations": [],
          "pageNumber": 225,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6tS48L9X9UcMjIxnsAA7MY/4XEdMJ9LDxxSlWNh0UZGmZ.pdf",
          "extraLocations": [],
          "pageNumber": 228,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Qualities & Verification ",
          "lineItems": [
            {
              "id": "694hkovsBHSYrMnGCb9Iaa",
              "type": "authorPaper",
              "text": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf",
              "extraLocations": [],
              "authorNames": "Aimee Borda (Trinity College Dublin), Liliana Pasquale (University College Dublin), Vasileios Koutavas (Trinity College Dublin), Bashar Nuseibeh (Open University)",
              "abstract": "Cyber-Physical Systems (CPSs) must often self-adapt to respond to changes in their operating environment. However, using formal verification techniques to provide assurances that critical requirements are satisfied can be computationally intractable due to the large state space of self-adaptive CPSs. In this paper we propose a novel language, Adaptive CSP, to model self-adaptive CPSs modularly and provide a technique to support compositional verification of such systems. Our technique allows system designers to identify (a subset of) the CPS components that can affect satisfaction of given requirements, and define adaptation procedures of these components to preserve the requirements in the face of changes to the system's operating environment. System designers can then use Adaptive CSP to represent the system including potential self-adaptation procedures. The requirements can then be verified only against relevant components, independently from the rest of the system, thus enabling computationally tractable verification. Our technique enables the use of existing formal verification technology to check requirement satisfaction. We illustrate this through the use of FDR, a refinement checking tool. To achieve this, we provide an adequate translation from a subset of Adaptive CSP to the language of FDR. Our technique allows system designers to identify alternative adaptation procedures, potentially affecting different sets of CPS components, for each requirement, and compare them based on correctness and optimality. We demonstrate the feasibility of our approach using a substantive example of a smart art gallery. Our results show that our technique reduces the computational complexity of verifying self-adaptive CPSs and can support the design of adaptation procedures.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Compositional Verification of Self-Adaptive Cyber-Physical Systems 1522606600992 Aimee Borda Trinity College Dublin bordaa@tcd.ie Liliana Pasquale University College Dublin Liliana.Pasquale@ucd.ie Vasileios Koutavas Trinity College Dublin Vasileios.Koutavas@scss.tcd.ie Bashar Nuseibeh Open University b.nuseibeh@open.ac.uk Self Adaptive Systems Verification Process Calculi Cyber-Physical Systems (CPSs) must often self-adapt to respond to changes in their operating environment. However, using formal verification techniques to provide assurances that critical requirements are satisfied can be computationally intractable due to the large state space of self-adaptive CPSs. In this paper we propose a novel language, Adaptive CSP, to model self-adaptive CPSs modularly and provide a technique to support compositional verification of such systems. Our technique allows system designers to identify (a subset of) the CPS components that can affect satisfaction of given requirements, and define adaptation procedures of these components to preserve the requirements in the face of changes to the system's operating environment. System designers can then use Adaptive CSP to represent the system including potential self-adaptation procedures. The requirements can then be verified only against relevant components, independently from the rest of the system, thus enabling computationally tractable verification. Our technique enables the use of existing formal verification technology to check requirement satisfaction. We illustrate this through the use of FDR, a refinement checking tool. To achieve this, we provide an adequate translation from a subset of Adaptive CSP to the language of FDR. Our technique allows system designers to identify alternative adaptation procedures, potentially affecting different sets of CPS components, for each requirement, and compare them based on correctness and optimality. We demonstrate the feasibility of our approach using a substantive example of a smart art gallery. Our results show that our technique reduces the computational complexity of verifying self-adaptive CPSs and can support the design of adaptation procedures.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            },
            {
              "id": "VaFggryX0SiG2naz8Bsbi",
              "type": "authorPaper",
              "text": "DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-functional Requirements Trade-Off",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7q5F99vJVOh1uAmp2uEWz7/1Nki1M3SjX06D2rphANLXt.pdf",
              "extraLocations": [],
              "authorNames": "Ross Edwards (Aston University), Nelly Bencomo (Aston University)",
              "abstract": "Self-adaptive systems (SAS) are being deployed in environments of increasing uncertainty, in which they must adapt reconfiguring themselves in such a way as to continuously fulfil multiple objectives according to changes in the environment. The trade-offs between a system's non-functional requirements (NFRs) need to be done to maximise a system's utility (or equity) with regards to the NFRs, and are key drivers of the adaptation process. Decision-making for multiple objective scenarios frequently uses utility functions as measures of satisfaction of both individual and sets of NFRs, usually resulting in a weighted sum of the different objectives. However, while adaptations are performed autonomously, the methods for choosing an adaptation are based on the criteria of human expert(s), who are susceptible to bias, subjectivity and/or lack of quantitativeness in their judgements. Thus, there is a need for a non-subjective and quantitative approach to reason about NFR satisfaction in multi-objective self-adaptation without relying on human expertise. Furthermore, human biases can also apply to the relationships between two or more NFRs (e.g. how much the satisfaction of one NFR affects the satisfaction of another), resulting in emergent inaccuracies affecting the decision(s) chosen. This paper presents DeSiRE (Degrees of Satisfaction of NFRs), a purely automated objective statistical approach to quantifying the extent that a requirement is violated or satisfied, and its application to further explore the trade-offs between NFRs in decision making. Experiments using case studies have positive results showing the identification of a Pareto optimal set of candidate solutions, in addition to a ranking of these configurations by their satisfaction of each NFR.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-functional Requirements Trade-Off 1521544013516 Ross Edwards Aston University edwarrj2@aston.ac.uk Nelly Bencomo Aston University nelly@acm.org non-functional requirements self-adaptative systems multi-criteria decison making Self-adaptive systems (SAS) are being deployed in environments of increasing uncertainty, in which they must adapt reconfiguring themselves in such a way as to continuously fulfil multiple objectives according to changes in the environment. The trade-offs between a system's non-functional requirements (NFRs) need to be done to maximise a system's utility (or equity) with regards to the NFRs, and are key drivers of the adaptation process. Decision-making for multiple objective scenarios frequently uses utility functions as measures of satisfaction of both individual and sets of NFRs, usually resulting in a weighted sum of the different objectives. However, while adaptations are performed autonomously, the methods for choosing an adaptation are based on the criteria of human expert(s), who are susceptible to bias, subjectivity and/or lack of quantitativeness in their judgements. Thus, there is a need for a non-subjective and quantitative approach to reason about NFR satisfaction in multi-objective self-adaptation without relying on human expertise. Furthermore, human biases can also apply to the relationships between two or more NFRs (e.g. how much the satisfaction of one NFR affects the satisfaction of another), resulting in emergent inaccuracies affecting the decision(s) chosen. This paper presents DeSiRE (Degrees of Satisfaction of NFRs), a purely automated objective statistical approach to quantifying the extent that a requirement is violated or satisfied, and its application to further explore the trade-offs between NFRs in decision making. Experiments using case studies have positive results showing the identification of a Pareto optimal set of candidate solutions, in addition to a ranking of these configurations by their satisfaction of each NFR.",
              "pageNumber": 12,
              "isPageNumberRoman": false
            },
            {
              "id": "5kTwx0N44ac5ReAhUCpJgp",
              "type": "authorPaper",
              "text": "RE-STORM: Mapping the Decision-Making Problem and Non-functional Requirements Trade-Off to Partially Observable Markov Decision Processes",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1AplVy6AlFdsLXU7K9WoG4/2ESFN2MR9Vb4xC6FlAUfF.pdf",
              "extraLocations": [],
              "authorNames": "Luis Hernan Garcia Paucar (Aston University), Nelly Bencomo (Aston University)",
              "abstract": "Different model-based techniques have been used to model and underpin requirements management and decision-making strategies under uncertainty for self-adaptive Systems (SASs). The models specify how the partial or total fulfillment of non-functional requirements (NFRs) drive the decision-making process at runtime. There has been considerable progress in this research area. How-ever, precarious progress has been made by the use of models at runtime using machine learning to deal with uncertainty and support decision-making based on new evidence learned during execution. New techniques are needed to systematically revise the current model and the satisficement of its NFRs when empirical evidence becomes available from the monitoring infrastructure. In this paper, we frame the decision-making problem and trade-off specifications of NFRs in terms of Partially Observable Markov Decision Processes (POMDPs) models. The mathematical probabilistic framework based on the concept of POMDPs serves as a runtime model that can be updated with new learned evidence to support reasoning about partial satisficement of NFRs and their trade-o under the new changes in the environment. In doing so, we demonstrate how our novel approach RE-STORM underpins reasoning over uncertainty and dynamic changes during the system's execution.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 RE-STORM: Mapping the Decision-Making Problem and Non-functional Requirements Trade-Off to Partially Observable Markov Decision Processes 1522843685353 Luis Hernan Garcia Paucar Aston University garciapl@aston.ac.uk Nelly Bencomo Aston University nelly@acm.org Requirements specification self-adaptation decision making uncertainty POMDPs bayesian decision theory Different model-based techniques have been used to model and underpin requirements management and decision-making strategies under uncertainty for self-adaptive Systems (SASs). The models specify how the partial or total fulfillment of non-functional requirements (NFRs) drive the decision-making process at runtime. There has been considerable progress in this research area. How-ever, precarious progress has been made by the use of models at runtime using machine learning to deal with uncertainty and support decision-making based on new evidence learned during execution. New techniques are needed to systematically revise the current model and the satisficement of its NFRs when empirical evidence becomes available from the monitoring infrastructure. In this paper, we frame the decision-making problem and trade-off specifications of NFRs in terms of Partially Observable Markov Decision Processes (POMDPs) models. The mathematical probabilistic framework based on the concept of POMDPs serves as a runtime model that can be updated with new learned evidence to support reasoning about partial satisficement of NFRs and their trade-o under the new changes in the environment. In doing so, we demonstrate how our novel approach RE-STORM underpins reasoning over uncertainty and dynamic changes during the system's execution.",
              "pageNumber": 19,
              "isPageNumberRoman": false
            },
            {
              "id": "42bTZkDEGCGcdeGdA60BmM",
              "type": "authorPaper",
              "text": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf",
              "extraLocations": [],
              "authorNames": "Gereon Weiss (Fraunhofer ESK), Philipp Schleiss (Fraunhofer ESK), Daniel Schneider (Fraunhofer IESE), Mario Trapp (Fraunhofer IESE)",
              "abstract": "Modern cyber-physical systems (CPS) integrate more and more powerful computing power to master novel applications and adapt to changing situations. A striking example is the recent progression in the automotive market towards autonomous driving. Powerful artificial intelligent algorithms must be executed on high performant parallelized platforms. However, this cannot be employed in a safe way, as the platforms stemming from the consumer electronics (CE) world still lack required dependability and safety mechanisms. In this paper, we present a concept to integrate undependable selfadaptive subsystems into safety-critical environments. For this, we introduce self-adaptation envelopes which manage undependable system parts and integrate within a dependable system. We evaluate our approach by a comprehensive case study of autonomous driving. Thereby, we show that the potential failures of the AUTOSAR Adaptive platform as exemplary undependable system can be handled by our concept. In overall, we outline a way of integrating inherently undependable adaptive systems into safety-critical CPS.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments 1521382470479 Gereon Weiss Fraunhofer ESK gereon.weiss@esk.fraunhofer.de Philipp Schleiss Fraunhofer ESK philipp.schleiss@esk.fraunhofer.de Daniel Schneider Fraunhofer IESE daniel.scheider@iese.fraunhofer.de Mario Trapp Fraunhofer IESE mario.trapp@iese.fraunhofer.de Self-Adaptive Cyber-Physical Systems Autonomous Driving AU-TOSAR Adaptive Modern cyber-physical systems (CPS) integrate more and more powerful computing power to master novel applications and adapt to changing situations. A striking example is the recent progression in the automotive market towards autonomous driving. Powerful artificial intelligent algorithms must be executed on high performant parallelized platforms. However, this cannot be employed in a safe way, as the platforms stemming from the consumer electronics (CE) world still lack required dependability and safety mechanisms. In this paper, we present a concept to integrate undependable selfadaptive subsystems into safety-critical environments. For this, we introduce self-adaptation envelopes which manage undependable system parts and integrate within a dependable system. We evaluate our approach by a comprehensive case study of autonomous driving. Thereby, we show that the potential failures of the AUTOSAR Adaptive platform as exemplary undependable system can be handled by our concept. In overall, we outline a way of integrating inherently undependable adaptive systems into safety-critical CPS.",
              "pageNumber": 26,
              "isPageNumberRoman": false
            },
            {
              "id": "72V60oXYLlQjMEpkDy5zpY",
              "type": "authorPaper",
              "text": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf",
              "extraLocations": [],
              "authorNames": "Wito Delnat (KU Leuven), Eddy Truyen (KU Leuven), Ansar Rafique (KU Leuven), Dimitri Van Landuyt (KU Leuven), Wouter Joosen (KU Leuven)",
              "abstract": "Although a considerable amount of research exists on auto-scaling of database clusters, the design of an effective auto-scaling strategy requires fine-grained tailoring towards the specific application scenario. This paper presents an easy-to-use and extensible workbench exemplar, named K8-Scalar (Kube-Scalar), which allows researchers to implement and evaluate different self-adaptive approaches to autoscaling container-orchestrated services. The workbench is based on Docker, a popular technology for easing the deployment of containerized software that also has been positioned as an enabler for reproducible research. The workbench also relies on a container orchestration framework: Kubernetes (K8s), the de-facto industry standard for orchestration and monitoring of elastically scalable container-based services. Finally, it integrates and extends Scalar, a generic testbed for evaluating the scalability of large-scale systems with support for evaluating the performance of autoscalers for database clusters. The paper discusses (i) the architecture and implementation of K8-Scalar and how a particular autoscaler can be plugged in, (ii) sketches the design of a Riemann-based autoscaler for database clusters, (iii) illustrates how to design, setup and analyze a series of experiments to configure and evaluate the performance of this autoscaler for a particular database (i.e., Cassandra) and a particular workload type, and (iv) validates the effectiveness of K8-Scalar as a workbench for accurately comparing the performance of different auto-scaling strategies.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters 1522668739774 Wito Delnat KU Leuven wito.delnat@gmail.com Eddy Truyen KU Leuven eddy.truyen@cs.kuleuven.be Ansar Rafique KU Leuven ansar.rafique@cs.kuleuven.be Dimitri Van Landuyt KU Leuven dimitri.vanlanduyt@cs.kuleuven.be Wouter Joosen KU Leuven wouter.joosen@cs.kuleuven.be Container orchestration Autoscaling Experimentation exemplar Although a considerable amount of research exists on auto-scaling of database clusters, the design of an effective auto-scaling strategy requires fine-grained tailoring towards the specific application scenario. This paper presents an easy-to-use and extensible workbench exemplar, named K8-Scalar (Kube-Scalar), which allows researchers to implement and evaluate different self-adaptive approaches to autoscaling container-orchestrated services. The workbench is based on Docker, a popular technology for easing the deployment of containerized software that also has been positioned as an enabler for reproducible research. The workbench also relies on a container orchestration framework: Kubernetes (K8s), the de-facto industry standard for orchestration and monitoring of elastically scalable container-based services. Finally, it integrates and extends Scalar, a generic testbed for evaluating the scalability of large-scale systems with support for evaluating the performance of autoscalers for database clusters. The paper discusses (i) the architecture and implementation of K8-Scalar and how a particular autoscaler can be plugged in, (ii) sketches the design of a Riemann-based autoscaler for database clusters, (iii) illustrates how to design, setup and analyze a series of experiments to configure and evaluate the performance of this autoscaler for a particular database (i.e., Cassandra) and a particular workload type, and (iv) validates the effectiveness of K8-Scalar as a workbench for accurately comparing the performance of different auto-scaling strategies.",
              "pageNumber": 33,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Uncertainty ",
          "lineItems": [
            {
              "id": "6J4wbckHJ3ms6fh4LdVBUC",
              "type": "authorPaper",
              "text": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf",
              "extraLocations": [],
              "authorNames": "Cody Kinneer (Carnegie Mellon University), Zack Coker (Carnegie Mellon University), Jiacheng Wang (Dickinson College), David Garlan (Carnegie Mellon University), Claire Le Goues (Carnegie Mellon University)",
              "abstract": "Many software systems operate in environments where change and uncertainty are the rule, rather than exceptions. Techniques for self-adaptation allow these systems to automatically respond to environmental changes, yet they do not handle changes to the adaptive system itself, such as the addition or removal of adaptation tactics. Instead, changes in a self-adaptive system often require a human planner to redo an expensive planning process to allow the system to continue satisfying its quality requirements under different conditions; automated techniques typically must replan from scratch. We propose to address this problem by reusing prior planning knowledge to adapt in the face of unexpected situations. We present a planner based on genetic programming that reuses existing plans. While reuse of material in genetic algorithms has recently applied successfully in the area of automated program repair, we find that naively reusing existing plans for self-* planning actually results in a loss of utility. Furthermore, we propose a series of techniques to lower the costs of reuse, allowing genetic techniques to leverage existing information to improve planning utility when replanning for unexpected changes.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search 1522454024754 Cody Kinneer Carnegie Mellon University ckinneer@cs.cmu.edu Zack Coker Carnegie Mellon University zfc@cs.cmu.edu Jiacheng Wang Dickinson College wangjia@dickinson.edu David Garlan Carnegie Mellon University garlan@cs.cmu.edu Claire Le Goues Carnegie Mellon University clegoues@cs.cmu.edu plan reuse self-* systems planning uncertainty genetic programming cloud services Many software systems operate in environments where change and uncertainty are the rule, rather than exceptions. Techniques for self-adaptation allow these systems to automatically respond to environmental changes, yet they do not handle changes to the adaptive system itself, such as the addition or removal of adaptation tactics. Instead, changes in a self-adaptive system often require a human planner to redo an expensive planning process to allow the system to continue satisfying its quality requirements under different conditions; automated techniques typically must replan from scratch. We propose to address this problem by reusing prior planning knowledge to adapt in the face of unexpected situations. We present a planner based on genetic programming that reuses existing plans. While reuse of material in genetic algorithms has recently applied successfully in the area of automated program repair, we find that naively reusing existing plans for self-* planning actually results in a loss of utility. Furthermore, we propose a series of techniques to lower the costs of reuse, allowing genetic techniques to leverage existing information to improve planning utility when replanning for unexpected changes.",
              "pageNumber": 40,
              "isPageNumberRoman": false
            },
            {
              "id": "3vwZiVk8OZmRii9cBewiAu",
              "type": "authorPaper",
              "text": "Uncertainty Reduction in Self-Adaptive Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf",
              "extraLocations": [],
              "authorNames": "Gabriel A. Moreno (Software Engineering Institute), Javier Cámara (Carnegie Mellon University), David Garlan (Carnegie Mellon University), Mark Klein (Software Engineering Institute)",
              "abstract": "Self-adaptive systems depend on models of themselves and their environment to decide whether and how to adapt, but these models are often affected by uncertainty. While current adaptation decision approaches are able to model and reason about this uncertainty, they do not consider ways to reduce it. This presents an opportunity for improving decision-making in self-adaptive systems, because reducing uncertainty results in a better characterization of the current and future states of the system and the environment (at some cost), which in turn supports making better adaptation decisions. We propose uncertainty reduction as the natural next step in uncertainty management in the field of self-adaptive systems. This requires both an approach to decide when to reduce uncertainty, and a catalog of tactics to reduce different kinds of uncertainty. We present an example of such a decision, examples of uncertainty reduction tactics, and describe how uncertainty reduction requires changes to the different activities in the typical self-adaptation loop.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Uncertainty Reduction in Self-Adaptive Systems 1521480293480 Gabriel A. Moreno Software Engineering Institute gmoreno@sei.cmu.edu Javier Cámara Carnegie Mellon University jcmoreno@cs.cmu.edu David Garlan Carnegie Mellon University garlan@cs.cmu.edu Mark Klein Software Engineering Institute mk@sei.cmu.edu self adaptive uncertainty tactics Self-adaptive systems depend on models of themselves and their environment to decide whether and how to adapt, but these models are often affected by uncertainty. While current adaptation decision approaches are able to model and reason about this uncertainty, they do not consider ways to reduce it. This presents an opportunity for improving decision-making in self-adaptive systems, because reducing uncertainty results in a better characterization of the current and future states of the system and the environment (at some cost), which in turn supports making better adaptation decisions. We propose uncertainty reduction as the natural next step in uncertainty management in the field of self-adaptive systems. This requires both an approach to decide when to reduce uncertainty, and a catalog of tactics to reduce different kinds of uncertainty. We present an example of such a decision, examples of uncertainty reduction tactics, and describe how uncertainty reduction requires changes to the different activities in the typical self-adaptation loop.",
              "pageNumber": 51,
              "isPageNumberRoman": false
            },
            {
              "id": "3qAO5PCEGRdUrx5hCwUYZb",
              "type": "authorPaper",
              "text": "Adapting a System with Noisy Outputs with Statistical Guarantees",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf",
              "extraLocations": [],
              "authorNames": "Ilias Gerostathopoulos (Technical University Munich), Christian Prehofer (Technical University Munich & fortiss GmbH), Tomas Bures (Charles University in Prague)",
              "abstract": "Many complex systems are intrinsically stochastic in their behavior which complicates their control and optimization. Current self-adaptation and self-optimization approaches are not tailored to systems that have (i) complex internal behavior that is unrealistic to model explicitly, (ii) noisy outputs, (iii) high cost of bad adaptation decisions, i.e. systems that are both hard and risky to adapt at runtime. In response, we propose to model the system to be adapted as black box and apply state-of-the-art optimization techniques combined with statistical guarantees. Our main contribution is a framework that combines runtime optimization with guarantees obtained from statistical testing and with a method for handling cost of bad adaptation decisions. We evaluate the feasibility of our approach by applying it on an existing traffic navigation self-adaptation exemplar.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Adapting a System with Noisy Outputs with Statistical Guarantees 1522519773538 Ilias Gerostathopoulos Technical University Munich ilias.gerostathopoulos@tum.de Christian Prehofer Technical University Munich & fortiss GmbH christian.prehofer@tum.de Tomas Bures Charles University in Prague bures@d3s.mff.cuni.cz self-adaptation statistical guarantees experimentation cost Many complex systems are intrinsically stochastic in their behavior which complicates their control and optimization. Current self-adaptation and self-optimization approaches are not tailored to systems that have (i) complex internal behavior that is unrealistic to model explicitly, (ii) noisy outputs, (iii) high cost of bad adaptation decisions, i.e. systems that are both hard and risky to adapt at runtime. In response, we propose to model the system to be adapted as black box and apply state-of-the-art optimization techniques combined with statistical guarantees. Our main contribution is a framework that combines runtime optimization with guarantees obtained from statistical testing and with a method for handling cost of bad adaptation decisions. We evaluate the feasibility of our approach by applying it on an existing traffic navigation self-adaptation exemplar.",
              "pageNumber": 58,
              "isPageNumberRoman": false
            },
            {
              "id": "2bnjilUmEC4D80XwEQcOhr",
              "type": "authorPaper",
              "text": "Trace Checking for Dynamic Software Product Lines",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf",
              "extraLocations": [],
              "authorNames": "Rafael Olaechea (University of Waterloo), Joanne Atlee (University of Waterloo), Axel Legay (INRIA Rennes), Uli Fahrenberg (Ecole Polytechnique)",
              "abstract": "A key objective of self-adaptive systems is to continue to provide optimal quality of service when the environment changes. A dynamic software product line (DSPL) can benefit from knowing how its various product variants would have performed (in terms of quality of service) with respect to the recent history of inputs. We propose a family-based analysis that simulates all the product variants of a DSPL simultaneously, at runtime, on recent environmental inputs to obtain an estimate of the quality of service that each one of the product variants would have had, provided it had been executing. We assessed the efficiency of our DSPL analysis compared to the efficiency of analyzing each product individually on three case studies. We obtained mixed results due to the explosion of quality-of-service values for the product variants of a DSPL. After introducing a simple data abstraction on the values of quality-of-service variables, our DSPL analysis is between 1.4 and 7.7 times faster than analyzing the products one at a time.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Trace Checking for Dynamic Software Product Lines 1522459079509 Rafael Olaechea University of Waterloo REOLAECH@uwaterloo.ca Joanne Atlee University of Waterloo jmatlee@uwaterloo.ca Axel Legay INRIA Rennes axel.legay@irisa.fr Uli Fahrenberg Ecole Polytechnique ulrich.fahrenberg@polytechnique.edu Software Product Lines Trace Checking A key objective of self-adaptive systems is to continue to provide optimal quality of service when the environment changes. A dynamic software product line (DSPL) can benefit from knowing how its various product variants would have performed (in terms of quality of service) with respect to the recent history of inputs. We propose a family-based analysis that simulates all the product variants of a DSPL simultaneously, at runtime, on recent environmental inputs to obtain an estimate of the quality of service that each one of the product variants would have had, provided it had been executing. We assessed the efficiency of our DSPL analysis compared to the efficiency of analyzing each product individually on three case studies. We obtained mixed results due to the explosion of quality-of-service values for the product variants of a DSPL. After introducing a simple data abstraction on the values of quality-of-service variables, our DSPL analysis is between 1.4 and 7.7 times faster than analyzing the products one at a time.",
              "pageNumber": 69,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Modeling ",
          "lineItems": [
            {
              "id": "1N8h74JWljDkzPpymwqg0R",
              "type": "authorPaper",
              "text": "Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/33X1ybju3dwW3NQegEQDtT/6Cj9Kc8OxCe0hk2TuSZJve.pdf",
              "extraLocations": [],
              "authorNames": "Frank Trollmann (TU Berlin), Johannes Fähndrich (TU Berlin), Sahin Albayrak (TU Berlin)",
              "abstract": "The development of self-adaptive systems can greatly benefit from reference frameworks to structure the development process. Current reference frameworks abstract from the adaptation decision – the selection of a specific adaptation based on the goals and options available. This decision is usually based on the three adaptation policies: rule-based, goal-based or utility based. However, concepts from these policies often are combined with each other in different ways to achieve hybrid policies. To structure this combination this paper identifies four types of such combinations. We express these types as patterns within a model that captures the functions, models and relations participating in the adaptation decision.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies 1521469414788 Frank Trollmann TU Berlin frank.trollmann@dai-labor.de Johannes Fähndrich TU Berlin Johannes.Faehndrich@dai-labor.de Sahin Albayrak TU Berlin sahin.albayrak@dai-labor.de Adaptation Decision Adaptation Policies Reference Model The development of self-adaptive systems can greatly benefit from reference frameworks to structure the development process. Current reference frameworks abstract from the adaptation decision – the selection of a specific adaptation based on the goals and options available. This decision is usually based on the three adaptation policies: rule-based, goal-based or utility based. However, concepts from these policies often are combined with each other in different ways to achieve hybrid policies. To structure this combination this paper identifies four types of such combinations. We express these types as patterns within a model that captures the functions, models and relations participating in the adaptation decision.",
              "pageNumber": 76,
              "isPageNumberRoman": false
            },
            {
              "id": "5AduCsMAoJxfHD9gDh4T2Q",
              "type": "authorPaper",
              "text": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf",
              "extraLocations": [],
              "authorNames": "João Pablo S. da Silva (Federal University of Rio Grande do Sul), Miguel Ecar (Federal University of Pampa), Marcelo S. Pimenta (Federal University of Rio Grande do Sul), Gilleanes T. A. Guedes (Federal University of Pampa), Luiz Paulo Franz (Federal University of Pampa), Luciano Marchezan (Federal University of Pampa)",
              "abstract": "Self-adaptive Systems (SaSs) operate under uncertainty conditions and have intrinsic properties that make their modeling a non-trivial activity. This complexity can be minimized by using Domain-Specific Modeling Languages (DSMLs), which may be created by extending Unified Modeling Language (UML). In face of this, we propose investigating how the UML has been customized to create DSMLs that provide proper support for SaSs modeling. To achieve this, we performed a Systematic Literature Review (SRL) by retrieving studies with snowballing technique, selecting studies according to inclusion and exclusion criteria, and extracting and analyzing data to answer our research questions. As the outcome, we retrieved 786 studies and selected 16 primary studies published between 2005 and 2017. The results reveal that the class diagram has been customized through the profile-based mechanism to provide proper support to analysis and design of context-awareness and self-adaptiveness properties.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems 1521642033529 João Pablo S. da Silva Federal University of Rio Grande do Sul jpsilva@inf.ufrgs.br Miguel Ecar Federal University of Pampa miguel@ecarsm.com Marcelo S. Pimenta Federal University of Rio Grande do Sul mpimenta@inf.ufrgs.br Gilleanes T. A. Guedes Federal University of Pampa gilleanesguedes@unipampa.edu.br Luiz Paulo Franz Federal University of Pampa luizpaulofranz@gmail.com Luciano Marchezan Federal University of Pampa lucianomarchezan94@gmail.com Systematic Literature Review (SLR) Snowballing Technique Self-adaptive Systems (SaS) Domain-Specific Modeling Language (DSML) Unified Modeling Language (UML) Self-adaptive Systems (SaSs) operate under uncertainty conditions and have intrinsic properties that make their modeling a non-trivial activity. This complexity can be minimized by using Domain-Specific Modeling Languages (DSMLs), which may be created by extending Unified Modeling Language (UML). In face of this, we propose investigating how the UML has been customized to create DSMLs that provide proper support for SaSs modeling. To achieve this, we performed a Systematic Literature Review (SRL) by retrieving studies with snowballing technique, selecting studies according to inclusion and exclusion criteria, and extracting and analyzing data to answer our research questions. As the outcome, we retrieved 786 studies and selected 16 primary studies published between 2005 and 2017. The results reveal that the class diagram has been customized through the profile-based mechanism to provide proper support to analysis and design of context-awareness and self-adaptiveness properties.",
              "pageNumber": 87,
              "isPageNumberRoman": false
            },
            {
              "id": "1L73nVApO26AgrFF9qbjc7",
              "type": "authorPaper",
              "text": "Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2SUmREckTuJBYeOqzURf5T/5kMPcC2ZIstTrrvleqnxWc.pdf",
              "extraLocations": [],
              "authorNames": "Byron DeVries (Grand Valley State University), Betty H.C. Cheng (Michigan State University)",
              "abstract": "The validity of systems at run time depends on the features included in those systems operating as specified. However, when feature interactions occur, the specifications no longer reflect the state of the run-time system due to the conflict. While methods exist to detect feature interactions at design time, conflicts that cause features to fail may still arise when new detected feature interactions are considered unreachable, new features are added, or an exhaustive design-time detection approach is impractical due to computational costs. This paper introduces Thoosa, an approach for using models at run time to detect features that can fail due to n-way feature interactions at run time and thereby trigger mitigating adaptations and/or updates to the requirements. We illustrate our approach by applying Thoosa to an industry-based automotive braking system comprising multiple subsystems.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes 1521648222653 Byron DeVries Grand Valley State University byron_devries@gvsu.edu Betty H.C. Cheng Michigan State University chengb@cse.msu.edu Requirements Feature Interactions Self-Monitoring The validity of systems at run time depends on the features included in those systems operating as specified. However, when feature interactions occur, the specifications no longer reflect the state of the run-time system due to the conflict. While methods exist to detect feature interactions at design time, conflicts that cause features to fail may still arise when new detected feature interactions are considered unreachable, new features are added, or an exhaustive design-time detection approach is impractical due to computational costs. This paper introduces Thoosa, an approach for using models at run time to detect features that can fail due to n-way feature interactions at run time and thereby trigger mitigating adaptations and/or updates to the requirements. We illustrate our approach by applying Thoosa to an industry-based automotive braking system comprising multiple subsystems.",
              "pageNumber": 94,
              "isPageNumberRoman": false
            },
            {
              "id": "7w5z6FTKllhbedkpFp9l1D",
              "type": "authorPaper",
              "text": "mRUBiS: An Exemplar for Model-Based Architectural Self-Healing and Self-Optimization",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4AlAbDXJUpXo0LxWaTk95u/5zizl5UYGihEcEuBT7spP8.pdf",
              "extraLocations": [],
              "authorNames": "Thomas Vogel (Humboldt University Berlin)",
              "abstract": "Self-adaptive software systems are often structured into an adaptation engine that manages an adaptable software by operating on a runtime model that represents the architecture of the software (model-based architectural self-adaptation). Despite the popularity of such approaches, existing exemplars provide application programming interfaces but no runtime model to develop adaptation engines. Consequently, there does not exist any exemplar that supports developing, evaluating, and comparing model-based self-adaptation off the shelf. Therefore, we present mRUBiS, an extensible exemplar for model-based architectural self-healing and self-optimization. mRUBiS simulates the adaptable software and therefore provides and maintains an architectural runtime model of the software, which can be directly used by adaptation engines to realize and perform self-adaptation. Particularly, mRUBiS supports injecting issues into the model, which should be handled by self-adaptation, and validating the model to assess the self-adaptation. Finally, mRUBiS allows developers to explore variants of adaptation engines (e.g., event-driven self-adaptation) and to evaluate the effectiveness, efficiency, and scalability of the engines.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 mRUBiS: An Exemplar for Model-Based Architectural Self-Healing and Self-Optimization 1521364472524 Thomas Vogel Humboldt University Berlin thomas.vogel@cs.hu-berlin.de Self-adaptation architecture runtime models simulator Self-adaptive software systems are often structured into an adaptation engine that manages an adaptable software by operating on a runtime model that represents the architecture of the software (model-based architectural self-adaptation). Despite the popularity of such approaches, existing exemplars provide application programming interfaces but no runtime model to develop adaptation engines. Consequently, there does not exist any exemplar that supports developing, evaluating, and comparing model-based self-adaptation off the shelf. Therefore, we present mRUBiS, an extensible exemplar for model-based architectural self-healing and self-optimization. mRUBiS simulates the adaptable software and therefore provides and maintains an architectural runtime model of the software, which can be directly used by adaptation engines to realize and perform self-adaptation. Particularly, mRUBiS supports injecting issues into the model, which should be handled by self-adaptation, and validating the model to assess the self-adaptation. Finally, mRUBiS allows developers to explore variants of adaptation engines (e.g., event-driven self-adaptation) and to evaluate the effectiveness, efficiency, and scalability of the engines.",
              "pageNumber": 101,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Agents & Distribution ",
          "lineItems": [
            {
              "id": "2v3NeuXvXuDGCsercoYDqw",
              "type": "authorPaper",
              "text": "Cleaning Up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/26J5vHG8vHDYBgETMd3Zz4/2LF1HRaHhdW7UO7wCiVccz.pdf",
              "extraLocations": [],
              "authorNames": "João Faccin (Universidade Federal do Rio Grande do Sul), Ingrid Nunes (Universidade Federal do Rio Grande do Sul)",
              "abstract": "In order to cope with abnormal situations, self-adaptive systems may perform remediation actions to guarantee an acceptable system behaviour while dealing with critical execution problems. When problems are solved, the effect of such actions may need to be reverted to return the system to a normal state. This leads to the general problem of providing systems with the ability of autonomously reverting actions. In this paper, we address this problem by proposing a formal framework that customises the belief-desire-intention (BDI) architecture, typically used to implement autonomous agents. This customisation involves steps to monitor agent actions and store reversion metadata, identify when and which actions must be reverted, and execute action reversion. Our formal approach was implemented as an extension of the BDI4JADE platform. This extension was used to evaluate our proposal with a case study in the context of smart homes.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Cleaning Up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions 1521552592944 João Faccin Universidade Federal do Rio Grande do Sul jgfaccin@inf.ufrgs.br Ingrid Nunes Universidade Federal do Rio Grande do Sul ingridnunes@inf.ufrgs.br Self-adaptive systems BDI architecture reversion actions remediation behaviour autonomous agents In order to cope with abnormal situations, self-adaptive systems may perform remediation actions to guarantee an acceptable system behaviour while dealing with critical execution problems. When problems are solved, the effect of such actions may need to be reverted to return the system to a normal state. This leads to the general problem of providing systems with the ability of autonomously reverting actions. In this paper, we address this problem by proposing a formal framework that customises the belief-desire-intention (BDI) architecture, typically used to implement autonomous agents. This customisation involves steps to monitor agent actions and store reversion metadata, identify when and which actions must be reverted, and execute action reversion. Our formal approach was implemented as an extension of the BDI4JADE platform. This extension was used to evaluate our proposal with a case study in the context of smart homes.",
              "pageNumber": 108,
              "isPageNumberRoman": false
            },
            {
              "id": "k1ObSTgM89H8tyEUc5qmD",
              "type": "authorPaper",
              "text": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf",
              "extraLocations": [],
              "authorNames": "Evangelos Pournaras (ETH Zurich), Mark Ballandies (ETH Zurich), Dinesh Acharya (ETH Zurich), Manish Thapa (ETH Zurich), Ben-Elias Brandt (ETH Zurich)",
              "abstract": "The interconnection of networks between several techno-socio-economic sectors such as energy, transport, and communication, questions the manageability and resilience of the digital society. System interdependencies alter the fundamental dynamics that govern isolated systems, which can unexpectedly trigger catastrophic instabilities such as cascading failures. This paper envisions a general-purpose, yet simple prototyping of self-management software systems that can turn system interdependencies from a cause of instability to an opportunity for higher resilience. Such prototyping proves to be challenging given the highly interdisciplinary scope of interdependent networks. Different system dynamics and organizational constraints such as the distributed nature of interdependent networks or the autonomy and authority of system operators over their controlled infrastructure perplex the design for a general prototyping approach, which earlier work has not yet addressed. This paper contributes such a modular design solution implemented as an open source software extension of SFINA, the Simulation Framework for Intelligent Network Adaptations. The applicability of the software artifact is demonstrated with the introduction of a novel self-healing mechanism for interdependent power networks, which optimizes power flow exchanges between a damaged and a healer network to mitigate power cascading failures. Results show a significant decrease in the damage spread by self-healing synergies, while the degree of interconnectivity between the power networks indicates a tradeoff between links survivability and load served. The contributions of this paper aspire to bring closer several research communities working on modeling and simulation of different domains with an economic and societal impact on the resilience of real-world interdependent networks.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures 1522453729537 Evangelos Pournaras ETH Zurich epournaras@ethz.ch Mark Ballandies ETH Zurich bmark@ethz.ch Dinesh Acharya ETH Zurich acharyad@ethz.ch Manish Thapa ETH Zurich manish.thapa@ethz.ch Ben-Elias Brandt ETH Zurich bbrandt@ethz.ch self-management self-healing modeling simulation interdependent networks multiplex networks cascading failure distributed system smart grid The interconnection of networks between several techno-socio-economic sectors such as energy, transport, and communication, questions the manageability and resilience of the digital society. System interdependencies alter the fundamental dynamics that govern isolated systems, which can unexpectedly trigger catastrophic instabilities such as cascading failures. This paper envisions a general-purpose, yet simple prototyping of self-management software systems that can turn system interdependencies from a cause of instability to an opportunity for higher resilience. Such prototyping proves to be challenging given the highly interdisciplinary scope of interdependent networks. Different system dynamics and organizational constraints such as the distributed nature of interdependent networks or the autonomy and authority of system operators over their controlled infrastructure perplex the design for a general prototyping approach, which earlier work has not yet addressed. This paper contributes such a modular design solution implemented as an open source software extension of SFINA, the Simulation Framework for Intelligent Network Adaptations. The applicability of the software artifact is demonstrated with the introduction of a novel self-healing mechanism for interdependent power networks, which optimizes power flow exchanges between a damaged and a healer network to mitigate power cascading failures. Results show a significant decrease in the damage spread by self-healing synergies, while the degree of interconnectivity between the power networks indicates a tradeoff between links survivability and load served. The contributions of this paper aspire to bring closer several research communities working on modeling and simulation of different domains with an economic and societal impact on the resilience of real-world interdependent networks.",
              "pageNumber": 119,
              "isPageNumberRoman": false
            },
            {
              "id": "27aO1uGbUOS6lYZrs3VY3Q",
              "type": "authorPaper",
              "text": "A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/xLin6RoRQ6LiJyfeCfZGh/184WE5awQRYQomHAyURoSq.pdf",
              "extraLocations": [],
              "authorNames": "Sylvain Ductor (Universidade Estadual do Ceará), Zahia Guessoum (LIP6)",
              "abstract": "Distributed cooperative applications are now increasingly designed as Multi-Agent Systems (MAS). Such applications may be open, dynamic, large scale and exhibit heterogeneous and dynamic agents criticalities. These characteristics create new challenges to the traditional approaches of fault-tolerance. We focus on replication-based preventive approach. The aim is to dynamically and automatically adapt the agent replication strategy (number of replicas and their location), in order to maximize the MAS reliability (guarantee of continuity of computation w.r.t the agents criticalities). In this paper, we describe a decentralized coordination mechanism supporting adaptive replication. In order to provide a clear understanding of the specifics of our proposal, we provide a theoretical validation and report on experimental validations by confronting our proposal with an existing solution that is structurally similar.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems 1521150665660 Sylvain Ductor Universidade Estadual do Ceará ductor.sylvain@gmail.com Zahia Guessoum LIP6 zahia.guessoum@lip6.fr Multi agent systems Cooperation and coordination Massively parallel algorithms Redundancy Distributed cooperative applications are now increasingly designed as Multi-Agent Systems (MAS). Such applications may be open, dynamic, large scale and exhibit heterogeneous and dynamic agents criticalities. These characteristics create new challenges to the traditional approaches of fault-tolerance. We focus on replication-based preventive approach. The aim is to dynamically and automatically adapt the agent replication strategy (number of replicas and their location), in order to maximize the MAS reliability (guarantee of continuity of computation w.r.t the agents criticalities). In this paper, we describe a decentralized coordination mechanism supporting adaptive replication. In order to provide a clear understanding of the specifics of our proposal, we provide a theoretical validation and report on experimental validations by confronting our proposal with an existing solution that is structurally similar.",
              "pageNumber": 130,
              "isPageNumberRoman": false
            },
            {
              "id": "7oqsvg8ozTEa28EaQovx0Y",
              "type": "authorPaper",
              "text": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf",
              "extraLocations": [],
              "authorNames": "Gabriel A. Moreno (Software Engineering Institute), Bradley Schmerl (Carnegie Mellon University), David Garlan (Carnegie Mellon University)",
              "abstract": "Research in self-adaptive systems often uses web applications as target systems, running the actual software on real web servers. This approach has three drawbacks. First, these systems are not easy and/or cheap to deploy. Second, run-time conditions cannot be replicated exactly to compare different adaptation approaches due to uncontrolled factors. Third, running experiments is time-consuming. To address these issues, we present SWIM, an exemplar that simulates a web application. SWIM can be used as a target system with an external adaptation manager interacting with it through its TCP-based interface. Since the servers are simulated, this use case addresses the first two problems. The full benefit of SWIM is attained when the adaptation manager is built as a simulation module. An experiment using a simulated 60-server cluster, processing 18 hours of traffic with 29 million requests takes only 5 minutes to run on a laptop computer. SWIM has been used for evaluating self-adaptation approaches, and for a comparative study of model-based predictive approaches to self-adaptation.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications 1521471600066 Gabriel A. Moreno Software Engineering Institute gmoreno@sei.cmu.edu Bradley Schmerl Carnegie Mellon University schmerl@cs.cmu.edu David Garlan Carnegie Mellon University garlan@cs.cmu.edu simulation scaling web application brownout Research in self-adaptive systems often uses web applications as target systems, running the actual software on real web servers. This approach has three drawbacks. First, these systems are not easy and/or cheap to deploy. Second, run-time conditions cannot be replicated exactly to compare different adaptation approaches due to uncontrolled factors. Third, running experiments is time-consuming. To address these issues, we present SWIM, an exemplar that simulates a web application. SWIM can be used as a target system with an external adaptation manager interacting with it through its TCP-based interface. Since the servers are simulated, this use case addresses the first two problems. The full benefit of SWIM is attained when the adaptation manager is built as a simulation module. An experiment using a simulated 60-server cluster, processing 18 hours of traffic with 29 million requests takes only 5 minutes to run on a laptop computer. SWIM has been used for evaluating self-adaptation approaches, and for a comparative study of model-based predictive approaches to self-adaptation.",
              "pageNumber": 137,
              "isPageNumberRoman": false
            },
            {
              "id": "35ICV46EQoPQCEkHH9D7yA",
              "type": "authorPaper",
              "text": "Decentralized Self-Adaptive Computing at the Edge",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ARtYkQVUB7hixaSKTqTgw/23slMjtin7WgSIOAwLF4fI.pdf",
              "extraLocations": [],
              "authorNames": "Mirko D'Angelo (Linnaeus University)",
              "abstract": "Nowadays, computing infrastructures are usually deployed in fully controlled environments and managed in a centralized fashion. Leveraging on centralized infrastructures prevent the system to deal with scalability and performance issues, which are inherent to modern large-scale data-intensive applications. On the other hand, we envision fully decentralized computing infrastructures deployed at the edge of the network providing the required support for operating data-intensive systems. However, engineering such systems raises many challenges, as decentralization introduces uncertainty, which in turn may harm the dependability of the system. To this end, self-adaptation is a key approach to manage uncertainties at runtime and satisfy the requirements of decentralized data-intensive systems. This paper shows the research directions and current contributions towards this vision by (i) evaluating the impact of the distribution of computational entities, (ii) engineering decentralized computing through self-adaptation and, (iii) evaluating decentralized and self-adaptive applications.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Decentralized Self-Adaptive Computing at the Edge 1521648906498 Mirko D'Angelo Linnaeus University mirko.dangelo@lnu.se self adaptive systems data intensive systems decentralized computing edge computing Nowadays, computing infrastructures are usually deployed in fully controlled environments and managed in a centralized fashion. Leveraging on centralized infrastructures prevent the system to deal with scalability and performance issues, which are inherent to modern large-scale data-intensive applications. On the other hand, we envision fully decentralized computing infrastructures deployed at the edge of the network providing the required support for operating data-intensive systems. However, engineering such systems raises many challenges, as decentralization introduces uncertainty, which in turn may harm the dependability of the system. To this end, self-adaptation is a key approach to manage uncertainties at runtime and satisfy the requirements of decentralized data-intensive systems. This paper shows the research directions and current contributions towards this vision by (i) evaluating the impact of the distribution of computational entities, (ii) engineering decentralized computing through self-adaptation and, (iii) evaluating decentralized and self-adaptive applications.",
              "pageNumber": 144,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Security ",
          "lineItems": [
            {
              "id": "5ySWSwdhOwc8Q0YGm2J4Mu",
              "type": "authorPaper",
              "text": "Toward Evaluating the Impact of Self-Adaptation on Security Control Certification",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/78OhinAgkubclG5YAunrMv/7vQwsgjQwZFNxeGNuYC858.pdf",
              "extraLocations": [],
              "authorNames": "Allen Marshall (University of Tulsa), Sharmin Jahan (University of Tulsa), Rose Gamble (University of Tulsa)",
              "abstract": "Certifying security controls is required for information systems that are either federally maintained or maintained by a US government contractor. As described in the NIST SP800-53, certified and accredited information systems are deployed with an acceptable security threat risk. Self-adaptive information systems that allow functional and decision-making changes to be dynamically configured at runtime may violate security controls increasing the risk of security threat to the system. Methods are needed to formalize the process of certification for security controls by expressing and verifying the functional and non-functional requirements to determine what risks are introduced through self-adaptation. We formally express the existence and behavior requirements of the mechanisms needed to guarantee the security controls' effectiveness using audit controls on program example. To reason over the risk of security control compliance given runtime self-adaptations, we use the KIV theorem prover on the functional requirements, extracting the verification concerns and workflow associated with the proof process. We augment the MAPE-K control loop planner with knowledge of the mechanisms that satisfy the existence criteria expressed by the security controls. We compare self-adaptive plans to assess their risk of security control violation prior to plan deployment.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Toward Evaluating the Impact of Self-Adaptation on Security Control Certification 1522465971519 Allen Marshall University of Tulsa allen-marshall@utulsa.edu Sharmin Jahan University of Tulsa shj594@utulsa.edu Rose Gamble University of Tulsa gamble@utulsa.edu Security certification self-adaptation risk analysis Certifying security controls is required for information systems that are either federally maintained or maintained by a US government contractor. As described in the NIST SP800-53, certified and accredited information systems are deployed with an acceptable security threat risk. Self-adaptive information systems that allow functional and decision-making changes to be dynamically configured at runtime may violate security controls increasing the risk of security threat to the system. Methods are needed to formalize the process of certification for security controls by expressing and verifying the functional and non-functional requirements to determine what risks are introduced through self-adaptation. We formally express the existence and behavior requirements of the mechanisms needed to guarantee the security controls' effectiveness using audit controls on program example. To reason over the risk of security control compliance given runtime self-adaptations, we use the KIV theorem prover on the functional requirements, extracting the verification concerns and workflow associated with the proof process. We augment the MAPE-K control loop planner with knowledge of the mechanisms that satisfy the existence criteria expressed by the security controls. We compare self-adaptive plans to assess their risk of security control violation prior to plan deployment.",
              "pageNumber": 149,
              "isPageNumberRoman": false
            },
            {
              "id": "18GsbDTEUhOxmDsFej7u2y",
              "type": "authorPaper",
              "text": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf",
              "extraLocations": [],
              "authorNames": "Thein Than Tun (The Open University), Mu Yang (University of Greenwich), Arosha K. Bandara (The Open University), Yijun Yu (The Open University), Armstrong Nhlabatsi (Qatar University), Niamul Khan (Qatar University), Khaled M. Khan (Qatar University), Bashar Nuseibeh (The Open University)",
              "abstract": "In an adaptive security-critical system, security mechanisms change according to the type of threat posed by the environment. Specifying the behavior of these systems is difficult because conditions of the environment are difficult to describe until the system has been deployed and used for a length of time. This paper defines the problem of adaptation in security-critical systems, and outlines the RELAIS approach for expressing requirements and specifying the behavior in a way that helps identify the need for adaptation, and the appropriate adaptation behavior at runtime. The paper introduces the notion of adaptation via input approximation and proposes statistical machine learning techniques for realizing it. The approach is illustrated with a running example and is applied to a realistic security example from a cloud-based file-sharing application. Bayesian classification and logistic regression methods are used to implement adaptive specifications and these methods offer different levels of adaptive security and usability in the file-sharing application.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Requirements and Specifications for Adaptive Security: Concepts and Analysis 1521759875694 Thein Than Tun The Open University thein.tun@open.ac.uk Mu Yang University of Greenwich m.yang@greenwich.ac.uk Arosha K. Bandara The Open University arosha.bandara@open.ac.uk Yijun Yu The Open University yijun.yu@open.ac.uk Armstrong Nhlabatsi Qatar University armstrong.nhlabatsi@qu.edu.qa Niamul Khan Qatar University niamul.khan@qu.edu.qa Khaled M. Khan Qatar University k.khan@qu.edu.qa Bashar Nuseibeh The Open University bashar.nuseibeh@open.ac.uk Security requirements Self-adaptation In an adaptive security-critical system, security mechanisms change according to the type of threat posed by the environment. Specifying the behavior of these systems is difficult because conditions of the environment are difficult to describe until the system has been deployed and used for a length of time. This paper defines the problem of adaptation in security-critical systems, and outlines the RELAIS approach for expressing requirements and specifying the behavior in a way that helps identify the need for adaptation, and the appropriate adaptation behavior at runtime. The paper introduces the notion of adaptation via input approximation and proposes statistical machine learning techniques for realizing it. The approach is illustrated with a running example and is applied to a realistic security example from a cloud-based file-sharing application. Bayesian classification and logistic regression methods are used to implement adaptive specifications and these methods offer different levels of adaptive security and usability in the file-sharing application.",
              "pageNumber": 161,
              "isPageNumberRoman": false
            },
            {
              "id": "YGQSasRqSmfPuF0jOO6aI",
              "type": "authorPaper",
              "text": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf",
              "extraLocations": [],
              "authorNames": "Michele Guerriero (Politecnico di Milano), Damian Andrew Tamburri (TU/e - JADS), Elisabetta Di Nitto (Politecnico di Milano)",
              "abstract": "The rise of Big Data is leading to an increasing demand for large-scale data-intensive applications (DIAs), which have to analyse massive amounts of personal data (e.g. customers' location, cars' speed, people heartbeat, etc.), some of which can be sensitive, meaning that its confidentiality has to be protected. In this context, DIA providers are responsible for enforcing privacy policies that account for the privacy preferences of data subjects as well as for general privacy regulations. This is the case, for instance, of data brokers, i.e. companies that continuously collect and analyse data in order to provide useful analytics to their clients. Unfortunately, the enforcement of privacy policies in modern DIAs tends to become cumbersome because (i) the number of policies can easily explode, depending on the number of data subjects, (ii) policy enforcement has to autonomously adapt to the application context, thus, requiring some non-trivial runtime reasoning, and (iii) designing and developing modern DIAs is complex per se. For the above reasons, we need specific design and runtime methods enabling so called privacy-by-design in a Big Data context. In this article we propose an approach for specifying, enforcing and checking privacy policies on DIAs designed according to the Google Dataflow model and we show that the enforcement approach behaves correctly in the considered cases and introduces a performance overhead that is acceptable given the requirements of a typical DIA.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications 1522487292752 Michele Guerriero Politecnico di Milano michele.guerriero@polimi.it Damian Andrew Tamburri TU/e - JADS d.a.tamburri@tue.nl Elisabetta Di Nitto Politecnico di Milano elisabetta.dinitto@polimi.it Data Privacy Dataflow Applications Big Data Context Aware Privacy The rise of Big Data is leading to an increasing demand for large-scale data-intensive applications (DIAs), which have to analyse massive amounts of personal data (e.g. customers' location, cars' speed, people heartbeat, etc.), some of which can be sensitive, meaning that its confidentiality has to be protected. In this context, DIA providers are responsible for enforcing privacy policies that account for the privacy preferences of data subjects as well as for general privacy regulations. This is the case, for instance, of data brokers, i.e. companies that continuously collect and analyse data in order to provide useful analytics to their clients. Unfortunately, the enforcement of privacy policies in modern DIAs tends to become cumbersome because (i) the number of policies can easily explode, depending on the number of data subjects, (ii) policy enforcement has to autonomously adapt to the application context, thus, requiring some non-trivial runtime reasoning, and (iii) designing and developing modern DIAs is complex per se. For the above reasons, we need specific design and runtime methods enabling so called privacy-by-design in a Big Data context. In this article we propose an approach for specifying, enforcing and checking privacy policies on DIAs designed according to the Google Dataflow model and we show that the enforcement approach behaves correctly in the considered cases and introduces a performance overhead that is acceptable given the requirements of a typical DIA.",
              "pageNumber": 172,
              "isPageNumberRoman": false
            },
            {
              "id": "67tG9ko8D9QIgDFXOeXxXV",
              "type": "authorPaper",
              "text": "INSpIRA: INtegrating Security Into Risk Assessment",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ZTVp9M58dlYoX4H3UmQMz/3CPzDjmXVpoCupl1P2WG0m.pdf",
              "extraLocations": [],
              "authorNames": "Jürgen Dobaj (Graz University of Technology)",
              "abstract": "Today's software and hardware technologies enable the expansion of Cyber-Physical Systems (CPSs) into the realms of mobility (car2x, autonomous driving), energy (power plants, smart grid) and healthcare (health monitoring), paving the way into a highly interlaced world. However, this also dramatically broadens the threat landscape for potential attacks on CPSs. The malfunction of these CPSs could threaten human life, cause environmental damage and major fnancial loss. This drives the need for comprehensive methods that support the cross-domain design, development and implementation of safe and secure systems. In order to tackle these challenges, this paper proposes a method called INSpIRA, a method for INtegrating Security Into Risk Assessment, including a toolchain implementing the method. The envisioned method is supposed to be a holistic approach that supports the efcient crossdomain design, development, implementation and maintenance of dependable CPSs, where security and safety are a critical aspect that requires an in-depth risk assessment.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 INSpIRA: INtegrating Security Into Risk Assessment 1522485485437 Jürgen Dobaj Graz University of Technology juergen.dobaj@tugraz.at Dependability Safety Security Risk Assessment Self-Adaptive System Model Based Development Industrial Control Systems ICS Today's software and hardware technologies enable the expansion of Cyber-Physical Systems (CPSs) into the realms of mobility (car2x, autonomous driving), energy (power plants, smart grid) and healthcare (health monitoring), paving the way into a highly interlaced world. However, this also dramatically broadens the threat landscape for potential attacks on CPSs. The malfunction of these CPSs could threaten human life, cause environmental damage and major fnancial loss. This drives the need for comprehensive methods that support the cross-domain design, development and implementation of safe and secure systems. In order to tackle these challenges, this paper proposes a method called INSpIRA, a method for INtegrating Security Into Risk Assessment, including a toolchain implementing the method. The envisioned method is supposed to be a holistic approach that supports the efcient crossdomain design, development, implementation and maintenance of dependable CPSs, where security and safety are a critical aspect that requires an in-depth risk assessment.",
              "pageNumber": 183,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Security and Adaptivity ",
          "lineItems": [
            {
              "id": "4gkwWQQ0qkxoccKLfLNTwP",
              "type": "authorPaper",
              "text": "Security: A Critical Quality Attribute in Self-Adaptive Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1z3S59IR1rxMHAggP1cDTo/01olZVDrM4w5tT2fG01CDn.pdf",
              "extraLocations": [],
              "authorNames": "Anthony Peruma (RIT), Daniel Krutz (RIT)",
              "abstract": "Self-Adaptive Systems (SAS) are revolutionizing many aspects of our society. From server clusters to autonomous vehicles, SAS are becoming more ubiquitous and essential to our world. Security is frequently a priority for these systems as many SAS conduct mission-critical operations, or work with sensitive information. Fortunately, security is being more recognized as an indispensable aspect of virtually all aspects of computing systems, in all phases of software development. Despite the growing prominence in security, from computing education to vulnerability detection systems, it is just another concern of creating good software. Despite how critical security is, it is a quality attribute like other aspects such as reliability, stability, or adaptability in a SAS.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Security: A Critical Quality Attribute in Self-Adaptive Systems 1521650224467 Anthony Peruma RIT anthony.peruma@mail.rit.edu Daniel Krutz RIT dxkvse@rit.edu Self-Adaptive Systems Security Autonomous Systems Self-Adaptive Systems (SAS) are revolutionizing many aspects of our society. From server clusters to autonomous vehicles, SAS are becoming more ubiquitous and essential to our world. Security is frequently a priority for these systems as many SAS conduct mission-critical operations, or work with sensitive information. Fortunately, security is being more recognized as an indispensable aspect of virtually all aspects of computing systems, in all phases of software development. Despite the growing prominence in security, from computing education to vulnerability detection systems, it is just another concern of creating good software. Despite how critical security is, it is a quality attribute like other aspects such as reliability, stability, or adaptability in a SAS.",
              "pageNumber": 188,
              "isPageNumberRoman": false
            },
            {
              "id": "73vmYtJ3dHVQ263IpX5M6m",
              "type": "authorPaper",
              "text": "The Special Case of Data Protection and Self-Adaptation",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3DZkSlFbYCoN8zYlAo78vC/5GNDCtt4OMVwMVAH7Hh2AF.pdf",
              "extraLocations": [],
              "authorNames": "Zoltán Ádám Mann (paluno - The Ruhr Institute for Software Technology), Andreas Metzger (paluno - The Ruhr Institute for Software Technology)",
              "abstract": "In this extended abstract, we consider one important aspect of security: the protection of sensitive data from unauthorized access. We argue that (i) self-adaptation may facilitate the efficient protection of sensitive data; (ii) data protection has peculiar properties that make its treatment different from other quality attributes; and (iii) data protection should be considered in combination with other quality attributes like performance and costs.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 The Special Case of Data Protection and Self-Adaptation 1520901322452 Zoltán Ádám Mann paluno - The Ruhr Institute for Software Technology zoltan.mann@gmail.com Andreas Metzger paluno - The Ruhr Institute for Software Technology andreas.metzger@paluno.uni-due.de self-adaptive systems data protection privacy security In this extended abstract, we consider one important aspect of security: the protection of sensitive data from unauthorized access. We argue that (i) self-adaptation may facilitate the efficient protection of sensitive data; (ii) data protection has peculiar properties that make its treatment different from other quality attributes; and (iii) data protection should be considered in combination with other quality attributes like performance and costs.",
              "pageNumber": 190,
              "isPageNumberRoman": false
            },
            {
              "id": "44zcG3CRGpFldxQvEfvVd9",
              "type": "authorPaper",
              "text": "Self-Adaptation Made Easy with Blockchains",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6dibjBLDaYcGaOjkTzaMaR/1XoumyUqtQMhBIdWn4XePu.pdf",
              "extraLocations": [],
              "authorNames": "Peter E. Sedgewick (University of Kent), Rogério de Lemos (University of Kent)",
              "abstract": "This position paper describes how blockchains facilitate the implementation of distributed self-adaptive systems. We demonstrate how the master/slave decentralised control pattern for self-adaptive systems, integrated with a permissioned blockchain, can protect nodes of a network against attacks by continuously adapting the membership of an access control list. Whenever malicious behaviour is detected, consensus on an updated access control list is reached, and that node is removed from the network. Using a smart home, as an example, we demonstrate that a permissioned blockchain is able to maintain a consistent view of a network of Internet of Things (IoT) devices in the presence of malicious nodes.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Self-Adaptation Made Easy with Blockchains 1521163979565 Peter E. Sedgewick University of Kent ps448@kent.ac.uk Rogério de Lemos University of Kent r.delemos@kent.ac.uk self-adaptive systems blockchains IoT MultiChain access control This position paper describes how blockchains facilitate the implementation of distributed self-adaptive systems. We demonstrate how the master/slave decentralised control pattern for self-adaptive systems, integrated with a permissioned blockchain, can protect nodes of a network against attacks by continuously adapting the membership of an access control list. Whenever malicious behaviour is detected, consensus on an updated access control list is reached, and that node is removed from the network. Using a smart home, as an example, we demonstrate that a permissioned blockchain is able to maintain a consistent view of a network of Internet of Things (IoT) devices in the presence of malicious nodes.",
              "pageNumber": 192,
              "isPageNumberRoman": false
            },
            {
              "id": "6GM3wIyGqU7kmKPIcEDHbV",
              "type": "authorPaper",
              "text": "Agree to Disagree: Security Requirements are Different, but Mechanisms for Security Adaptation are Not",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3QGgS1lHfIF4Tv0IDBgJSw/36UkGXMQcGDUKUaA7gVrrO.pdf",
              "extraLocations": [],
              "authorNames": "Thein Than Tun (The Open University), Amel Bennaceur (The Open University)",
              "abstract": "We describe a dialogue between a proponent and an opponent of the proposition security is not just another quality attribute in self-adaptive systems\". The dialogue is structured in two steps. First we examine whether security requirements are different from other system-level requirements. Our consensus is that security requirements require specific methods for elicitation reasoning and analysis. However other requirements (such as safety usability and performance) also require specific techniques. Then we examine the adaptation mechanisms for security and compare them with other properties. Our consensus is that most adaptation techniques can be applied to maintain security and other requirements alike.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Agree to Disagree: Security Requirements are Different, but Mechanisms for Security Adaptation are Not 1521762384182 Thein Than Tun The Open University thein.tun@open.ac.uk Amel Bennaceur The Open University amel.bennaceur@open.ac.uk Security requirements self-adaptation We describe a dialogue between a proponent and an opponent of the proposition security is not just another quality attribute in self-adaptive systems\". The dialogue is structured in two steps. First we examine whether security requirements are different from other system-level requirements. Our consensus is that security requirements require specific methods for elicitation reasoning and analysis. However other requirements (such as safety usability and performance) also require specific techniques. Then we examine the adaptation mechanisms for security and compare them with other properties. Our consensus is that most adaptation techniques can be applied to maintain security and other requirements alike.",
              "pageNumber": 194,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEAMS 2018 - Learning ",
          "lineItems": [
            {
              "id": "5ykZWJDgkm3RIlwanNQm5",
              "type": "authorPaper",
              "text": "Learning Non-deterministic Impact Models for Adaptation",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf",
              "extraLocations": [],
              "authorNames": "Francisco Duarte (INESC-ID / IST Universidade de Lisboa), Richard Gil (INESC-ID / IST Universidade de Lisboa), Paolo Romano (INESC-ID / IST Universidade de Lisboa), Antónia Lopes (LASIGE / FCUL Universidade de Lisboa), Luís Rodrigues (INESC-ID / IST Universidade de Lisboa)",
              "abstract": "Many adaptive systems react to variations in their environment by changing their con guration. Often, they make the adaptation decisions based on some knowledge about how the reconfiguration actions impact the key performance indicators. However, the outcome of these actions is typically affected by uncertainty. Adaptation actions have non-deterministic impacts, potentially leading to multiple outcomes. When this uncertainty is not captured explicitly in the models that guide adaptation, decisions may turn out ineffective or even harmful to the system. Also critical is the need for these models to be interpretable to the human operators that are accountable for the system. However, accurate impact models for actions that result in non-deterministic outcomes are very difficult to obtain and existing techniques that support the automatic generation of these models, mainly based on machine learning, are limited in the way they learn non-determinism. In this paper, we propose a method to learn human-readable models that capture non-deterministic impacts explicitly. Additionally, we discuss how to exploit expert's knowledge to bootstrap the adaptation process as well as how to use the learned impacts to revise models defined offline. We motivate our work on the adaptation of applications in the cloud, typically affected by hardware heterogeneity and resource contention. To validate our approach we use a prototype based on the RUBiS auction application.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Learning Non-deterministic Impact Models for Adaptation 1522490834325 Francisco Duarte INESC-ID / IST Universidade de Lisboa francisco.c.duarte@tecnico.ulisboa.pt Richard Gil INESC-ID / IST Universidade de Lisboa richard.martinez@tecnico.ulisboa.pt Paolo Romano INESC-ID / IST Universidade de Lisboa paolo.romano@tecnico.ulisboa.pt Antónia Lopes LASIGE / FCUL Universidade de Lisboa malopes@ciencias.ulisboa.pt Luís Rodrigues INESC-ID / IST Universidade de Lisboa ler@tecnico.ulisboa.pt Adaptive systems Runtime models Uncertainty Machine Learning Many adaptive systems react to variations in their environment by changing their con guration. Often, they make the adaptation decisions based on some knowledge about how the reconfiguration actions impact the key performance indicators. However, the outcome of these actions is typically affected by uncertainty. Adaptation actions have non-deterministic impacts, potentially leading to multiple outcomes. When this uncertainty is not captured explicitly in the models that guide adaptation, decisions may turn out ineffective or even harmful to the system. Also critical is the need for these models to be interpretable to the human operators that are accountable for the system. However, accurate impact models for actions that result in non-deterministic outcomes are very difficult to obtain and existing techniques that support the automatic generation of these models, mainly based on machine learning, are limited in the way they learn non-determinism. In this paper, we propose a method to learn human-readable models that capture non-deterministic impacts explicitly. Additionally, we discuss how to exploit expert's knowledge to bootstrap the adaptation process as well as how to use the learned impacts to revise models defined offline. We motivate our work on the adaptation of applications in the cloud, typically affected by hardware heterogeneity and resource contention. To validate our approach we use a prototype based on the RUBiS auction application.",
              "pageNumber": 196,
              "isPageNumberRoman": false
            },
            {
              "id": "1WcYmIhnrctPp7gM9JLfft",
              "type": "authorPaper",
              "text": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf",
              "extraLocations": [],
              "authorNames": "Arthur Rodrigues (University of Brasília), Ricardo Diniz Caldas (University of Brasília), Genaína Nunes Rodrigues (University of Brasília), Thomas Vogel (Humboldt-Universität zu Berlin), Patrizio Pelliccione (Chalmers;  University of Gothenburg,  Sweden)",
              "abstract": "The assurance of real-time properties is prone to context variability. Providing such assurance at design time would require to check all the possible context and system variations or to predict which one will be actually used. Both cases are not viable in practice since there are too many possibilities to foresee. Moreover, the knowledge required to fully provide the assurance for self-adaptive systems is only available at runtime and therefore difficult to predict at early development stages. Despite all the efforts on assurances for self-adaptive systems at design or runtime, there is still a gap on verifying and validating real-time constraints accounting for context variability. To fill this gap, we propose a method to provide assurance of self-adaptive systems, at design-and runtime, with special focus on real-time constraints. We combine off-line requirements elicitation and model checking with on-line data collection and data mining to guarantee the system's goals, both functional and non-functional, with fine tuning of the adaptation policies towards the optimization of quality attributes. We experimentally evaluate our method on a simulated prototype of a Body Sensor Network system (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our method is effective in providing evidence that support the provision of assurance.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems 1521580220249 Arthur Rodrigues University of Brasília arthy.rf@gmail.com Ricardo Diniz Caldas University of Brasília rdinizcal@gmail.com Genaína Nunes Rodrigues University of Brasília genaina@unb.br Thomas Vogel Humboldt-Universität zu Berlin thomas.vogel@cs.hu-berlin.de Patrizio Pelliccione Chalmers; University of Gothenburg, Sweden patrizio.pelliccione@gu.se Self adaptive systems assurance evidence goal oriented real time systems data mining learning approach The assurance of real-time properties is prone to context variability. Providing such assurance at design time would require to check all the possible context and system variations or to predict which one will be actually used. Both cases are not viable in practice since there are too many possibilities to foresee. Moreover, the knowledge required to fully provide the assurance for self-adaptive systems is only available at runtime and therefore difficult to predict at early development stages. Despite all the efforts on assurances for self-adaptive systems at design or runtime, there is still a gap on verifying and validating real-time constraints accounting for context variability. To fill this gap, we propose a method to provide assurance of self-adaptive systems, at design-and runtime, with special focus on real-time constraints. We combine off-line requirements elicitation and model checking with on-line data collection and data mining to guarantee the system's goals, both functional and non-functional, with fine tuning of the adaptation policies towards the optimization of quality attributes. We experimentally evaluate our method on a simulated prototype of a Body Sensor Network system (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our method is effective in providing evidence that support the provision of assurance.",
              "pageNumber": 206,
              "isPageNumberRoman": false
            },
            {
              "id": "2s4H4JcOCV51QUW8biGKc4",
              "type": "authorPaper",
              "text": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
              "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf",
              "extraLocations": [],
              "authorNames": "Mahshid Helali Moghadam (RISE SICS Västerås/Mälardalen University), Mehrdad Saadatmand (RISE SICS Västerås), Markus Borg (RISE SICS Lund), Markus Bohlin (RISE SICS Västerås), Björn Lisper (Mälardalen University)",
              "abstract": "Timing requirements such as constraints on response time are key characteristics of real-time systems and violations of these requirements might cause a total failure, particularly in hard real-time systems. Runtime monitoring of the system properties is of great importance to check the system status and mitigate such failures. Thus, a runtime control to preserve the system properties could improve the robustness of the system with respect to timing violations. Common control approaches may require a precise analytical model of the system which is difficult to be provided at design time. Reinforcement learning is a promising technique to provide adaptive model-free control when the environment is stochastic, and the control problem could be formulated as a Markov Decision Process. In this paper, we propose an adaptive runtime control using reinforcement learning for real-time programs based on Programmable Logic Controllers (PLCs), to meet the response time requirements. We demonstrate through multiple experiments that our approach could control the response time efficiently to satisfy the timing requirements.",
              "searchText": "2018 ACM/IEEE 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems SEAMS 2018 Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning 1521317594412 Mahshid Helali Moghadam RISE SICS Västerås/Mälardalen University mahshid.helali.moghadam@ri.se Mehrdad Saadatmand RISE SICS Västerås mehrdad.saadatmand@ri.se Markus Borg RISE SICS Lund markus.borg@ri.se Markus Bohlin RISE SICS Västerås markus.bohlin@ri.se Björn Lisper Mälardalen University bjorn.lisper@mdh.se Adaptive response time control PLC-based real-time programs Runtime monitoring Reinforcement learning Timing requirements such as constraints on response time are key characteristics of real-time systems and violations of these requirements might cause a total failure, particularly in hard real-time systems. Runtime monitoring of the system properties is of great importance to check the system status and mitigate such failures. Thus, a runtime control to preserve the system properties could improve the robustness of the system with respect to timing violations. Common control approaches may require a precise analytical model of the system which is difficult to be provided at design time. Reinforcement learning is a promising technique to provide adaptive model-free control when the environment is stochastic, and the control problem could be formulated as a Markov Decision Process. In this paper, we propose an adaptive runtime control using reinforcement learning for real-time programs based on Programmable Logic Controllers (PLCs), to meet the response time requirements. We demonstrate through multiple experiments that our approach could control the response time efficiently to satisfy the timing requirements.",
              "pageNumber": 217,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE Symposium on Software Engineering in Africa",
      "acronym": "SEiA",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/44yJuKuwSNKNFU038eSTlZ/5dB70fD3R3WxwAuSca0jjl.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/2gkCr7KL7wIwf1r7M7Ofoo/5KrM2CNQWqZCSTX541mukO.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/6Ql99BTGcz7LuEmxmOVyqN/8dAjqAAAcXDZbKQ4buD9D.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/39XUrPXz1qMMPd4ie5elos/AyWUNB8mn6YoJ2EKP3wex.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5AJzNiSpeHg18K3EwXZFHC/1Ftoo1YcMzwwzm9kHd6nbG.pdf",
          "extraLocations": [],
          "pageNumber": 7,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from SEiA 2018 Chairs",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5CWTF5u7mOXswVHxNzpHjy/3EJGKawlrd9fNkpCPsYDzJ.pdf",
          "extraLocations": [],
          "pageNumber": 10,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5NQgiy0eYtwh06nCyPO6pD/01qxlcqRcsXkE8ji8WUa0t.pdf",
          "extraLocations": [],
          "pageNumber": 12,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/74D1BD5ZwSQRG5oJj1tWmu/3BC87qmMAo4rVHdz05lxZD.pdf",
          "extraLocations": [],
          "pageNumber": 13,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1wAG2U67Zum5KZouzDhGld/2hLdfxSkZWmN54pdtmCe7N.pdf",
          "extraLocations": [],
          "pageNumber": 55,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WDFF8jYclMGinLf8spM1I/4pkxoXm1qGTdDQLm8UCqKT.pdf",
          "extraLocations": [],
          "pageNumber": 56,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEiA - Natural Language Processing and Semantic Technologies",
          "lineItems": [
            {
              "id": "1iEpqSKPnrBtI4ZKjGhoF3",
              "type": "authorPaper",
              "text": "Consolidation of BI Efforts in the LOD Era for African Context",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/7IN0KXb2e9LBJzL91T8FBv/3YS6q37zv8wrCOYAYBboFS.pdf",
              "extraLocations": [],
              "authorNames": "Khouri Selma (Ecole nationale Supérieure d'Informatique), Bellatreche Ladjel (LIAS/ISAE-ENSMA)",
              "abstract": "During the last few years, we assist to spectacular increase of Business intelligence and analytics (BI&A) software revenue in the Middle East and Africa (MENA) totaled \\$245 million in 2014, a 12 percent increase from 2013 revenue of \\$219 million, according to Gartner, Inc. The Linked Open Data (LOD) era will contribute positively in keeping this dynamic. LOD datasets complete internal sources by new and relevant information for decision making. This integration in the data warehousing landscape has become a necessity. Recent studies conducted mainly in Europe have been proposed for this direction. Similarly, to first studies of conventional DW design, LOD driven approaches focused on data issues (like integration and multidimensionality) and ignored the importance of functional and non-functional requirements. This issue is a precondition for the success of BI&A projects in Africa. This continent is living an interesting phenomenon related to the multiplication of Open Data initiatives. Based on our experience on developing BI&A projects, our origin and knowing the European and African contexts, we propose a requirement-driven approach for designing semantic data warehouses from internal and LOD datasets, by considering requirements incrementally. All phases of our approach is formalized allowing a traceability of requirements. Experiments are conducted that show the impact of incorporating exploratory requirements at the schema level and at the instance level of the target warehouse. A case study analyzing book sales transactions is given.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Consolidation of BI Efforts in the LOD Era for African Context 1521302823643 Khouri Selma Ecole nationale Supérieure d'Informatique s_khouri@esi.dz Bellatreche Ladjel LIAS/ISAE-ENSMA bellatreche@ensma.fr Requirements engineering Data warehouses Semantic Web Linked Open Data During the last few years, we assist to spectacular increase of Business intelligence and analytics (BI&A) software revenue in the Middle East and Africa (MENA) totaled \\$245 million in 2014, a 12 percent increase from 2013 revenue of \\$219 million, according to Gartner, Inc. The Linked Open Data (LOD) era will contribute positively in keeping this dynamic. LOD datasets complete internal sources by new and relevant information for decision making. This integration in the data warehousing landscape has become a necessity. Recent studies conducted mainly in Europe have been proposed for this direction. Similarly, to first studies of conventional DW design, LOD driven approaches focused on data issues (like integration and multidimensionality) and ignored the importance of functional and non-functional requirements. This issue is a precondition for the success of BI&A projects in Africa. This continent is living an interesting phenomenon related to the multiplication of Open Data initiatives. Based on our experience on developing BI&A projects, our origin and knowing the European and African contexts, we propose a requirement-driven approach for designing semantic data warehouses from internal and LOD datasets, by considering requirements incrementally. All phases of our approach is formalized allowing a traceability of requirements. Experiments are conducted that show the impact of incorporating exploratory requirements at the schema level and at the instance level of the target warehouse. A case study analyzing book sales transactions is given.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEiA - Big Data",
          "lineItems": [
            {
              "id": "3Pa5ArnArjklVAyGLocGGp",
              "type": "authorPaper",
              "text": "A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3k6JxR3FkmMf5UYiLrpX7x/SIxQrEnAUYfGkvnQWXDCD.pdf",
              "extraLocations": [],
              "authorNames": "Janvier Omar Sinayobye (Makerere University), Fred Kiwanuka (Makerere University), Swaib Kaawaase Kyanda (Makerere University)",
              "abstract": "The area of fraud detection has been traditionally correlated with data mining and text mining. Even before the \"big data\" phenomena started in 2008, text mining and data mining were used as instruments of fraud detection. However, the limited technological capabilities of the pre-big data technologies made it very difficult for researchers to run fraud detection algorithms on large amounts of data. This paper reviews the existing research done in fraud detection across different areas with the aim of investigating the machine learning techniques used and find out their strengths and weaknesses. It used the systematic quantitative literature review methodology to review the research studies in the field of fraud detection research within the last decade using machine learning techniques. Various combinations of keywords were used to identify the pertinent articles and were retrieved from ACM Digital Library, IEEE Xplorer Digital Library, Science Direct, Springer Link, etc. This search used a sample of 80 relevant articles (peer-reviewed journals articles and conference papers). The most used machine learning techniques were identified, and their strengths and weaknesses. Finally, the conclusion, limitations and future work have been shown.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research 1523941377558 Janvier Omar Sinayobye Makerere University sijaom2@gmail.com Fred Kiwanuka Makerere University kiwanoah@gmail.com Swaib Kaawaase Kyanda Makerere University sijaom2@gmail.com Data mining systematic literature review Machine learning Fraud detection Areas of fraud The area of fraud detection has been traditionally correlated with data mining and text mining. Even before the \"big data\" phenomena started in 2008, text mining and data mining were used as instruments of fraud detection. However, the limited technological capabilities of the pre-big data technologies made it very difficult for researchers to run fraud detection algorithms on large amounts of data. This paper reviews the existing research done in fraud detection across different areas with the aim of investigating the machine learning techniques used and find out their strengths and weaknesses. It used the systematic quantitative literature review methodology to review the research studies in the field of fraud detection research within the last decade using machine learning techniques. Various combinations of keywords were used to identify the pertinent articles and were retrieved from ACM Digital Library, IEEE Xplorer Digital Library, Science Direct, Springer Link, etc. This search used a sample of 80 relevant articles (peer-reviewed journals articles and conference papers). The most used machine learning techniques were identified, and their strengths and weaknesses. Finally, the conclusion, limitations and future work have been shown.",
              "pageNumber": 11,
              "isPageNumberRoman": false
            },
            {
              "id": "6LUIxk4xg5g0bPzAUv5k5X",
              "type": "authorPaper",
              "text": "Big Data: Deep Learning for Detecting Malware",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/4wTsnBSWYtxDPQmlCpV3xg/6T2SMwlGsnEMQ83s5zFd0E.pdf",
              "extraLocations": [],
              "authorNames": "Emmanuel Masabo (Makerere University), Kyanda Swaib Kaawaase (Makerere University), Julianne Sansa-Otim (Makerere University)",
              "abstract": "Malicious software, commonly known as malware are constantly getting smarter with the capabilities of undergoing self-modifcations. They are produced in big numbers and widely deployed very fast through the Internet-capable devices. This is therefore a big data problem and remains challenging in the research community. Existing detection methods should be enhanced in order to e?ectively deal with today’s malware. In this paper, we propose a novel realtime monitoring, analysis and detection approach that is achieved by applying big data analytics and machine learning in the development of a general detection model. The learnings achieved through big data render machine learning more efcient. Using the deep learning approach, we designed and developed a scalable detection model that brings improvement to the existing solutions. Our experiments achieved an accuracy of 97% and ROC of 0.99.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Big Data: Deep Learning for Detecting Malware 1521705204003 Emmanuel Masabo Makerere University masabem@gmail.com Kyanda Swaib Kaawaase Makerere University kswaibk@cis.mak.ac.ug Julianne Sansa-Otim Makerere University sansa@cit.ac.ug Big data Analytics Malware detection Machine learning Deep learning Malicious software, commonly known as malware are constantly getting smarter with the capabilities of undergoing self-modifcations. They are produced in big numbers and widely deployed very fast through the Internet-capable devices. This is therefore a big data problem and remains challenging in the research community. Existing detection methods should be enhanced in order to e?ectively deal with today’s malware. In this paper, we propose a novel realtime monitoring, analysis and detection approach that is achieved by applying big data analytics and machine learning in the development of a general detection model. The learnings achieved through big data render machine learning more efcient. Using the deep learning approach, we designed and developed a scalable detection model that brings improvement to the existing solutions. Our experiments achieved an accuracy of 97% and ROC of 0.99.",
              "pageNumber": 20,
              "isPageNumberRoman": false
            },
            {
              "id": "6PHxt8lp53rISOLYOQIlSA",
              "type": "authorPaper",
              "text": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf",
              "extraLocations": [],
              "authorNames": "Andrew Lukyamuzi (Mbarara University of Science and Technology), John Ngubiri (Makerere University), Washington Okori (Uganda Technology and Management University)",
              "abstract": "Data mining algorithms can be applied to extract useful patterns from social media conversations to monitor disasters such as tsunami, earth quakes and nuclear power accidents. While food insecurity has persistently remained a world concern, its monitoring with this strategy has received limited attention. In attempt to address this concern, UN Global Pulse demonstrated that tweets reporting food prices from Indonesians can aid in predicting actual food price increase. For regions like Kenya and Uganda where use of tweets is considered low, this option can be problematic. Using Uganda as a case study, this study takes an alternative of using tweets from all over the world with mentions of; (1) uganda +food, (2) uganda + hunger, and (3) uganda + famine for years 2014, 2015 and 2016. The study however utilized tweets on food insecurity instead of tweets on food prices. In the first step, five data mining algorithms (D-tree, SVM, KNN, Neural Networks and N-Bayes) were trained to identify tweets conversations on food insecurity. Algorithmic performance were found comparable with human labeled tweet on the same subject. In step two, tweets reporting food insecurity were generated into trends. Comparing with trends from Uganda Bureau of Statistics, promising findings have been obtained with correlation coefficients of 0.56 and 0.37 for years 2015 and 2016 respectively. The study provides a strategy to generate information about food insecurity for stakeholders such asWorld Food Program in Uganda for mitigation action or further investigation depending on the situation. To improve performance, future work can; (1) aggregate tweets with other datasets, (2) ensemble algorithms, and (3) apply unexplored algorithms.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Tracking Food Insecurity from Tweets Using Data Mining Techniques 1523943431668 Andrew Lukyamuzi Mbarara University of Science and Technology andrewlukyamuzi@gmail.com John Ngubiri Makerere University ngubiri@cit.ac.ug Washington Okori Uganda Technology and Management University gokori@gmail.com Food insecurity Social Networks Big Data Web Text Mining Machine Learning Algorithms Data mining algorithms can be applied to extract useful patterns from social media conversations to monitor disasters such as tsunami, earth quakes and nuclear power accidents. While food insecurity has persistently remained a world concern, its monitoring with this strategy has received limited attention. In attempt to address this concern, UN Global Pulse demonstrated that tweets reporting food prices from Indonesians can aid in predicting actual food price increase. For regions like Kenya and Uganda where use of tweets is considered low, this option can be problematic. Using Uganda as a case study, this study takes an alternative of using tweets from all over the world with mentions of; (1) uganda +food, (2) uganda + hunger, and (3) uganda + famine for years 2014, 2015 and 2016. The study however utilized tweets on food insecurity instead of tweets on food prices. In the first step, five data mining algorithms (D-tree, SVM, KNN, Neural Networks and N-Bayes) were trained to identify tweets conversations on food insecurity. Algorithmic performance were found comparable with human labeled tweet on the same subject. In step two, tweets reporting food insecurity were generated into trends. Comparing with trends from Uganda Bureau of Statistics, promising findings have been obtained with correlation coefficients of 0.56 and 0.37 for years 2015 and 2016 respectively. The study provides a strategy to generate information about food insecurity for stakeholders such asWorld Food Program in Uganda for mitigation action or further investigation depending on the situation. To improve performance, future work can; (1) aggregate tweets with other datasets, (2) ensemble algorithms, and (3) apply unexplored algorithms.",
              "pageNumber": 27,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "SEiA - SE Methodologies",
          "lineItems": [
            {
              "id": "3jZqDFLpSYwR9Zl8pWd9ug",
              "type": "authorPaper",
              "text": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf",
              "extraLocations": [],
              "authorNames": "Degif Teka (Hawassa University), Yvonne Dittrich (IT University of Copenhagen), Mesfin Kifle (Addis Ababa University)",
              "abstract": "User-centered design (UCD) addresses the design of interactive systems placing the users in the center of the design with the aim of improving usability and user experience. Developing economies are in dear need of UCD; low IT literacy, low infrastructure and funds; and heterogeneity in culture and livelihood result in special requirements on usability in order to harvest the possible benefits of IT. Traditional UCD methods, however, are often regarded as heavy-weight and expensive. Agile software development methods are light-weight, flexible and iterative in order to accommodate the changing requirements and unsure funding and are therefore important for IT companies in developing economies. Can we adjust UCD methods to fit the need of developing economies and with agile development while taking advantage of the iterative character of agile development methods? The research appropriated an action research approach called Cooperative Method Development (CMD). Based on the empirical investigation, UCD challenges were identified, innovative use of light-weight UCD methods was deliberated and implemented. The improvements include: working with local IT personnel, light-weight and incremental use of personas, support departments performing acceptance testing on release versions, culturally adapted user testing in pairs and heuristic evaluation as adapted UCD practices. The evaluation together with the involved practitioners shows improvements in the development process including reduced reworks; satisfied users; better collaboration with stakeholders; and a close understanding of users and their needs. The evaluation of the resulting integrated approach with the involved practitioners as well as software engineers not involved in the research indicates that the results are transferable to similar contexts.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Adapting Lightweight User-Centered Design with the Scrum-Based Development Process 1522327664924 Degif Teka Hawassa University degiftk@gmail.com Yvonne Dittrich IT University of Copenhagen ydi@itu.dk Mesfin Kifle Addis Ababa University Kiflemestir95@gmail.com Lightweight UCD Agile Development discount usability methods personas heuristic evaluation user-pair test User-centered design (UCD) addresses the design of interactive systems placing the users in the center of the design with the aim of improving usability and user experience. Developing economies are in dear need of UCD; low IT literacy, low infrastructure and funds; and heterogeneity in culture and livelihood result in special requirements on usability in order to harvest the possible benefits of IT. Traditional UCD methods, however, are often regarded as heavy-weight and expensive. Agile software development methods are light-weight, flexible and iterative in order to accommodate the changing requirements and unsure funding and are therefore important for IT companies in developing economies. Can we adjust UCD methods to fit the need of developing economies and with agile development while taking advantage of the iterative character of agile development methods? The research appropriated an action research approach called Cooperative Method Development (CMD). Based on the empirical investigation, UCD challenges were identified, innovative use of light-weight UCD methods was deliberated and implemented. The improvements include: working with local IT personnel, light-weight and incremental use of personas, support departments performing acceptance testing on release versions, culturally adapted user testing in pairs and heuristic evaluation as adapted UCD practices. The evaluation together with the involved practitioners shows improvements in the development process including reduced reworks; satisfied users; better collaboration with stakeholders; and a close understanding of users and their needs. The evaluation of the resulting integrated approach with the involved practitioners as well as software engineers not involved in the research indicates that the results are transferable to similar contexts.",
              "pageNumber": 35,
              "isPageNumberRoman": false
            },
            {
              "id": "2Px596xsh4HwLsHReojV7q",
              "type": "authorPaper",
              "text": "Partitioning Microservices: A Domain Engineering Approach",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf",
              "extraLocations": [],
              "authorNames": "Immaculée Josélyne Munezero (Makerere University PhD student), Doreen-Tuheirwe Mukasa (Makerere University), Benjamin Kanagwa (Makerere University), Joseph Balikuddembe (Makerere University)",
              "abstract": "Architecture styles in the software world continue to evolve driven by the need to present easier and more appealing ways of designing and building software systems to meet stakeholder needs. One of the popular trends at the moment is microservices. Microservice architecture is gaining the market of software development architecture due to its capability to scale. It separates independent small services of a system to perform one business capability at a time. However, determining the right size of business capability that could be called a microservice is still a challenge. Current practices of partitioning microservice rely on personal practice within industry which is prone to bias by practitioners. Based on the ambiguity of determining the optimum size of a microservice, in this paper, we propose a conceptual methodology to partition a microservice based on domain engineering technique. Domain engineering identifies the information needed by a microservice, services needed for microservice functionality and provides description for workflows in the service.We demonstrate the usage of this methodology on the weather information dissemination domain as a confirmatory case study.We show how to split the weather information dissemination system sub-domain into different microservices that accomplish the weather information dissemination business capability.",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Partitioning Microservices: A Domain Engineering Approach 1523973579898 Immaculée Josélyne Munezero Makerere University PhD student munejosy@gmail.com Doreen-Tuheirwe Mukasa Makerere University tdmk4jc@gmail.com Benjamin Kanagwa Makerere University bkanagwa@gmail.com Joseph Balikuddembe Makerere University jbalikud@cis.mak.ac.ug Sizing microservice DDD pattern weather domain Architecture styles in the software world continue to evolve driven by the need to present easier and more appealing ways of designing and building software systems to meet stakeholder needs. One of the popular trends at the moment is microservices. Microservice architecture is gaining the market of software development architecture due to its capability to scale. It separates independent small services of a system to perform one business capability at a time. However, determining the right size of business capability that could be called a microservice is still a challenge. Current practices of partitioning microservice rely on personal practice within industry which is prone to bias by practitioners. Based on the ambiguity of determining the optimum size of a microservice, in this paper, we propose a conceptual methodology to partition a microservice based on domain engineering technique. Domain engineering identifies the information needed by a microservice, services needed for microservice functionality and provides description for workflows in the service.We demonstrate the usage of this methodology on the weather information dissemination domain as a confirmatory case study.We show how to split the weather information dissemination system sub-domain into different microservices that accomplish the weather information dissemination business capability.",
              "pageNumber": 43,
              "isPageNumberRoman": false
            },
            {
              "id": "16UF3WWBINLTeC8x62lf3b",
              "type": "authorPaper",
              "text": "Planning for Public Sector Software Projects Using Value-Based Requirements Engineering Techniques: A Research Agenda",
              "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5YldhptFinmng9P1H37lnj/wgQnWggQaeQaIO8c6nuEJ.pdf",
              "extraLocations": [],
              "authorNames": "Joseph Kibombo Balikuddembe (Makerere University), Justine Nakirijja (Makerere University)",
              "abstract": "The introduction of e-Government enabled services has resulted in the public- sector wide integration of different software applications, often scaled up to a national level. Out of observation, the way these initiatives are handled differs in the way software-development projects are managed in the private sector. The anticipated value of these projects tends to differ significantly in the long run. We have particularly picked interest in the health sector in which e-Health initiatives have been defined. Our focus aims at understanding how value proliferation can be understood and quantified from the onset on such large-scale projects using requirement engineering techniques. In this work we infer that effective planning of large scale ICT initiatives, such as e-Health, should be long term driven so as to ensure effective sector management. Novel approaches in this realm should strive at linking strategy, measurement and operational decisions from the onset. In here we examine what has been done, key opportunities, challenges and gaps that can be addressed by the research community. In bridging these gaps, we propose an agenda by formulating key research questions which both the industry and academia can address as future direction to align this view",
              "searchText": "2018 ACM/IEEE Symposium on Software Engineering in Africa SEiA 2018 Planning for Public Sector Software Projects Using Value-Based Requirements Engineering Techniques: A Research Agenda 1521490682092 Joseph Kibombo Balikuddembe Makerere University jbalikud@cs.mak.ac.ug Justine Nakirijja Makerere University justnakirijja@cis.mak.ac.ug Value based requirements engineering project planning and success e-Health based projects The introduction of e-Government enabled services has resulted in the public- sector wide integration of different software applications, often scaled up to a national level. Out of observation, the way these initiatives are handled differs in the way software-development projects are managed in the private sector. The anticipated value of these projects tends to differ significantly in the long run. We have particularly picked interest in the health sector in which e-Health initiatives have been defined. Our focus aims at understanding how value proliferation can be understood and quantified from the onset on such large-scale projects using requirement engineering techniques. In this work we infer that effective planning of large scale ICT initiatives, such as e-Health, should be long term driven so as to ensure effective sector management. Novel approaches in this realm should strive at linking strategy, measurement and operational decisions from the onset. In here we examine what has been done, key opportunities, challenges and gaps that can be addressed by the research community. In bridging these gaps, we propose an agenda by formulating key research questions which both the industry and academia can address as future direction to align this view",
              "pageNumber": 50,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    },
    {
      "title": "2018 ACM/IEEE International Conference on Technical Debt",
      "acronym": "TechDebt",
      "year": 2018,
      "frontMatter": [
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_I",
          "text": "Title Page i",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6TyCRgB0biPieiUVrokaFS/M9MGIBFjWm4BBQ12MkrOq.pdf",
          "extraLocations": [],
          "pageNumber": 1,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TITLE_PAGE_III",
          "text": "Title Page iii",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5E5W2B2cpBCvOf6lfNjlTf/54eCjHj4uxcyVPggvTI9Sk.pdf",
          "extraLocations": [],
          "pageNumber": 3,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_COPYRIGHT_PAGE",
          "text": "Copyright Page",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3MizckEGbBj3ADcHvGBAX9/3OtzQxSwntmgh7B5ZivcDh.pdf",
          "extraLocations": [],
          "pageNumber": 4,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TABLE_OF_CONTENTS",
          "text": "Table of Contents",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1As3mn8lCxJtrNrVDqzUbI/5ql6jkGcH2aOv0rFx07dE8.pdf",
          "extraLocations": [],
          "pageNumber": 5,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_GENERAL_CHAIR",
          "text": "Message from ICSE 2018 General Chair",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4GoXThxyfJFqaCSuieo92e/cCQEGXNDkxKSQZC6lYmQu.pdf",
          "extraLocations": [],
          "pageNumber": 8,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_MESSAGE_PROGRAM_CHAIR",
          "text": "Message from TechDebt 2018 Chairs",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7zcdXLeffszfzXMngJGwQR/5dIVJvZwMsW6CXwf5shl7k.pdf",
          "extraLocations": [],
          "pageNumber": 11,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_ORGANIZING_COMMITTEE",
          "text": "Organizing Committee",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5m176VhmRf1WESbdyrOg2u/hsPQFs04r5355JTysjLjh.pdf",
          "extraLocations": [],
          "pageNumber": 12,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_LON_PROGRAM_COMMITTEE",
          "text": "Program Committee",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1NAFVj8mTybs4WYulLwI4Y/3UAYM86fFvqXHXCIK4jJR5.pdf",
          "extraLocations": [],
          "pageNumber": 13,
          "isPageNumberRoman": true
        },
        {
          "class": "FM",
          "type": "FM_TEXT_ACKNOWLEDGEMENTS",
          "text": "ICSE 2018 Sponsors and Supporters",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1JUOHV9JrQx0pKLUxrmqss/1vjQ4nWhqNhbF3BXERdOjy.pdf",
          "extraLocations": [],
          "pageNumber": 15,
          "isPageNumberRoman": true
        }
      ],
      "backMatter": [
        {
          "class": "BM",
          "type": "BM_AUTHOR_INDEX",
          "text": "Author Index",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/48yt0FDzsNxXPvge5ySlUN/673Ju0cEDQzjioPBtXRxYC.pdf",
          "extraLocations": [],
          "pageNumber": 143,
          "isPageNumberRoman": false
        },
        {
          "class": "BM",
          "type": "BM_ROSTER",
          "text": "Publisher's Information",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7Al1tHIFpdg55i1B0cyJN1/7EHyRD8vZ9BKaM1BRJeipH.pdf",
          "extraLocations": [],
          "pageNumber": 144,
          "isPageNumberRoman": false
        }
      ],
      "sections": [
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Incurring Debt",
          "lineItems": [
            {
              "id": "6PufhUNZNndhXa0K3CU83s",
              "type": "authorPaper",
              "text": "An Exploratory Study on the Influence of Developers in Technical Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf",
              "extraLocations": [],
              "authorNames": "Reem Alfayez (University of Southern California), Pooyan Behnamghader (University of Southern California), Kamonphop Srisopha (University of Southern California), Barry Boehm (University of Southern California)",
              "abstract": "Software systems are often developed by many developers who have a varying range of skills and habits. These developers have a big impact on software quality. Understanding how different developers and developer characteristics impact the quality of a software is crucial to properly deploy human resources and help managers improve quality outcomes which is essential for software systems success. Addressing this concern, we conduct a study on how different developers and developer characteristics such as developer seniority in a system, frequency of commits, and interval between commits relate to Technical Debt (TD). We performed a large-scale analysis on 19,088 commits from 38 Apache Java systems and applied multiple statistical analysis tests to evaluate our hypotheses. Our empirical evaluation suggests that developers unequally increase and decrease TD, a developer seniority in a software system and frequency of commits are negatively correlated with the TD the developer induces, and a developer commit interval has a positive correlation with the TD the developer induces.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 An Exploratory Study on the Influence of Developers in Technical Debt 1521144160578 Reem Alfayez University of Southern California alfayez@usc.edu Pooyan Behnamghader University of Southern California pbehnamg@usc.edu Kamonphop Srisopha University of Southern California srisopha@usc.edu Barry Boehm University of Southern California boehm@usc.edu Software Engineering Software Maintenance Technical Debt Project Management Human Factors Developer Experience Developer Contribution Software systems are often developed by many developers who have a varying range of skills and habits. These developers have a big impact on software quality. Understanding how different developers and developer characteristics impact the quality of a software is crucial to properly deploy human resources and help managers improve quality outcomes which is essential for software systems success. Addressing this concern, we conduct a study on how different developers and developer characteristics such as developer seniority in a system, frequency of commits, and interval between commits relate to Technical Debt (TD). We performed a large-scale analysis on 19,088 commits from 38 Apache Java systems and applied multiple statistical analysis tests to evaluate our hypotheses. Our empirical evaluation suggests that developers unequally increase and decrease TD, a developer seniority in a software system and frequency of commits are negatively correlated with the TD the developer induces, and a developer commit interval has a positive correlation with the TD the developer induces.",
              "pageNumber": 1,
              "isPageNumberRoman": false
            },
            {
              "id": "1b76ifXUpBrLPzBY1ESMzZ",
              "type": "authorPaper",
              "text": "Architectural Technical Debt Identification: The Research Landscape",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf",
              "extraLocations": [],
              "authorNames": "Roberto Verdecchia (Gran Sasso Science Institute), Ivano Malavolta (Vrije Universiteit Amsterdam), Patricia Lago (Vrije Universiteit Amsterdam)",
              "abstract": "Architectural Technical Debt (ATD) regards sub-optimal design decisions that bring short-term bene ts to the cost of long-term gradual deterioration of the quality of the architecture of a software system. The identi cation of ATD strongly in uences the technical and economic sustainability of software systems and is attracting growing interest in the scienti c community. During the years several approaches for ATD identi cation have been conceived, each of them addressing ATD from di erent perspectives and with heterogeneous characteristics. In this paper we apply the systematic mapping study methodology for identifying, classifying, and evaluating the state of the art on ATD identi cation from the following three perspectives: publication trends, characteristics, and potential for industrial adoption. Speci cally, starting from a set of 509 potentially relevant studies, we systematically selected 47 primary studies and analyzed them according to a rigorously-de ned classi cation framework. The analysis of the obtained results supports both researchers and practitioners by providing (i) an assessment of current research trends and gaps in ATD identi cation, (ii) a solid foundation for understanding existing (and future) research on ATD identi cation, and (iii) a rigorous evaluation of its potential for industrial adoption.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Architectural Technical Debt Identification: The Research Landscape 1521198873326 Roberto Verdecchia Gran Sasso Science Institute roberto.verdecchia@gssi.it Ivano Malavolta Vrije Universiteit Amsterdam i.malavolta@vu.nl Patricia Lago Vrije Universiteit Amsterdam p.lago@vu.nl Technical debt Software architecture Systematic mapping study Architectural Technical Debt (ATD) regards sub-optimal design decisions that bring short-term bene ts to the cost of long-term gradual deterioration of the quality of the architecture of a software system. The identi cation of ATD strongly in uences the technical and economic sustainability of software systems and is attracting growing interest in the scienti c community. During the years several approaches for ATD identi cation have been conceived, each of them addressing ATD from di erent perspectives and with heterogeneous characteristics. In this paper we apply the systematic mapping study methodology for identifying, classifying, and evaluating the state of the art on ATD identi cation from the following three perspectives: publication trends, characteristics, and potential for industrial adoption. Speci cally, starting from a set of 509 potentially relevant studies, we systematically selected 47 primary studies and analyzed them according to a rigorously-de ned classi cation framework. The analysis of the obtained results supports both researchers and practitioners by providing (i) an assessment of current research trends and gaps in ATD identi cation, (ii) a solid foundation for understanding existing (and future) research on ATD identi cation, and (iii) a rigorous evaluation of its potential for industrial adoption.",
              "pageNumber": 11,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Assessing Debt",
          "lineItems": [
            {
              "id": "2WQ1n7G6Inm2e1UuiJeYoB",
              "type": "authorPaper",
              "text": "Technical Debt as an External Software Attribute",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1qd2sBfCQPyo0T1Fn8EtGj/42wUlzkoTtCbQPTqaf3iox.pdf",
              "extraLocations": [],
              "authorNames": "Luigi Lavazza (Università degli Studi dell'Insubria), Sandro Morasca (Università degli Studi dell'Insubria), Davide Tosi (Università degli Studi dell'Insubria)",
              "abstract": "Background: Technical debt is currently receiving increasing attention from practitioners and researchers. Several metaphors, concepts, and indications concerning technical debt have been introduced, but no agreement exists about a solid definition of technical debt. Objective: We aim at providing a solid basis to the definition of technical debt and the way it should be quantified. Method: We view technical debt as a software quality attribute and therefore we use Measurement Theory, the general reference framework for the quantification of attributes, to define technical debt and its characteristics in a rigorous way. Results: We show that technical debt should be defined as an external software quality attribute. Therefore, it should be quantified via statistical and machine-learning models whose independent variables are internal software quality attributes. Different models may exist, depending on the specific needs and goals of the software product and development environment. Also, technical debt is a multifaceted concept, so different kinds of technical debt exist, related to different quality attributes, such as performance, usability, and maintainability. These different kinds of technical debt should be evaluated individually, so one can better focus on the specific quality issues that need to be addressed. Conclusions: We show that, to provide it with a rigorous basis, technical debt should be considered and measured as an external software attribute. Researchers and practitioners should build models for technical debt and use them to (1) assess the extent of the technical debt and (2) investigate and assess different ways of modifying software to repay technical debt.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Technical Debt as an External Software Attribute 1521007556269 Luigi Lavazza Università degli Studi dell'Insubria luigi.lavazza@uninsubria.it Sandro Morasca Università degli Studi dell'Insubria sandro.morasca@uninsubria.it Davide Tosi Università degli Studi dell'Insubria davide.tosi@uninsubria.it Technical Debt Software Quality Background: Technical debt is currently receiving increasing attention from practitioners and researchers. Several metaphors, concepts, and indications concerning technical debt have been introduced, but no agreement exists about a solid definition of technical debt. Objective: We aim at providing a solid basis to the definition of technical debt and the way it should be quantified. Method: We view technical debt as a software quality attribute and therefore we use Measurement Theory, the general reference framework for the quantification of attributes, to define technical debt and its characteristics in a rigorous way. Results: We show that technical debt should be defined as an external software quality attribute. Therefore, it should be quantified via statistical and machine-learning models whose independent variables are internal software quality attributes. Different models may exist, depending on the specific needs and goals of the software product and development environment. Also, technical debt is a multifaceted concept, so different kinds of technical debt exist, related to different quality attributes, such as performance, usability, and maintainability. These different kinds of technical debt should be evaluated individually, so one can better focus on the specific quality issues that need to be addressed. Conclusions: We show that, to provide it with a rigorous basis, technical debt should be considered and measured as an external software attribute. Researchers and practitioners should build models for technical debt and use them to (1) assess the extent of the technical debt and (2) investigate and assess different ways of modifying software to repay technical debt.",
              "pageNumber": 21,
              "isPageNumberRoman": false
            },
            {
              "id": "gPjbpoOCp4i6ODqJNTmED",
              "type": "authorPaper",
              "text": "Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6U1ZcaHX3Mn3EmMuKpA8sV/26AtvlcHx6w0AZzQjnnDp5.pdf",
              "extraLocations": [],
              "authorNames": "Mashel Albarak (University of Birmingham; King Saud University), Rami Bahsoon (University of Birmingham)",
              "abstract": "Database normalization is the one of main principles for designing relational databases. The benefits of normalization can be observed through improving data quality and performance, among the other qualities. We explore a new context of technical debt manifestation, which is linked to ill-normalized databases. This debt can have long-term impact causing systematic degradation of database qualities. Such degradation can be liken to accumulated interest on a debt. We claim that debts are likely to materialize for tables below the fourth normal form. Practically, achieving fourth normal form for all the tables in the database is a costly and idealistic exercise. Therefore, we propose a pragmatic approach to prioritize tables that should be normalized to the fourth normal form based on the metaphoric debt and interest of the ill-normalized tables, observed on data quality and performance. For data quality, tables are prioritized using the risk of data inconsistency metric. Unlike data quality, a suitable metric to estimate the impact of weakly or un-normalized tables on performance is not available. We estimate performance degradation and its costs using Input/Output (I/O) cost of the operations performed on the tables and we propose a model to estimate this cost for each table. We make use of Modern Portfolio Theory to prioritize tables that should be normalized based on the estimated I/O cost and the likely risk of cost accumulation in the future. To evaluate our methods, we use a case study from Microsoft, AdventureWorks. The results show that our methods can be effective in reducing normalization debt and improving the quality of the database.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics 1521046873660 Mashel Albarak University of Birmingham; King Saud University mesh55@gmail.com Rami Bahsoon University of Birmingham r.bahsoon@cs.bham.ac.uk Technical Debt Database Design Normalization Database normalization is the one of main principles for designing relational databases. The benefits of normalization can be observed through improving data quality and performance, among the other qualities. We explore a new context of technical debt manifestation, which is linked to ill-normalized databases. This debt can have long-term impact causing systematic degradation of database qualities. Such degradation can be liken to accumulated interest on a debt. We claim that debts are likely to materialize for tables below the fourth normal form. Practically, achieving fourth normal form for all the tables in the database is a costly and idealistic exercise. Therefore, we propose a pragmatic approach to prioritize tables that should be normalized to the fourth normal form based on the metaphoric debt and interest of the ill-normalized tables, observed on data quality and performance. For data quality, tables are prioritized using the risk of data inconsistency metric. Unlike data quality, a suitable metric to estimate the impact of weakly or un-normalized tables on performance is not available. We estimate performance degradation and its costs using Input/Output (I/O) cost of the operations performed on the tables and we propose a model to estimate this cost for each table. We make use of Modern Portfolio Theory to prioritize tables that should be normalized based on the estimated I/O cost and the likely risk of cost accumulation in the future. To evaluate our methods, we use a case study from Microsoft, AdventureWorks. The results show that our methods can be effective in reducing normalization debt and improving the quality of the database.",
              "pageNumber": 31,
              "isPageNumberRoman": false
            },
            {
              "id": "4LyrvgERvG2yLi9YOncCSy",
              "type": "authorPaper",
              "text": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf",
              "extraLocations": [],
              "authorNames": "Allan Mori (UFMG), Gustavo Vale (University of Passau), Markos Viggiato (UFMG), Johnatan Oliveira (PUC-Minas), Eduardo Figueiredo (UFMG), Elder Cirilo (UFSJ), Pooyan Jamshidi (CMU), Christian Kastner (CMU)",
              "abstract": "Software metrics and thresholds provide means to quantify several quality attributes of software systems. Indeed, they have been used in a wide variety of methods and tools for detecting different sorts of technical debts, such as code smells. Unfortunately, these methods and tools do not take into account characteristics of software domains, as the intrinsic complexity of geo-localization and scientific software systems or the simple protocols employed by messaging applications. Instead, they rely on generic thresholds that are derived from heterogeneous systems. Although derivation of reliable thresholds has long been a concern, we still lack empirical evidence about threshold variation across distinct software domains. To tackle this limitation, this paper investigates whether and how thresholds vary across domains by presenting a large-scale study on 3,107 software systems from 15 domains. We analyzed the derivation and distribution of thresholds based on 8 well-known source code metrics. As a result, we observed that software domain and size are relevant factors to be considered when building benchmarks for threshold derivation. Moreover, we also observed that domain-specific metric thresholds are more appropriated than generic ones for code smell detection.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Evaluating Domain-Specific Metric Thresholds: An Empirical Study 1521138199504 Allan Mori UFMG allanmori@dcc.ufmg.br Gustavo Vale University of Passau vale@fim.uni-passau.de Markos Viggiato UFMG markosviggiato@dcc.ufmg.br Johnatan Oliveira PUC-Minas johnatan.si@dcc.ufmg.br Eduardo Figueiredo UFMG figueiredo@dcc.ufmg.br Elder Cirilo UFSJ elder@ufsj.edu.br Pooyan Jamshidi CMU pjamshid@andrew.cmu.edu Christian Kastner CMU kaestner@cs.cmu.edu Software metrics thresholds software domains Software metrics and thresholds provide means to quantify several quality attributes of software systems. Indeed, they have been used in a wide variety of methods and tools for detecting different sorts of technical debts, such as code smells. Unfortunately, these methods and tools do not take into account characteristics of software domains, as the intrinsic complexity of geo-localization and scientific software systems or the simple protocols employed by messaging applications. Instead, they rely on generic thresholds that are derived from heterogeneous systems. Although derivation of reliable thresholds has long been a concern, we still lack empirical evidence about threshold variation across distinct software domains. To tackle this limitation, this paper investigates whether and how thresholds vary across domains by presenting a large-scale study on 3,107 software systems from 15 domains. We analyzed the derivation and distribution of thresholds based on 8 well-known source code metrics. As a result, we observed that software domain and size are relevant factors to be considered when building benchmarks for threshold derivation. Moreover, we also observed that domain-specific metric thresholds are more appropriated than generic ones for code smell detection.",
              "pageNumber": 41,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Tools Track",
          "lineItems": [
            {
              "id": "6e5AZOdSUVSKKPFFJSdxIE",
              "type": "authorPaper",
              "text": "Introducing Debtgrep: A Tool for Fighting Technical Debt in Base Station Software",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/g6oFwH3JSwuzHcHuQyIdX/5cFrvKitaSeNFbDHK1JgBu.pdf",
              "extraLocations": [],
              "authorNames": "Svante Arvedahl (Ericsson AB)",
              "abstract": "One of the biggest challenges in a large software development project is to manage technical debt. For example, if an API is replaced by a newer version and the old one is deprecated, there is a big risk that a substantial technical debt is incurred. The time where two versions of an API can co-exist can be quite long, and in a big organization like Ericsson 4G5G Baseband there can be a big challenge to prevent developers from continuing to use deprecated API's. At Ericsson 4G5G Baseband we invented the tool debtgrep to be incorporated in our Continuous Integration machinery. The tool will prevent any new code to be added using deprecated API's, or other configured keywords. The tool has proven very useful in the development of a new product based on a new software architecture. Debtgrep is used for deprecated API's, enforcing design rules, and enforcing architecture rules. The paper describes the behavior and configuration possibilities of the tool, and how it is used at Ericsson 4G5G Baseband.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Introducing Debtgrep: A Tool for Fighting Technical Debt in Base Station Software 1521016785959 Svante Arvedahl Ericsson AB svante.arvedahl@ericsson.com technical debt static analysis software cost One of the biggest challenges in a large software development project is to manage technical debt. For example, if an API is replaced by a newer version and the old one is deprecated, there is a big risk that a substantial technical debt is incurred. The time where two versions of an API can co-exist can be quite long, and in a big organization like Ericsson 4G5G Baseband there can be a big challenge to prevent developers from continuing to use deprecated API's. At Ericsson 4G5G Baseband we invented the tool debtgrep to be incorporated in our Continuous Integration machinery. The tool will prevent any new code to be added using deprecated API's, or other configured keywords. The tool has proven very useful in the development of a new product based on a new software architecture. Debtgrep is used for deprecated API's, enforcing design rules, and enforcing architecture rules. The paper describes the behavior and configuration possibilities of the tool, and how it is used at Ericsson 4G5G Baseband.",
              "pageNumber": 51,
              "isPageNumberRoman": false
            },
            {
              "id": "4rABKxTvCESlzNN9QzQmlR",
              "type": "authorPaper",
              "text": "Static Software Metrics for Reliability and Maintainability",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf",
              "extraLocations": [],
              "authorNames": "Jeremy Ludwig (Stottler Henke Associates), Steven Xu (Stottler Henke Associates), Frederick Webber (Air Force Research Laboratory)",
              "abstract": "This paper identifies a small, essential set of static software code metrics linked to the software product quality characteristics of reliability and maintainability and to the most commonly identified sources of technical debt. An open-source plug-in is created for the Understand code analysis tool that calculates and visualizes these metrics. The plug-in was developed as a first step in an ongoing project aimed at applying case-based reasoning to the issue of software product quality.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Static Software Metrics for Reliability and Maintainability 1520984908400 Jeremy Ludwig Stottler Henke Associates ludwig@stottlerhenke.com Steven Xu Stottler Henke Associates sxu@stottlerhenke.com Frederick Webber Air Force Research Laboratory frederick.webber@us.af.mil Software product quality technical debt reliability maintainability architecture metrics static code analysis This paper identifies a small, essential set of static software code metrics linked to the software product quality characteristics of reliability and maintainability and to the most commonly identified sources of technical debt. An open-source plug-in is created for the Understand code analysis tool that calculates and visualizes these metrics. The plug-in was developed as a first step in an ongoing project aimed at applying case-based reasoning to the issue of software product quality.",
              "pageNumber": 53,
              "isPageNumberRoman": false
            },
            {
              "id": "5ePTn7DGzw5QLtFNMek8JF",
              "type": "authorPaper",
              "text": "AnaConDebt: A Tool to Assess and Track Technical Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4fkLBVFUWnkSDBjv5gLazl/1HX8ny04woSIZuBkiM4q0t.pdf",
              "extraLocations": [],
              "authorNames": "Antonio Martini (University of Oslo)",
              "abstract": "It is challenging to assess and manage Technical Debt. Technical Debt is avoided or refactored if the long-term bene ts, such as preventing extra-costs, exceed the cost of repaying the debt. Some tools have been recently proposed for the identification of Technical Debt, but most of them do not help in assessing the cost-bene ts of repaying the Debt. Besides, it is challenging to track, visualize and plan Technical Debt refactoring systematically. Although practitioners might use simple tracking tools, calculating and communicating Technical Debt is currently not supported. Based on the results of previous research, combined with several practical experiences in collaboration with large software companies, we have developed and evaluated a lightweight tool, AnaCon-Debt, to track and assess Technical Debt.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 AnaConDebt: A Tool to Assess and Track Technical Debt 1520939273857 Antonio Martini University of Oslo antonio.martini@ifi.uio.no Technical Debt Tool Software Management It is challenging to assess and manage Technical Debt. Technical Debt is avoided or refactored if the long-term bene ts, such as preventing extra-costs, exceed the cost of repaying the debt. Some tools have been recently proposed for the identification of Technical Debt, but most of them do not help in assessing the cost-bene ts of repaying the Debt. Besides, it is challenging to track, visualize and plan Technical Debt refactoring systematically. Although practitioners might use simple tracking tools, calculating and communicating Technical Debt is currently not supported. Based on the results of previous research, combined with several practical experiences in collaboration with large software companies, we have developed and evaluated a lightweight tool, AnaCon-Debt, to track and assess Technical Debt.",
              "pageNumber": 55,
              "isPageNumberRoman": false
            },
            {
              "id": "12t8Y2RXD6Gumt9uSEeSDb",
              "type": "authorPaper",
              "text": "Cognitive Complexity — An Overview and Evaluation",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2ksa7SpXQ20IFceb2GK0wK/QrkJzP49BIy23ZmNLqlxX.pdf",
              "extraLocations": [],
              "authorNames": "G. Ann Campbell (SonarSource SA)",
              "abstract": "As a measure of understandability, Cyclomatic Complexity is widely regarded as unsatisfactory, but until December 2016 it was the only one available. This paper describes Cognitive Complexity, a new metric designed specifically to measure understandability, and a brief survey of Cognitive Complexity issues in a subset of open source projects under static analysis on SonarCloud. From this analysis, an assessment is made of whether Cognitive Complexity is accepted or rejected by the developers of each project.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Cognitive Complexity — An Overview and Evaluation 1520968974141 G. Ann Campbell SonarSource SA ann.campbell@sonarsource.com Software and its engineering Maintaining software Software and its engineering Software evolution As a measure of understandability, Cyclomatic Complexity is widely regarded as unsatisfactory, but until December 2016 it was the only one available. This paper describes Cognitive Complexity, a new metric designed specifically to measure understandability, and a brief survey of Cognitive Complexity issues in a subset of open source projects under static analysis on SonarCloud. From this analysis, an assessment is made of whether Cognitive Complexity is accepted or rejected by the developers of each project.",
              "pageNumber": 57,
              "isPageNumberRoman": false
            },
            {
              "id": "3gyA3arUP2fVBLQxOC1Bh8",
              "type": "authorPaper",
              "text": "Prioritize Technical Debt in Large-Scale Systems Using CodeScene",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4ztSp0TzBsjchaxwK0jeuJ/4RLObPqtzuis008tqXOU5O.pdf",
              "extraLocations": [],
              "authorNames": "Adam Tornhill (Empear)",
              "abstract": "Large-scale systems often contain considerable amounts of code that is overly complicated, hard to understand, and hence expensive to change. An organization cannot address and refactor all of that code at once, nor should they. Ideally, actionable refactoring targets should be prioritized based on the technical debt interest rate to balance the trade-offs between improvements, risk, and new features. This paper examines how CodeScene, a tool for predictive analyses and visualizations, can be used to prioritize technical debt in a large-scale codebase like the Linux Kernel based on the most likely return on code improvements.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Prioritize Technical Debt in Large-Scale Systems Using CodeScene 1522928822936 Adam Tornhill Empear adam.tornhill@empear.com technical debt legacy code large-scale systems repository mining CodeScene Vendor Tools Large-scale systems often contain considerable amounts of code that is overly complicated, hard to understand, and hence expensive to change. An organization cannot address and refactor all of that code at once, nor should they. Ideally, actionable refactoring targets should be prioritized based on the technical debt interest rate to balance the trade-offs between improvements, risk, and new features. This paper examines how CodeScene, a tool for predictive analyses and visualizations, can be used to prioritize technical debt in a large-scale codebase like the Linux Kernel based on the most likely return on code improvements.",
              "pageNumber": 59,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Managing the Debt I (Short Papers)",
          "lineItems": [
            {
              "id": "2bKexhjPQkhCU4fEjvPS5A",
              "type": "authorPaper",
              "text": "The Past, Present and Future of Technical Debt: Learning from the Past to Prepare for the Future",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6PpoZXj310wBbyhny82NQl/s6MoSp1NMFp3ZzVDxBaEj.pdf",
              "extraLocations": [],
              "authorNames": "Eoin Woods (Endava)",
              "abstract": "While technical debt has emerged as a formal concept relatively recently we have had technical debt from the earliest days of software development, it has simply evolved in nature. So what can we learn from past types of technical debt to allow us to prepare for its future forms? When we look back over recent software history, we can see identifiable evolutions of software systems, each one roughly aligning with a decade. In this talk we will explore what technical debt has meant during each era of software systems and what this might mean for technical debt in the future.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 The Past, Present and Future of Technical Debt: Learning from the Past to Prepare for the Future 1523390938673 Eoin Woods Endava eoin.woods@endava.com technical debt software evolution While technical debt has emerged as a formal concept relatively recently we have had technical debt from the earliest days of software development, it has simply evolved in nature. So what can we learn from past types of technical debt to allow us to prepare for its future forms? When we look back over recent software history, we can see identifiable evolutions of software systems, each one roughly aligning with a decade. In this talk we will explore what technical debt has meant during each era of software systems and what this might mean for technical debt in the future.",
              "pageNumber": 61,
              "isPageNumberRoman": false
            },
            {
              "id": "5nXlBRB7e6lcxtHmUEr0Zx",
              "type": "authorPaper",
              "text": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf",
              "extraLocations": [],
              "authorNames": "Theodoros Amanatidis (University of Macedonia), Nikolaos Mittas (Aristotle University of Thessaloniki), Alexander Chatzigeorgiou (University of Macedonia), Apostolos Ampatzoglou (University of Macedonia), Lefteris Angelis (Aristotle University of Thessaloniki)",
              "abstract": "The set of concepts collectively known as Technical Debt (TD) assume that software liabilities set up a context that can make a future change more costly or impossible; and therefore repaying the debt should be pursued. However, software developers often disagree with an automatically generated list of improvement suggestions, which they consider not fitting or important for their own code. To shed light into the reasons that drive developers to adopt or reject refactoring opportunities (i.e. TD repayment), we have performed an empirical study on the potential factors that affect the developers? decision to agree with the removal of a specific TD liability. The study has been addressed to the developers of four well-known open-source applications. To increase the response rate, a personalized assessment has first been sent to each developer, summarizing his/her own contribution to the TD of the corresponding project. Responds have been collected through a custom built web application that presented code fragments suffering from violations as identified by SonarQube along with information that could possibly affect their level of agreement to the importance of resolving an issue. These factors include data such as the frequency of past changes in the module under study, the number of bugs, the type and intensity of the violation, the level of involvement of the developer and whether he/she is a contributor in the corresponding project. Multivariate statistical analysis methods have been used to understand the importance and the underlying relationships among these factors and the results are expected to be useful for researchers and practitioners in TD Management.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt 1521053515112 Theodoros Amanatidis University of Macedonia tamanatidis@uom.edu.gr Nikolaos Mittas Aristotle University of Thessaloniki nmittas@csd.auth.gr Alexander Chatzigeorgiou University of Macedonia achat@uom.gr Apostolos Ampatzoglou University of Macedonia apostolos.ampatzoglou@gmail.com Lefteris Angelis Aristotle University of Thessaloniki lef@csd.auth.gr Technical Debt Management refactoring empirical study The set of concepts collectively known as Technical Debt (TD) assume that software liabilities set up a context that can make a future change more costly or impossible; and therefore repaying the debt should be pursued. However, software developers often disagree with an automatically generated list of improvement suggestions, which they consider not fitting or important for their own code. To shed light into the reasons that drive developers to adopt or reject refactoring opportunities (i.e. TD repayment), we have performed an empirical study on the potential factors that affect the developers? decision to agree with the removal of a specific TD liability. The study has been addressed to the developers of four well-known open-source applications. To increase the response rate, a personalized assessment has first been sent to each developer, summarizing his/her own contribution to the TD of the corresponding project. Responds have been collected through a custom built web application that presented code fragments suffering from violations as identified by SonarQube along with information that could possibly affect their level of agreement to the importance of resolving an issue. These factors include data such as the frequency of past changes in the module under study, the number of bugs, the type and intensity of the violation, the level of involvement of the developer and whether he/she is a contributor in the corresponding project. Multivariate statistical analysis methods have been used to understand the importance and the underlying relationships among these factors and the results are expected to be useful for researchers and practitioners in TD Management.",
              "pageNumber": 62,
              "isPageNumberRoman": false
            },
            {
              "id": "sNEODbpfEPhaf65Cc9GNY",
              "type": "authorPaper",
              "text": "From Lasagna to Spaghetti: A Decision Model to Manage Defect Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5q1FRWyZzATg1gOOmQ6eZr/10zLH1Wp6na9rXgsATV2kg.pdf",
              "extraLocations": [],
              "authorNames": "Abdullah Aldaeej (University of Maryland Baltimore County), Carolyn Seaman (University of Maryland Baltimore County)",
              "abstract": "In this paper, we propose a model that formalizes the role of software evolution in characterizing Technical Debt (TD) by defining a series of software product states, where each successive state represents an increased level of maintenance code churn, and thus presumably an increased level of change difficulty. We also propose a way to use these states to estimate TD principal and interest and use this information in decision making during release planning. In addition, we illustrate our model using bug report data from the Eclipse-Birt project.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 From Lasagna to Spaghetti: A Decision Model to Manage Defect Debt 1521147855428 Abdullah Aldaeej University of Maryland Baltimore County aldaeej1@umbc.edu Carolyn Seaman University of Maryland Baltimore County cseaman@umbc.edu Technical debt management Defect debt Software evolution Release planning Decision making In this paper, we propose a model that formalizes the role of software evolution in characterizing Technical Debt (TD) by defining a series of software product states, where each successive state represents an increased level of maintenance code churn, and thus presumably an increased level of change difficulty. We also propose a way to use these states to estimate TD principal and interest and use this information in decision making during release planning. In addition, we illustrate our model using bug report data from the Eclipse-Birt project.",
              "pageNumber": 67,
              "isPageNumberRoman": false
            },
            {
              "id": "2v9GHyW4w5e6hoDMo8Pkde",
              "type": "authorPaper",
              "text": "A Proposed Sizing Model for Managing 3rd Party Code Technical Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2andjewAbaTVM54oMU9aHm/1WW8iz6uh0UUrA3PuoN5SC.pdf",
              "extraLocations": [],
              "authorNames": "Will Snipes (ABB Corporate Research), Srini Ramaswamy (ABB Inc.)",
              "abstract": "Commercial software development projects frequently build code on third-party components. However, depending on third-party code requires that projects keep current with the latest version of each component. When projects do not stay current, they begin to incur a form of technical debt where API calls that have been deprecated remain in the code base. At some point, projects must upgrade the third-party component to remain on a supported version of the component. Then the projects incur the cost of paying down the debt that was built up over time. The model described herein intends to estimate the cost of paying down the debt for aging third-party components. The model is a sigmoid curve that exponentially increases the size of changes required to migrate to the new version as a function of time asymptotically approaching the size for replacing the entire component. The longer the number of elapsed years, the greater the increase in the principal measured as the number of affected lines of code in the user of the third-party software component. This exponential increase in principal is reasonable when we consider longer time horizons are more likely to require replacement of the third-party component entirely due to newer technologies becoming available. Effects of the model were estimated using Monte Carlo simulation due to limited examples of third-party technical debt available for modeling.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 A Proposed Sizing Model for Managing 3rd Party Code Technical Debt 1521140224329 Will Snipes ABB Corporate Research will.snipes@us.abb.com Srini Ramaswamy ABB Inc. srini@ieee.org software components software sizing measurement technical debt Commercial software development projects frequently build code on third-party components. However, depending on third-party code requires that projects keep current with the latest version of each component. When projects do not stay current, they begin to incur a form of technical debt where API calls that have been deprecated remain in the code base. At some point, projects must upgrade the third-party component to remain on a supported version of the component. Then the projects incur the cost of paying down the debt that was built up over time. The model described herein intends to estimate the cost of paying down the debt for aging third-party components. The model is a sigmoid curve that exponentially increases the size of changes required to migrate to the new version as a function of time asymptotically approaching the size for replacing the entire component. The longer the number of elapsed years, the greater the increase in the principal measured as the number of affected lines of code in the user of the third-party software component. This exponential increase in principal is reasonable when we consider longer time horizons are more likely to require replacement of the third-party component entirely due to newer technologies becoming available. Effects of the model were estimated using Monte Carlo simulation due to limited examples of third-party technical debt available for modeling.",
              "pageNumber": 72,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Managing the Debt II",
          "lineItems": [
            {
              "id": "1djknO8QFBIawEBZbLEJsE",
              "type": "authorPaper",
              "text": "Governing Technology Debt: Beyond Technical Debt",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf",
              "extraLocations": [],
              "authorNames": "Johan Magnusson (University of Gothenburg; Westerdal Oslo School of Art), Carlos Juiz (University of the Balearic Islands ), Beatriz Gomez (University of the Balearic Islands ), Belén Bermejo (University of the Balearic Islands)",
              "abstract": "Technical debt has successfully captured the interest of practitioners and researchers alike. We argue that the concept of technical debt holds much more currency within the strategic Information Systems literature. Hence, we have developed a research framework for expanding the concept of technical debt into a new concept we dub “technology debt”. This expanded concept aims at capturing the path-dependencies reported in literature in regard to digital investments, and to make these both researchable and manageable. Technology debt is defined as the constraining effects of previous governance decisions on future decisions, including technical debt as important factor, but not unique. According to the findings, technology debt is a feasible method for highlighting the constraining aspects of IT investments and including these in the investment evaluation by governing body. This offers support for corporate stakeholders involved in the decision-making surrounding IT related investments, particularly in IT governance and management processes.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Governing Technology Debt: Beyond Technical Debt 1520938009069 Johan Magnusson University of Gothenburg; Westerdal Oslo School of Art johan.magnusson@gu.se Carlos Juiz University of the Balearic Islands cjuiz@uib.es Beatriz Gomez University of the Balearic Islands b.gomez@uib.es Belén Bermejo University of the Balearic Islands belen.bermejo@uib.es IT investments Technical debt Technology debt IT governance Technical debt has successfully captured the interest of practitioners and researchers alike. We argue that the concept of technical debt holds much more currency within the strategic Information Systems literature. Hence, we have developed a research framework for expanding the concept of technical debt into a new concept we dub “technology debt”. This expanded concept aims at capturing the path-dependencies reported in literature in regard to digital investments, and to make these both researchable and manageable. Technology debt is defined as the constraining effects of previous governance decisions on future decisions, including technical debt as important factor, but not unique. According to the findings, technology debt is a feasible method for highlighting the constraining aspects of IT investments and including these in the investment evaluation by governing body. This offers support for corporate stakeholders involved in the decision-making surrounding IT related investments, particularly in IT governance and management processes.",
              "pageNumber": 76,
              "isPageNumberRoman": false
            },
            {
              "id": "4UkIAYLa3GtvrZJAL8tQ27",
              "type": "authorPaper",
              "text": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf",
              "extraLocations": [],
              "authorNames": "Christoph Becker (University of Toronto), Ruzanna Chitchyan (University of Bristol), Stefanie Betz (Karlsruhe Institute of Technology), Curtis McCord (University of Toronto)",
              "abstract": "Technical Debt arises from decisions that favour short-term outcomes at the cost of longer-term disadvantages. They may be taken knowingly or based on missing or incomplete awareness of the costs; they are taken in different roles, situations, stages and ways. Whatever technical or business factor motivate such decisions, they always imply a trade-off in time, a 'now vs. later'. How exactly are such decisions made, and how have they been studied? This paper analyzes how decisions on technical debt are studied in software engineering via a systematic literature review. It examines the presently published Software Engineering research on Technical Debt, with a particular focus on decisions involving time. The findings reveal surprising gaps in published work on empirical research in decision making. We observe that research has rarely studied how decisions are made, even in papers that focus on the decision process. Instead, most attention is focused on engineering measures and feeding them into an idealized decision making process. These findings lead to a set of recommendations for future empirical research on Technical Debt.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review 1521161031738 Christoph Becker University of Toronto christoph.becker@utoronto.ca Ruzanna Chitchyan University of Bristol r.chitchyan@bristol.ac.uk Stefanie Betz Karlsruhe Institute of Technology stefanie.betz@kit.edu Curtis McCord University of Toronto curtis.mccord@mail.utoronto.ca technical debt decision making time intertemporal choice naturalistic rationalistic behavioral software engineering Technical Debt arises from decisions that favour short-term outcomes at the cost of longer-term disadvantages. They may be taken knowingly or based on missing or incomplete awareness of the costs; they are taken in different roles, situations, stages and ways. Whatever technical or business factor motivate such decisions, they always imply a trade-off in time, a 'now vs. later'. How exactly are such decisions made, and how have they been studied? This paper analyzes how decisions on technical debt are studied in software engineering via a systematic literature review. It examines the presently published Software Engineering research on Technical Debt, with a particular focus on decisions involving time. The findings reveal surprising gaps in published work on empirical research in decision making. We observe that research has rarely studied how decisions are made, even in papers that focus on the decision process. Instead, most attention is focused on engineering measures and feeding them into an idealized decision making process. These findings lead to a set of recommendations for future empirical research on Technical Debt.",
              "pageNumber": 85,
              "isPageNumberRoman": false
            },
            {
              "id": "2i9ouk3aeiTea3BTqtR7Fa",
              "type": "authorPaper",
              "text": "Design Debt Prioritization: A Design Best Practice-Based Approach",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf",
              "extraLocations": [],
              "authorNames": "Reinhold Plösch (Johannes Kepler University), Johannes Bräuer (Johannes Kepler University), Matthias Saft (Corporate Technology Siemens AG), Christian Körner (Corporate Technology Siemens AG)",
              "abstract": "Technical debt (TD) in a software system is a metaphor that tries to illustrate the remediation effort of the already introduced quality deficit and the impact thereof to the business value of the system. To address TD, various management activities are proposed, each addressing a particular purpose. Whereas the activities of debt identification and measurement are broadly considered in literature, the activities of debt prioritization and communication lack appropriate approaches with an economic perspective. This work proposes a TD prioritization approach. Therefore, it narrows down the focus of TD to design debt and relies on the quantification of design best practices. Further, the non-conformance of these practices is assessed by applying a benchmarking technique. As a result, the gained information is transferred into a portfolio-matrix to support the prioritization and communication of design remediation actions. The applicability and suitability of the approach are demonstrat by using the source code of the open source project GeoGebra.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Design Debt Prioritization: A Design Best Practice-Based Approach 1521031812219 Reinhold Plösch Johannes Kepler University reinhold.ploesch@jku.at Johannes Bräuer Johannes Kepler University johannes.braeuer@jku.at Matthias Saft Corporate Technology Siemens AG matthias.saft@siemens.com Christian Körner Corporate Technology Siemens AG christian.koerner@siemens.com design quality technical debt design debt debt prioritization Technical debt (TD) in a software system is a metaphor that tries to illustrate the remediation effort of the already introduced quality deficit and the impact thereof to the business value of the system. To address TD, various management activities are proposed, each addressing a particular purpose. Whereas the activities of debt identification and measurement are broadly considered in literature, the activities of debt prioritization and communication lack appropriate approaches with an economic perspective. This work proposes a TD prioritization approach. Therefore, it narrows down the focus of TD to design debt and relies on the quantification of design best practices. Further, the non-conformance of these practices is assessed by applying a benchmarking technique. As a result, the gained information is transferred into a portfolio-matrix to support the prioritization and communication of design remediation actions. The applicability and suitability of the approach are demonstrat by using the source code of the open source project GeoGebra.",
              "pageNumber": 95,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Practice in Industry",
          "lineItems": [
            {
              "id": "25EkUAUkbMsdLYHBhLC4h3",
              "type": "authorPaper",
              "text": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf",
              "extraLocations": [],
              "authorNames": "Terese Besker (Chalmers University of Technology), Antonio Martini (CA Technologies; University of Oslo), Jan Bosch (Chalmers University of Technology)",
              "abstract": "Software companies need to continuously deliver customer value, both from a short-and long-term perspective. However, software development can be impeded by what has been described as Technical Debt (TD). The aim of this study is to explore the negative consequences of TD in terms of wasted software development time. This study also investigates on which additional activities this wasted time is spent and whether different types of TD impact the wasted time differently. This study also sets out to examine the benefits of tracking and communicating the amount of wasted time, both from a developer's and manager's perspective. This paper reports the results of a longitudinal study, surveying 43 software developers, together with follow-up interviews with 16 industrial software practitioners. The analysis of the reported wasted time revealed that developers waste, on average, 23% of their development time due to TD and that they are frequently forced to introduce new TD due to already existing TD. The most common activity on which additional time is spent is performing additional testing.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work 1520952928536 Terese Besker Chalmers University of Technology besker@chalmers.se Antonio Martini CA Technologies; University of Oslo antonima@ifi.uio.no Jan Bosch Chalmers University of Technology Jan.Bosch@chalmers.se Technical Debt Wasted Time Software Development Software Productivity Longitudinal Study Empirical Study Software companies need to continuously deliver customer value, both from a short-and long-term perspective. However, software development can be impeded by what has been described as Technical Debt (TD). The aim of this study is to explore the negative consequences of TD in terms of wasted software development time. This study also investigates on which additional activities this wasted time is spent and whether different types of TD impact the wasted time differently. This study also sets out to examine the benefits of tracking and communicating the amount of wasted time, both from a developer's and manager's perspective. This paper reports the results of a longitudinal study, surveying 43 software developers, together with follow-up interviews with 16 industrial software practitioners. The analysis of the reported wasted time revealed that developers waste, on average, 23% of their development time due to TD and that they are frequently forced to introduce new TD due to already existing TD. The most common activity on which additional time is spent is performing additional testing.",
              "pageNumber": 105,
              "isPageNumberRoman": false
            },
            {
              "id": "7JMInmxWP9sT9Gm60vnib0",
              "type": "authorPaper",
              "text": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf",
              "extraLocations": [],
              "authorNames": "Areti Ampatzoglou (University of Groningen), Alexandros Michailidis (International Hellenic University), Christos Sarikyriakidis (University of Western Macedonia), Apostolos Ampatzoglou (University of Macedonia), Alexander Chatzigeorgiou (University of Macedonia), Paris Avgeriou (University of Groningen)",
              "abstract": "Technical debt management entails the quantification of principal and interest. In our previous work we had introduced a framework for calculating the Technical Debt Breaking Point (TD-BP), which is a point in time where the accumulated interest becomes larger than the principal; thus the debt of the company is no longer sustainable after this point in time. In this paper, we instantiate this framework and validate its ability to assess the breaking point of source code modules in an industrial setting. The results of the validation suggest that the calculated TD-BP is strongly correlated to experts' opinion on the sustainability of modules, and that it can accurately rank components, based on their maintenance difficulty.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 A Framework for Managing Interest in Technical Debt: An Industrial Validation 1520977192357 Areti Ampatzoglou University of Groningen areti.ampatzoglou@rug.nl Alexandros Michailidis International Hellenic University alex.michailidis.dev@gmail.com Christos Sarikyriakidis University of Western Macedonia xsarikiriakidis@gmail.com Apostolos Ampatzoglou University of Macedonia aposolos.ampatzoglou@gmail.com Alexander Chatzigeorgiou University of Macedonia achat@uom.gr Paris Avgeriou University of Groningen paris@cs.rug.nl technical debt interest empirical study Technical debt management entails the quantification of principal and interest. In our previous work we had introduced a framework for calculating the Technical Debt Breaking Point (TD-BP), which is a point in time where the accumulated interest becomes larger than the principal; thus the debt of the company is no longer sustainable after this point in time. In this paper, we instantiate this framework and validate its ability to assess the breaking point of source code modules in an industrial setting. The results of the validation suggest that the calculated TD-BP is strongly correlated to experts' opinion on the sustainability of modules, and that it can accurately rank components, based on their maintenance difficulty.",
              "pageNumber": 115,
              "isPageNumberRoman": false
            },
            {
              "id": "4eCe0jKz7dzcN723KzONpG",
              "type": "authorPaper",
              "text": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf",
              "extraLocations": [],
              "authorNames": "Justus Bogner (University of Applied Sciences Reutlingen), Jonas Fritzsch (University of Stuttgart), Stefan Wagner (University of Stuttgart), Alfred Zimmermann (University of Applied Sciences Reutlingen)",
              "abstract": "Maintainability assurance techniques are used to control this quality attribute and limit the accumulation of potentially unknown technical debt. Since the industry state of practice and especially the handling of Service-and Microservice-Based Systems in this regard are not well covered in scientific literature, we created a survey to gather evidence for a) used processes, tools, and metrics in the industry, b) maintainability-related treatment of systems based on service-orientation, and c) influences on developer satisfaction w.r.t. maintainability. 60 software professionals responded to our online questionnaire. The results indicate that using explicit and systematic techniques has benefits for maintainability. The more sophisticated the applied methods the more satisfied participants were with the maintainability of their software while no link to a hindrance in productivity could be established. Other important findings were the absence of architecture-level evolvability control mechanisms as well as a significant neglect of service-oriented particularities for quality assurance. The results suggest that industry has to improve its quality control in these regards to avoid problems with long-living service-based software systems.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems 1521016831404 Justus Bogner University of Applied Sciences Reutlingen justus.bogner@reutlingen-university.de Jonas Fritzsch University of Stuttgart jonas.fritzsch@informatik.uni-stuttgart.de Stefan Wagner University of Stuttgart stefan.wagner@informatik.uni-stuttgart.de Alfred Zimmermann University of Applied Sciences Reutlingen alfred.zimmermann@reutlingen-university.de Maintainability software quality control survey industry service based systems microservice-based systems Maintainability assurance techniques are used to control this quality attribute and limit the accumulation of potentially unknown technical debt. Since the industry state of practice and especially the handling of Service-and Microservice-Based Systems in this regard are not well covered in scientific literature, we created a survey to gather evidence for a) used processes, tools, and metrics in the industry, b) maintainability-related treatment of systems based on service-orientation, and c) influences on developer satisfaction w.r.t. maintainability. 60 software professionals responded to our online questionnaire. The results indicate that using explicit and systematic techniques has benefits for maintainability. The more sophisticated the applied methods the more satisfied participants were with the maintainability of their software while no link to a hindrance in productivity could be established. Other important findings were the absence of architecture-level evolvability control mechanisms as well as a significant neglect of service-oriented particularities for quality assurance. The results suggest that industry has to improve its quality control in these regards to avoid problems with long-living service-based software systems.",
              "pageNumber": 125,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        },
        {
          "class": "SD",
          "type": "SD_SESSION",
          "title": "TechDebt 2018 - Future Research (Short Papers)",
          "lineItems": [
            {
              "id": "1xiQguKxAarmQ2ZamkCXVo",
              "type": "authorPaper",
              "text": "Technical Debt-Related Information Asymmetry between Finance and IT",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/69zACLZ55yBa2lNn06NsOW/5X6PgrnbtjGaWartOUTDUU.pdf",
              "extraLocations": [],
              "authorNames": "Thomas Stablein (University of South Florida), Donald Berndt (University of South Florida), Matthew Mullarkey (University of South Florida)",
              "abstract": "This position paper proposes a new stream of research targeted at technical debt as a source of information asymmetry between finance and IT professionals involved in information technology investment decisions. Finance teams interact with technology teams in several ways, predominantly when business cases require review and during the annual budgeting process. During these discrete interactions, finance teams are required to digest large amounts of technical strategy and architectural information chockfull of technical terminology and diagrams. Typically, the estimates for effort are soft and risk is difficult to measure. It is within this context that finance approves budgets and projects that inevitably result in the accumulation of technical debt. This paper discusses some of the dynamics at work between finance and IT teams within large complex organizations when they meet to make technology investment decisions. In addition, future research is proposed aimed at reducing information asymmetry, thereby leading to improved IT investment decisions and better management of technical debt.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 Technical Debt-Related Information Asymmetry between Finance and IT 1523799955435 Thomas Stablein University of South Florida tstablein@mail.usf.edu Donald Berndt University of South Florida dberndt@usf.edu Matthew Mullarkey University of South Florida mmullarkey@usf.edu technical debt information asymmetry IT investment decision making This position paper proposes a new stream of research targeted at technical debt as a source of information asymmetry between finance and IT professionals involved in information technology investment decisions. Finance teams interact with technology teams in several ways, predominantly when business cases require review and during the annual budgeting process. During these discrete interactions, finance teams are required to digest large amounts of technical strategy and architectural information chockfull of technical terminology and diagrams. Typically, the estimates for effort are soft and risk is difficult to measure. It is within this context that finance approves budgets and projects that inevitably result in the accumulation of technical debt. This paper discusses some of the dynamics at work between finance and IT teams within large complex organizations when they meet to make technology investment decisions. In addition, future research is proposed aimed at reducing information asymmetry, thereby leading to improved IT investment decisions and better management of technical debt.",
              "pageNumber": 134,
              "isPageNumberRoman": false
            },
            {
              "id": "6W26LvikBkVgOly1YUsasz",
              "type": "authorPaper",
              "text": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
              "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf",
              "extraLocations": [],
              "authorNames": "Clemente Izurieta (Montana State University), Kali Kimball (Georgia College & State University), David Rice (Montana State University), Tessa Valentien (Georgia Institute of Technology)",
              "abstract": "Context: Managing technical debt (TD) associated with potential security breaches found during design can lead to catching vulnerabilities (i.e., exploitable weaknesses) earlier in the software lifecycle; thus, anticipating TD principal and interest that can have decidedly negative impacts on businesses. Goal: To establish an approach to help assess TD associated with security weaknesses by leveraging the Common Weakness Enumeration (CWE) and its scoring mechanism, the Common Weakness Scoring System (CWSS). Method: We present a position study with a five-step approach employing the Quamoco quality model to operationalize the scoring of architectural CWEs. Results: We use static analysis to detect design level CWEs, calculate their CWSS scores, and provide a relative ranking of weaknesses that help practitioners identify the highest risks in an organization with a potential to impact TD. Conclusion: CWSS is a community agreed upon method that should be leveraged to help inform the ranking of security related TD items.",
              "searchText": "2018 ACM/IEEE International Conference on Technical Debt TechDebt 2018 A Position Study to Investigate Technical Debt Associated with Security Weaknesses 1520901182814 Clemente Izurieta Montana State University clemente.izurieta@montana.edu Kali Kimball Georgia College & State University kali.kimball@bobcats.gcsu.edu David Rice Montana State University davidrice3@montana.edu Tessa Valentien Georgia Institute of Technology tvalentien3@gatech.edu quality assurance software quality technical debt Context: Managing technical debt (TD) associated with potential security breaches found during design can lead to catching vulnerabilities (i.e., exploitable weaknesses) earlier in the software lifecycle; thus, anticipating TD principal and interest that can have decidedly negative impacts on businesses. Goal: To establish an approach to help assess TD associated with security weaknesses by leveraging the Common Weakness Enumeration (CWE) and its scoring mechanism, the Common Weakness Scoring System (CWSS). Method: We present a position study with a five-step approach employing the Quamoco quality model to operationalize the scoring of architectural CWEs. Results: We use static analysis to detect design level CWEs, calculate their CWSS scores, and provide a relative ranking of weaknesses that help practitioners identify the highest risks in an organization with a potential to impact TD. Conclusion: CWSS is a community agreed upon method that should be leveraged to help inform the ranking of security related TD items.",
              "pageNumber": 138,
              "isPageNumberRoman": false
            }
          ],
          "pageNumber": "",
          "isPageNumberRoman": false,
          "chair": ""
        }
      ]
    }
  ],
  "authors": [
    {
      "author": {
        "givenName": "Mohamed",
        "surname": "Abdelrazek"
      },
      "authorName": "Abdelrazek, Mohamed",
      "articleRefs": [
        {
          "pageNumber": 219,
          "articleName": "Vision: Improved Development of Mobile eHealth Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf"
        },
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paola",
        "surname": "Accioly"
      },
      "authorName": "Accioly, Paola",
      "articleRefs": [
        {
          "pageNumber": 576,
          "articleName": "Analyzing Conflict Predictors in Open-Source Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rohan",
        "surname": "Achar"
      },
      "authorName": "Achar, Rohan",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dinesh",
        "surname": "Acharya"
      },
      "authorName": "Acharya, Dinesh",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bram",
        "surname": "Adams"
      },
      "authorName": "Adams, Bram",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Feature Location Using Crowd-Based Screencasts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf"
        },
        {
          "pageNumber": 353,
          "articleName": "The Open-Closed Principle of Modern Machine Learning Frameworks",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Olusola",
        "surname": "Adesope"
      },
      "authorName": "Adesope, Olusola",
      "articleRefs": [
        {
          "pageNumber": 286,
          "articleName": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Afsoon",
        "surname": "Afzal"
      },
      "authorName": "Afzal, Afsoon",
      "articleRefs": [
        {
          "pageNumber": 114,
          "articleName": "A Study on the Use of IDE Features for Debugging",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tfhWhVMkdDfI2Dv4891FU/6Y8xYSkFixxV48LgNdhrYF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Amritanshu",
        "surname": "Agrawal"
      },
      "authorName": "Agrawal, Amritanshu",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wolfgang",
        "surname": "Ahrendt"
      },
      "authorName": "Ahrendt, Wolfgang",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "Testing Meets Static and Runtime Verification",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Efthimia",
        "surname": "Aivaloglou"
      },
      "authorName": "Aivaloglou, Efthimia",
      "articleRefs": [
        {
          "pageNumber": 308,
          "articleName": "Code Phonology: An Exploration into the Vocalization of Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hakan",
        "surname": "Aksu"
      },
      "authorName": "Aksu, Hakan",
      "articleRefs": [
        {
          "pageNumber": 233,
          "articleName": "Classification of APIs by Hierarchical Clustering",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2v9V1LqIFYYVjMhRIeEs3v/4N0UdyVH3nIDyokrYsNoDq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mashel",
        "surname": "Albarak"
      },
      "authorName": "Albarak, Mashel",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6U1ZcaHX3Mn3EmMuKpA8sV/26AtvlcHx6w0AZzQjnnDp5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sahin",
        "surname": "Albayrak"
      },
      "authorName": "Albayrak, Sahin",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/33X1ybju3dwW3NQegEQDtT/6Cj9Kc8OxCe0hk2TuSZJve.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Abdullah",
        "surname": "Aldaeej"
      },
      "authorName": "Aldaeej, Abdullah",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "From Lasagna to Spaghetti: A Decision Model to Manage Defect Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5q1FRWyZzATg1gOOmQ6eZr/10zLH1Wp6na9rXgsATV2kg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel",
        "surname": "Alencar da Costa"
      },
      "authorName": "Alencar da Costa, Daniel",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "L’Erario",
        "surname": "Alexandre"
      },
      "authorName": "Alexandre, L’Erario",
      "articleRefs": [
        {
          "pageNumber": 44,
          "articleName": "A Process for Distributed Software Evolution",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Reem",
        "surname": "Alfayez"
      },
      "authorName": "Alfayez, Reem",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "An Exploratory Study on the Influence of Developers in Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ziad",
        "surname": "Al Halabi"
      },
      "authorName": "Al Halabi, Ziad",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mathias",
        "surname": "Allemand"
      },
      "authorName": "Allemand, Mathias",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zakarea",
        "surname": "Al Shara"
      },
      "authorName": "Al Shara, Zakarea",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Theodoros",
        "surname": "Amanatidis"
      },
      "authorName": "Amanatidis, Theodoros",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sven",
        "surname": "Amann"
      },
      "authorName": "Amann, Sven",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Amit Seal",
        "surname": "Ami"
      },
      "authorName": "Ami, Amit Seal",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "MobiCoMonkey - Context Testing of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rahul",
        "surname": "Amlekar"
      },
      "authorName": "Amlekar, Rahul",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Apostolos",
        "surname": "Ampatzoglou"
      },
      "authorName": "Ampatzoglou, Apostolos",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        },
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Areti",
        "surname": "Ampatzoglou"
      },
      "authorName": "Ampatzoglou, Areti",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kijin",
        "surname": "An"
      },
      "authorName": "An, Kijin",
      "articleRefs": [
        {
          "pageNumber": 180,
          "articleName": "Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/67gfBNc0dr0P1DQH78eAGU/2g2EA4pFdwSe4GsF2eqxyq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haley",
        "surname": "Anderson"
      },
      "authorName": "Anderson, Haley",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lefteris",
        "surname": "Angelis"
      },
      "authorName": "Angelis, Lefteris",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cláudio Sant'",
        "surname": "Anna"
      },
      "authorName": "Anna, Cláudio Sant'",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ryo",
        "surname": "Arima"
      },
      "authorName": "Arima, Ryo",
      "articleRefs": [
        {
          "pageNumber": 316,
          "articleName": "Toward Refactoring Evaluation with Code Naturalness",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1wLm0llzu4fwdsdZMv5CbV/1ci2pkCSPuLgIPN21eTZIQ.pdf"
        },
        {
          "pageNumber": 336,
          "articleName": "A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? —",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2FaENRgCasXURrdA1YYXET/3ytP2Fi5twQBv6D30oq5vQ.pdf"
        },
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Venera",
        "surname": "Arnaoudova"
      },
      "authorName": "Arnaoudova, Venera",
      "articleRefs": [
        {
          "pageNumber": 286,
          "articleName": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf"
        },
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Svante",
        "surname": "Arvedahl"
      },
      "authorName": "Arvedahl, Svante",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Introducing Debtgrep: A Tool for Fighting Technical Debt in Base Station Software",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/g6oFwH3JSwuzHcHuQyIdX/5cFrvKitaSeNFbDHK1JgBu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nour",
        "surname": "Assy"
      },
      "authorName": "Assy, Nour",
      "articleRefs": [
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Abigail",
        "surname": "Atchison"
      },
      "authorName": "Atchison, Abigail",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        },
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joanne",
        "surname": "Atlee"
      },
      "authorName": "Atlee, Joanne",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marco",
        "surname": "Aurélio Gerosa"
      },
      "authorName": "Aurélio Gerosa, Marco",
      "articleRefs": [
        {
          "pageNumber": 277,
          "articleName": "Impacts of Coding Practices on Readability",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6w0SFpqKAKc3TBdO05ttCj/2MK67SaEQGfvRUPQ9pFzVl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marco",
        "surname": "Autili"
      },
      "authorName": "Autili, Marco",
      "articleRefs": [
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Iman",
        "surname": "Avazpour"
      },
      "authorName": "Avazpour, Iman",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vitalii",
        "surname": "Avdiienko"
      },
      "authorName": "Avdiienko, Vitalii",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paris",
        "surname": "Avgeriou"
      },
      "authorName": "Avgeriou, Paris",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alberto",
        "surname": "Bacchelli"
      },
      "authorName": "Bacchelli, Alberto",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rami",
        "surname": "Bahsoon"
      },
      "authorName": "Bahsoon, Rami",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6U1ZcaHX3Mn3EmMuKpA8sV/26AtvlcHx6w0AZzQjnnDp5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xue",
        "surname": "Bai"
      },
      "authorName": "Bai, Xue",
      "articleRefs": [
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Bainbridge"
      },
      "authorName": "Bainbridge, David",
      "articleRefs": [
        {
          "pageNumber": 389,
          "articleName": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Leonardo",
        "surname": "Baiser"
      },
      "authorName": "Baiser, Leonardo",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nikhila",
        "surname": "Balaji"
      },
      "authorName": "Balaji, Nikhila",
      "articleRefs": [
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joseph",
        "surname": "Balikuddembe"
      },
      "authorName": "Balikuddembe, Joseph",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joseph Kibombo",
        "surname": "Balikuddembe"
      },
      "authorName": "Balikuddembe, Joseph Kibombo",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Planning for Public Sector Software Projects Using Value-Based Requirements Engineering Techniques: A Research Agenda",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5YldhptFinmng9P1H37lnj/wgQnWggQaeQaIO8c6nuEJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark",
        "surname": "Ballandies"
      },
      "authorName": "Ballandies, Mark",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sebastian",
        "surname": "Baltes"
      },
      "authorName": "Baltes, Sebastian",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Arosha K.",
        "surname": "Bandara"
      },
      "authorName": "Bandara, Arosha K.",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luciano",
        "surname": "Baresi"
      },
      "authorName": "Baresi, Luciano",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Konstantinos",
        "surname": "Barmpis"
      },
      "authorName": "Barmpis, Konstantinos",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jed",
        "surname": "Barson"
      },
      "authorName": "Barson, Jed",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Julian M.",
        "surname": "Bass"
      },
      "authorName": "Bass, Julian M.",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Benoit",
        "surname": "Baudry"
      },
      "authorName": "Baudry, Benoit",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gabriele",
        "surname": "Bavota"
      },
      "authorName": "Bavota, Gabriele",
      "articleRefs": [
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Olga",
        "surname": "Baysal"
      },
      "authorName": "Baysal, Olga",
      "articleRefs": [
        {
          "pageNumber": 106,
          "articleName": "Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7nbYnyE9hZggqbfgQX5KLC/7dmrlRpgEBUXuzgQEUjC0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guilherme",
        "surname": "B. de Pádua"
      },
      "authorName": "B. de Pádua, Guilherme",
      "articleRefs": [
        {
          "pageNumber": 564,
          "articleName": "Studying the Relationship between Exception Handling Practices and Post-Release Defects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YGRIbJjMeNQAV17b2ymJ9/yKCiY9IwfDACgeJQbjY4L.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Flavio",
        "surname": "Beck"
      },
      "authorName": "Beck, Flavio",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Software Engineering Tools Environment for Outsourcing Teams Collaboration",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2lImER8Y1axu5ueud93SAc/5YpcyX6t463sAS2tbRc3jY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christoph",
        "surname": "Becker"
      },
      "authorName": "Becker, Christoph",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sarah",
        "surname": "Beecham"
      },
      "authorName": "Beecham, Sarah",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pooyan",
        "surname": "Behnamghader"
      },
      "authorName": "Behnamghader, Pooyan",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "An Exploratory Study on the Influence of Developers in Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Farnaz",
        "surname": "Behrang"
      },
      "authorName": "Behrang, Farnaz",
      "articleRefs": [
        {
          "pageNumber": 236,
          "articleName": "GUIFetch: Supporting App Design and Development through GUI Search",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Felix",
        "surname": "Beierle"
      },
      "authorName": "Beierle, Felix",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Beigl"
      },
      "authorName": "Beigl, Michael",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christopher",
        "surname": "Bellman"
      },
      "authorName": "Bellman, Christopher",
      "articleRefs": [
        {
          "pageNumber": 106,
          "articleName": "Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7nbYnyE9hZggqbfgQX5KLC/7dmrlRpgEBUXuzgQEUjC0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luciano",
        "surname": "Bello"
      },
      "authorName": "Bello, Luciano",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Ares: Triggering Payload of Evasive Android Malware",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1kwoE4IsWlbBcNdOplxNHd/7uM7gUAKRHWP2Xgy3303zJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Houssem",
        "surname": "Ben Braiek"
      },
      "authorName": "Ben Braiek, Houssem",
      "articleRefs": [
        {
          "pageNumber": 353,
          "articleName": "The Open-Closed Principle of Modern Machine Learning Frameworks",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nelly",
        "surname": "Bencomo"
      },
      "authorName": "Bencomo, Nelly",
      "articleRefs": [
        {
          "pageNumber": 12,
          "articleName": "DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-functional Requirements Trade-Off",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7q5F99vJVOh1uAmp2uEWz7/1Nki1M3SjX06D2rphANLXt.pdf"
        },
        {
          "pageNumber": 19,
          "articleName": "RE-STORM: Mapping the Decision-Making Problem and Non-functional Requirements Trade-Off to Partially Observable Markov Decision Processes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1AplVy6AlFdsLXU7K9WoG4/2ESFN2MR9Vb4xC6FlAUfF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jose I.",
        "surname": "Benedetto"
      },
      "authorName": "Benedetto, Jose I.",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Robert",
        "surname": "Benkoczi"
      },
      "authorName": "Benkoczi, Robert",
      "articleRefs": [
        {
          "pageNumber": 331,
          "articleName": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Amel",
        "surname": "Bennaceur"
      },
      "authorName": "Bennaceur, Amel",
      "articleRefs": [
        {
          "pageNumber": 194,
          "articleName": "Agree to Disagree: Security Requirements are Different, but Mechanisms for Security Adaptation are Not",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3QGgS1lHfIF4Tv0IDBgJSw/36UkGXMQcGDUKUaA7gVrrO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexandre",
        "surname": "Bergel"
      },
      "authorName": "Bergel, Alexandre",
      "articleRefs": [
        {
          "pageNumber": 492,
          "articleName": "Imprecisions Diagnostic in Source Code Deltas",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Annika",
        "surname": "Berger"
      },
      "authorName": "Berger, Annika",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Adrienne",
        "surname": "Bergh"
      },
      "authorName": "Bergh, Adrienne",
      "articleRefs": [
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Belén",
        "surname": "Bermejo"
      },
      "authorName": "Bermejo, Belén",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Carlos",
        "surname": "Bernal-Cárdenas"
      },
      "authorName": "Bernal-Cárdenas, Carlos",
      "articleRefs": [
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "João Helis",
        "surname": "Bernardo"
      },
      "authorName": "Bernardo, João Helis",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Donald",
        "surname": "Berndt"
      },
      "authorName": "Berndt, Donald",
      "articleRefs": [
        {
          "pageNumber": 134,
          "articleName": "Technical Debt-Related Information Asymmetry between Finance and IT",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/69zACLZ55yBa2lNn06NsOW/5X6PgrnbtjGaWartOUTDUU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bernard",
        "surname": "Berthomieu"
      },
      "authorName": "Berthomieu, Bernard",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Terese",
        "surname": "Besker"
      },
      "authorName": "Besker, Terese",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Natalie",
        "surname": "Best"
      },
      "authorName": "Best, Natalie",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stefanie",
        "surname": "Betz"
      },
      "authorName": "Betz, Stefanie",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stefanie",
        "surname": "Beyer"
      },
      "authorName": "Beyer, Stefanie",
      "articleRefs": [
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Domenico",
        "surname": "Bianculli"
      },
      "authorName": "Bianculli, Domenico",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tegawendé",
        "surname": "Bissyandé"
      },
      "authorName": "Bissyandé, Tegawendé",
      "articleRefs": [
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Arianna",
        "surname": "Blasi"
      },
      "authorName": "Blasi, Arianna",
      "articleRefs": [
        {
          "pageNumber": 320,
          "articleName": "RepliComment: Identifying Clones in Code Comments",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2pliSydiWl7XslV2J2egVH/3s77fQ7QuChavo8uJWTye5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yoann",
        "surname": "Blein"
      },
      "authorName": "Blein, Yoann",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Extending Specification Patterns for Verification of Parametric Traces",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Barry",
        "surname": "Boehm"
      },
      "authorName": "Boehm, Barry",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "An Exploratory Study on the Influence of Developers in Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Justus",
        "surname": "Bogner"
      },
      "authorName": "Bogner, Justus",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Markus",
        "surname": "Bohlin"
      },
      "authorName": "Bohlin, Markus",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andreas",
        "surname": "Bollin"
      },
      "authorName": "Bollin, Andreas",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paulo",
        "surname": "Borba"
      },
      "authorName": "Borba, Paulo",
      "articleRefs": [
        {
          "pageNumber": 576,
          "articleName": "Analyzing Conflict Predictors in Open-Source Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Aimee",
        "surname": "Borda"
      },
      "authorName": "Borda, Aimee",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        },
        {
          "pageNumber": 64,
          "articleName": "Self-Adaptive Automata",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3dxozXoAX7AlDorzFPfQPU/1PbhgVqGQskwRy91V4mPTJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Markus",
        "surname": "Borg"
      },
      "authorName": "Borg, Markus",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jan",
        "surname": "Bosch"
      },
      "authorName": "Bosch, Jan",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ivana",
        "surname": "Bosnin"
      },
      "authorName": "Bosnin, Ivana",
      "articleRefs": [
        {
          "pageNumber": 112,
          "articleName": "Team Resilience in Distributed Student Projects",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/9xrYvdkZUJ4SsOoN7AUk4/5gWaxwm8gDtppv8ZvECrTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Miguel",
        "surname": "Botto-Tobar"
      },
      "authorName": "Botto-Tobar, Miguel",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Frédéric",
        "surname": "Boulanger"
      },
      "authorName": "Boulanger, Frédéric",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Formal Verification of Automotive Embedded Software",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johann",
        "surname": "Bourcier"
      },
      "authorName": "Bourcier, Johann",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ben-Elias",
        "surname": "Brandt"
      },
      "authorName": "Brandt, Ben-Elias",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johannes",
        "surname": "Bräuer"
      },
      "authorName": "Bräuer, Johannes",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Katie",
        "surname": "Brey"
      },
      "authorName": "Brey, Katie",
      "articleRefs": [
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lionel",
        "surname": "Briand"
      },
      "authorName": "Briand, Lionel",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patricia",
        "surname": "Brockmann"
      },
      "authorName": "Brockmann, Patricia",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "East Meets West: Global Software Engineering Course in Japan and Germany",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tibor",
        "surname": "Brunner"
      },
      "authorName": "Brunner, Tibor",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        },
        {
          "pageNumber": 393,
          "articleName": "The CodeCompass Comprehension Framework",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/uR5cigvgpepUoRX1Aeeq3/6eOKh60JCax8ks2bTR9xr1.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tyson",
        "surname": "Bulmer"
      },
      "authorName": "Bulmer, Tyson",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Predicting Developers' IDE Commands with Machine Learning",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3sIkWAZkujnhOEp1TgwToe/6hZmbi8mq10FXusX1xqFGM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tomas",
        "surname": "Bures"
      },
      "authorName": "Bures, Tomas",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rajeev",
        "surname": "BV"
      },
      "authorName": "BV, Rajeev",
      "articleRefs": [
        {
          "pageNumber": 16,
          "articleName": "Control Based Management to Self Organizing Agile Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1XqmM122hfF9YfOQq0DIQ1/4jDyX0YEicjIoIemsyqzIP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Antuan",
        "surname": "Byalik"
      },
      "authorName": "Byalik, Antuan",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hugo",
        "surname": "Caballero"
      },
      "authorName": "Caballero, Hugo",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haipeng",
        "surname": "Cai"
      },
      "authorName": "Cai, Haipeng",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf"
        },
        {
          "pageNumber": 80,
          "articleName": "ICC-Inspect: Supporting Runtime Inspection of Android Inter-Component Communications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/79ZgCqLFF9opAYHe8coy4l/25kpTIpW1VVxjjoh3biB75.pdf"
        },
        {
          "pageNumber": 265,
          "articleName": "Leveraging Historical Versions of Android Apps for Efficient and Precise Taint Analysis",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YO2FQIRP9udip8vAOMYyN/41wfwDnmzQjsSxizDP6kZ7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yuanfang",
        "surname": "Cai"
      },
      "authorName": "Cai, Yuanfang",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrew",
        "surname": "Cain"
      },
      "authorName": "Cain, Andrew",
      "articleRefs": [
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paolo",
        "surname": "Calciati"
      },
      "authorName": "Calciati, Paolo",
      "articleRefs": [
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fabio",
        "surname": "Calefato"
      },
      "authorName": "Calefato, Fabio",
      "articleRefs": [
        {
          "pageNumber": 14,
          "articleName": "A Gold Standard for Emotion Annotation in Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2zXXCaCZSLbHi9Q37UvpS9/ND7YXM1z7MerOP41IKQNG.pdf"
        },
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        },
        {
          "pageNumber": 387,
          "articleName": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Javier",
        "surname": "Cámara"
      },
      "authorName": "Cámara, Javier",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joao Ricardo Moreno",
        "surname": "Camilo"
      },
      "authorName": "Camilo, Joao Ricardo Moreno",
      "articleRefs": [
        {
          "pageNumber": 44,
          "articleName": "A Process for Distributed Software Evolution",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "G. Ann",
        "surname": "Campbell"
      },
      "authorName": "Campbell, G. Ann",
      "articleRefs": [
        {
          "pageNumber": 57,
          "articleName": "Cognitive Complexity — An Overview and Evaluation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2ksa7SpXQ20IFceb2GK0wK/QrkJzP49BIy23ZmNLqlxX.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Justin",
        "surname": "Cappos"
      },
      "authorName": "Cappos, Justin",
      "articleRefs": [
        {
          "pageNumber": 281,
          "articleName": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maximilian",
        "surname": "Capraro"
      },
      "authorName": "Capraro, Maximilian",
      "articleRefs": [
        {
          "pageNumber": 515,
          "articleName": "The Patch-Flow Method for Measuring Inner Source Collaboration",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/67njFKnNg6BjSnzLM71Lr3/2Of8xip4ODYotv9xuWma7t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Germán",
        "surname": "Cáseres"
      },
      "authorName": "Cáseres, Germán",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nathan",
        "surname": "Cassee"
      },
      "authorName": "Cassee, Nathan",
      "articleRefs": [
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fernando",
        "surname": "Castor"
      },
      "authorName": "Castor, Fernando",
      "articleRefs": [
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Diego",
        "surname": "Castro"
      },
      "authorName": "Castro, Diego",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "Analysis of Test Log Information through Interactive Visualizations",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7p0pFx8bE7YnSOAPX5sD3B/3295UHUN0aAFM1x6oW69xy.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Keenen",
        "surname": "Cates"
      },
      "authorName": "Cates, Keenen",
      "articleRefs": [
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gemma",
        "surname": "Catolino"
      },
      "authorName": "Catolino, Gemma",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Does Source Code Quality Reflect the Ratings of Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7owz03DYR7RdSX0ZHXkBoA/4WJIMi1KIKSr1MOsbsoP3B.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guilherme",
        "surname": "Cavalcanti"
      },
      "authorName": "Cavalcanti, Guilherme",
      "articleRefs": [
        {
          "pageNumber": 576,
          "articleName": "Analyzing Conflict Predictors in Open-Source Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Igor",
        "surname": "Cavrak"
      },
      "authorName": "Cavrak, Igor",
      "articleRefs": [
        {
          "pageNumber": 112,
          "articleName": "Team Resilience in Distributed Student Projects",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/9xrYvdkZUJ4SsOoN7AUk4/5gWaxwm8gDtppv8ZvECrTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bruno",
        "surname": "C. da Silva"
      },
      "authorName": "C. da Silva, Bruno",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mariano",
        "surname": "Ceccato"
      },
      "authorName": "Ceccato, Mariano",
      "articleRefs": [
        {
          "pageNumber": 24,
          "articleName": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sanchit",
        "surname": "Chadha"
      },
      "authorName": "Chadha, Sanchit",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Samarjit",
        "surname": "Chakraborty"
      },
      "authorName": "Chakraborty, Samarjit",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kyriakos",
        "surname": "Chatzidimitriou"
      },
      "authorName": "Chatzidimitriou, Kyriakos",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexander",
        "surname": "Chatzigeorgiou"
      },
      "authorName": "Chatzigeorgiou, Alexander",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        },
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christos",
        "surname": "Chatzilenas"
      },
      "authorName": "Chatzilenas, Christos",
      "articleRefs": [
        {
          "pageNumber": 38,
          "articleName": "Word Embeddings for the Software Engineering Domain",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2yUcqdZ1sGSWDujwCuUbAN/1gygjbeTTFatgdTevMgK1V.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Meiru",
        "surname": "Che"
      },
      "authorName": "Che, Meiru",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Edgar",
        "surname": "Chen"
      },
      "authorName": "Chen, Edgar",
      "articleRefs": [
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jianfeng",
        "surname": "Chen"
      },
      "authorName": "Chen, Jianfeng",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paul",
        "surname": "Chen"
      },
      "authorName": "Chen, Paul",
      "articleRefs": [
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xianglong",
        "surname": "Chen"
      },
      "authorName": "Chen, Xianglong",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiangqun",
        "surname": "Chen"
      },
      "authorName": "Chen, Xiangqun",
      "articleRefs": [
        {
          "pageNumber": 266,
          "articleName": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jesus Mauricio",
        "surname": "Chimento"
      },
      "authorName": "Chimento, Jesus Mauricio",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "Testing Meets Static and Runtime Verification",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ruzanna",
        "surname": "Chitchyan"
      },
      "authorName": "Chitchyan, Ruzanna",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Christensen"
      },
      "authorName": "Christensen, Michael",
      "articleRefs": [
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Agnieszka",
        "surname": "Ciborowska"
      },
      "authorName": "Ciborowska, Agnieszka",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Elder",
        "surname": "Cirilo"
      },
      "authorName": "Cirilo, Elder",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jürgen",
        "surname": "Cito"
      },
      "authorName": "Cito, Jürgen",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Structured Information on State and Evolution of Dockerfiles on GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tbcdm06zSC6TEH3VA6arE/4bOo28bCYpLh3XngDSLPNJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maëlick",
        "surname": "Claes"
      },
      "authorName": "Claes, Maëlick",
      "articleRefs": [
        {
          "pageNumber": 387,
          "articleName": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf"
        },
        {
          "pageNumber": 437,
          "articleName": "Towards Automatically Identifying Paid Open Source Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tony",
        "surname": "Clear"
      },
      "authorName": "Clear, Tony",
      "articleRefs": [
        {
          "pageNumber": 59,
          "articleName": "Enhancing Product and Service Capability Through Scaling Agility in a Global Software Vendor Environment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2AkvJTXKQgZWHcNHYMd5NI/3FPSt2essGR5J3fAk6jdr3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel",
        "surname": "Clifford"
      },
      "authorName": "Clifford, Daniel",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eldan",
        "surname": "Cohen"
      },
      "authorName": "Cohen, Eldan",
      "articleRefs": [
        {
          "pageNumber": 426,
          "articleName": "Large-Scale Analysis of the Co-commit Patterns of the Active Developers in GitHub's Top Repositories",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2PSyuH7pzNXAyM3k94rV14/4xBLmX21LTvLL87RoQ8NCx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zack",
        "surname": "Coker"
      },
      "authorName": "Coker, Zack",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mariano P.",
        "surname": "Consens"
      },
      "authorName": "Consens, Mariano P.",
      "articleRefs": [
        {
          "pageNumber": 426,
          "articleName": "Large-Scale Analysis of the Co-commit Patterns of the Active Developers in GitHub's Top Repositories",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2PSyuH7pzNXAyM3k94rV14/4xBLmX21LTvLL87RoQ8NCx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eleni",
        "surname": "Constantinou"
      },
      "authorName": "Constantinou, Eleni",
      "articleRefs": [
        {
          "pageNumber": 181,
          "articleName": "On the Impact of Security Vulnerabilities in the npm Package Dependency Network",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/smpJmx8mh2G24jvMxWglO/63i23sBR9g3TNrLmC7312D.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Leonardo",
        "surname": "Corbalan"
      },
      "authorName": "Corbalan, Leonardo",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "James R.",
        "surname": "Cordy"
      },
      "authorName": "Cordy, James R.",
      "articleRefs": [
        {
          "pageNumber": 19,
          "articleName": "Adventures in NICAD: A Ten-Year Retrospective",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3dyEgnWgi4SanttaR1D7Oq/2yxP0yLYjDnuU8PilT2tqu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Agostino",
        "surname": "Cortesi"
      },
      "authorName": "Cortesi, Agostino",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marcia",
        "surname": "Cristina de C. Costa"
      },
      "authorName": "Cristina de C. Costa, Marcia",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        },
        {
          "pageNumber": 40,
          "articleName": "Software Engineering Tools Environment for Outsourcing Teams Collaboration",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2lImER8Y1axu5ueud93SAc/5YpcyX6t463sAS2tbRc3jY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Breno Dantas",
        "surname": "Cruz"
      },
      "authorName": "Cruz, Breno Dantas",
      "articleRefs": [
        {
          "pageNumber": 37,
          "articleName": "Programming Support for Data Intensive Distributed Mobile Applications at the Edge",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6AInFsuS2npMMVQb2C0TNM/2Szrs7IunbJrTEJ0wVFXwV.pdf"
        },
        {
          "pageNumber": 94,
          "articleName": "Intent to Share: Enhancing Android Inter-Component Communication for Distributed Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1S3Dd6OotKwfzlcbu8Wh4b/6GRtupRJo5b5742PvsDHTl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christoph",
        "surname": "Csallner"
      },
      "authorName": "Csallner, Christoph",
      "articleRefs": [
        {
          "pageNumber": 224,
          "articleName": "P2A: A Tool for Converting Pixels to Animated Mobile Application User Interfaces",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7f8hN7Pn6xO9QPMQzw9HO6/5VIEG0Hexz560riIylXdr7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Márton",
        "surname": "Csordás"
      },
      "authorName": "Csordás, Márton",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alfonso",
        "surname": "Cuitiño"
      },
      "authorName": "Cuitiño, Alfonso",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maheswaree Kissoon",
        "surname": "Curumsing"
      },
      "authorName": "Curumsing, Maheswaree Kissoon",
      "articleRefs": [
        {
          "pageNumber": 219,
          "articleName": "Vision: Improved Development of Mobile eHealth Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Silvano",
        "surname": "Dal Zilio"
      },
      "authorName": "Dal Zilio, Silvano",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kostadin",
        "surname": "Damevski"
      },
      "authorName": "Damevski, Kostadin",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniela",
        "surname": "Damian"
      },
      "authorName": "Damian, Daniela",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Predicting Developers' IDE Commands with Machine Learning",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3sIkWAZkujnhOEp1TgwToe/6hZmbi8mq10FXusX1xqFGM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mirko",
        "surname": "D'Angelo"
      },
      "authorName": "D'Angelo, Mirko",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Decentralized Self-Adaptive Computing at the Edge",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ARtYkQVUB7hixaSKTqTgw/23slMjtin7WgSIOAwLF4fI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tatiana",
        "surname": "D. Borghi"
      },
      "authorName": "D. Borghi, Tatiana",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexandre",
        "surname": "Decan"
      },
      "authorName": "Decan, Alexandre",
      "articleRefs": [
        {
          "pageNumber": 181,
          "articleName": "On the Impact of Security Vulnerabilities in the npm Package Dependency Network",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/smpJmx8mh2G24jvMxWglO/63i23sBR9g3TNrLmC7312D.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Decker"
      },
      "authorName": "Decker, Michael",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jonas",
        "surname": "Deeterfelt"
      },
      "authorName": "Deeterfelt, Jonas",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thomas",
        "surname": "Degueule"
      },
      "authorName": "Degueule, Thomas",
      "articleRefs": [
        {
          "pageNumber": 170,
          "articleName": "An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4wPidAyFv816mgEv4y4ufk/7t0r9Hn1L3qqIJ7X8vb4zo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guillermo",
        "surname": "de la Torre"
      },
      "authorName": "de la Torre, Guillermo",
      "articleRefs": [
        {
          "pageNumber": 492,
          "articleName": "Imprecisions Diagnostic in Source Code Deltas",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rogério",
        "surname": "de Lemos"
      },
      "authorName": "de Lemos, Rogério",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Self-Adaptation Made Easy with Blockchains",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6dibjBLDaYcGaOjkTzaMaR/1XoumyUqtQMhBIdWn4XePu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lisandro",
        "surname": "Delia"
      },
      "authorName": "Delia, Lisandro",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wito",
        "surname": "Delnat"
      },
      "authorName": "Delnat, Wito",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gregory S.",
        "surname": "DeLozier"
      },
      "authorName": "DeLozier, Gregory S.",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrea",
        "surname": "De Lucia"
      },
      "authorName": "De Lucia, Andrea",
      "articleRefs": [
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Biniam Fisseha",
        "surname": "Demissie"
      },
      "authorName": "Demissie, Biniam Fisseha",
      "articleRefs": [
        {
          "pageNumber": 24,
          "articleName": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bowen",
        "surname": "Deng"
      },
      "authorName": "Deng, Bowen",
      "articleRefs": [
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiao",
        "surname": "Deng"
      },
      "authorName": "Deng, Xiao",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Byron",
        "surname": "DeVries"
      },
      "authorName": "DeVries, Byron",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2SUmREckTuJBYeOqzURf5T/5kMPcC2ZIstTrrvleqnxWc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Themistoklis",
        "surname": "Diamantopoulos"
      },
      "authorName": "Diamantopoulos, Themistoklis",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stephan",
        "surname": "Diehl"
      },
      "authorName": "Diehl, Stephan",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Malinda",
        "surname": "Dilhara"
      },
      "authorName": "Dilhara, Malinda",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Elisabetta",
        "surname": "Di Nitto"
      },
      "authorName": "Di Nitto, Elisabetta",
      "articleRefs": [
        {
          "pageNumber": 172,
          "articleName": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ricardo",
        "surname": "Diniz Caldas"
      },
      "authorName": "Diniz Caldas, Ricardo",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dario",
        "surname": "Di Nucci"
      },
      "authorName": "Di Nucci, Dario",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Massimiliano",
        "surname": "Di Penta"
      },
      "authorName": "Di Penta, Massimiliano",
      "articleRefs": [
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        },
        {
          "pageNumber": 526,
          "articleName": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yvonne",
        "surname": "Dittrich"
      },
      "authorName": "Dittrich, Yvonne",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        },
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jürgen",
        "surname": "Dobaj"
      },
      "authorName": "Dobaj, Jürgen",
      "articleRefs": [
        {
          "pageNumber": 183,
          "articleName": "INSpIRA: INtegrating Security Into Risk Assessment",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ZTVp9M58dlYoX4H3UmQMz/3CPzDjmXVpoCupl1P2WG0m.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Masayuki",
        "surname": "Doi"
      },
      "authorName": "Doi, Masayuki",
      "articleRefs": [
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Julian",
        "surname": "Dolby"
      },
      "authorName": "Dolby, Julian",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Dorner"
      },
      "authorName": "Dorner, Michael",
      "articleRefs": [
        {
          "pageNumber": 515,
          "articleName": "The Patch-Flow Method for Measuring Inner Source Collaboration",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/67njFKnNg6BjSnzLM71Lr3/2Of8xip4ODYotv9xuWma7t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marcos",
        "surname": "Dósea"
      },
      "authorName": "Dósea, Marcos",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kaj",
        "surname": "Dreef"
      },
      "authorName": "Dreef, Kaj",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pradeepkumar",
        "surname": "D S"
      },
      "authorName": "D S, Pradeepkumar",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fuyao",
        "surname": "Duan"
      },
      "authorName": "Duan, Fuyao",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Francisco",
        "surname": "Duarte"
      },
      "authorName": "Duarte, Francisco",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lydie",
        "surname": "du Bousquet"
      },
      "authorName": "du Bousquet, Lydie",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Extending Specification Patterns for Verification of Parametric Traces",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sylvain",
        "surname": "Ductor"
      },
      "authorName": "Ductor, Sylvain",
      "articleRefs": [
        {
          "pageNumber": 130,
          "articleName": "A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/xLin6RoRQ6LiJyfeCfZGh/184WE5awQRYQomHAyURoSq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lorik",
        "surname": "Dumani"
      },
      "authorName": "Dumani, Lorik",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cosmo",
        "surname": "D'Uva"
      },
      "authorName": "D'Uva, Cosmo",
      "articleRefs": [
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Allan",
        "surname": "Ebdrup"
      },
      "authorName": "Ebdrup, Allan",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christof",
        "surname": "Ebert"
      },
      "authorName": "Ebert, Christof",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Managing Software Products in a Global Context",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2zqtweKqvE0uqWxVsrtdsx/4WdIRvDTtKfi1Uhg4WXiLF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Aline",
        "surname": "Ebone"
      },
      "authorName": "Ebone, Aline",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Miguel",
        "surname": "Ecar"
      },
      "authorName": "Ecar, Miguel",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ross",
        "surname": "Edwards"
      },
      "authorName": "Edwards, Ross",
      "articleRefs": [
        {
          "pageNumber": 12,
          "articleName": "DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-functional Requirements Trade-Off",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7q5F99vJVOh1uAmp2uEWz7/1Nki1M3SjX06D2rphANLXt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bufurod",
        "surname": "Edwards III"
      },
      "authorName": "Edwards III, Bufurod",
      "articleRefs": [
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vasiliki",
        "surname": "Efstathiou"
      },
      "authorName": "Efstathiou, Vasiliki",
      "articleRefs": [
        {
          "pageNumber": 38,
          "articleName": "Word Embeddings for the Software Engineering Domain",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2yUcqdZ1sGSWDujwCuUbAN/1gygjbeTTFatgdTevMgK1V.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Frank",
        "surname": "Elberzhager"
      },
      "authorName": "Elberzhager, Frank",
      "articleRefs": [
        {
          "pageNumber": 247,
          "articleName": "Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1AqWIyNws8JvQIDx1b9cyZ/2HqGpmXwOoKrPJhNoIdfhq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Neil A.",
        "surname": "Ernst"
      },
      "authorName": "Ernst, Neil A.",
      "articleRefs": [
        {
          "pageNumber": 587,
          "articleName": "Bayesian Hierarchical Modelling for Tailoring Metric Thresholds",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/380KUb1utXnZLErlFBBPxZ/6tPKF62ccqWlVS7oF9rRSc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Javier",
        "surname": "Escobar-Avila"
      },
      "authorName": "Escobar-Avila, Javier",
      "articleRefs": [
        {
          "pageNumber": 222,
          "articleName": "Automatic Tag Recommendation for Software Development Video Tutorials",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1FFKusLwThlkttcgQS0RX2/2iLpJBGy2c1hej1IC27PJm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jose Augusto",
        "surname": "Fabri"
      },
      "authorName": "Fabri, Jose Augusto",
      "articleRefs": [
        {
          "pageNumber": 44,
          "articleName": "A Process for Distributed Software Evolution",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf"
        },
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "João",
        "surname": "Faccin"
      },
      "authorName": "Faccin, João",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Cleaning Up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/26J5vHG8vHDYBgETMd3Zz4/2LF1HRaHhdW7UO7wCiVccz.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johannes",
        "surname": "Fähndrich"
      },
      "authorName": "Fähndrich, Johannes",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/33X1ybju3dwW3NQegEQDtT/6Cj9Kc8OxCe0hk2TuSZJve.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Uli",
        "surname": "Fahrenberg"
      },
      "authorName": "Fahrenberg, Uli",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sarah",
        "surname": "Fakhoury"
      },
      "authorName": "Fakhoury, Sarah",
      "articleRefs": [
        {
          "pageNumber": 286,
          "articleName": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf"
        },
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michalis",
        "surname": "Famelis"
      },
      "authorName": "Famelis, Michalis",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Umar",
        "surname": "Farooq"
      },
      "authorName": "Farooq, Umar",
      "articleRefs": [
        {
          "pageNumber": 437,
          "articleName": "Towards Automatically Identifying Paid Open Source Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Qiong",
        "surname": "Feng"
      },
      "authorName": "Feng, Qiong",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yang",
        "surname": "Feng"
      },
      "authorName": "Feng, Yang",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Juan",
        "surname": "Fernandez"
      },
      "authorName": "Fernandez, Juan",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pietro",
        "surname": "Ferrara"
      },
      "authorName": "Ferrara, Pietro",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Filomena",
        "surname": "Ferrucci"
      },
      "authorName": "Ferrucci, Filomena",
      "articleRefs": [
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eduardo",
        "surname": "Figueiredo"
      },
      "authorName": "Figueiredo, Eduardo",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cristiano",
        "surname": "Firmani"
      },
      "authorName": "Firmani, Cristiano",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mohammed",
        "surname": "Foughali"
      },
      "authorName": "Foughali, Mohammed",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cristina",
        "surname": "Frá"
      },
      "authorName": "Frá, Cristina",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Phyllis",
        "surname": "Frankl"
      },
      "authorName": "Frankl, Phyllis",
      "articleRefs": [
        {
          "pageNumber": 281,
          "articleName": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luiz Paulo",
        "surname": "Franz"
      },
      "authorName": "Franz, Luiz Paulo",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thomas",
        "surname": "Fritz"
      },
      "authorName": "Fritz, Thomas",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Sensing and Supporting Software Developers' Focus",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/425jFDIu1dUo8PziPBl09U/2MJIh8Up6F6RR6jTDsv20f.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jonas",
        "surname": "Fritzsch"
      },
      "authorName": "Fritzsch, Jonas",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wei",
        "surname": "Fu"
      },
      "authorName": "Fu, Wei",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        },
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Harald C.",
        "surname": "Gall"
      },
      "authorName": "Gall, Harald C.",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Un-break My Build: Assisting Developers with Build Repair Hints",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf"
        },
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Keheliya",
        "surname": "Gallaba"
      },
      "authorName": "Gallaba, Keheliya",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf"
        },
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rose",
        "surname": "Gamble"
      },
      "authorName": "Gamble, Rose",
      "articleRefs": [
        {
          "pageNumber": 149,
          "articleName": "Toward Evaluating the Impact of Self-Adaptation on Security Control Certification",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/78OhinAgkubclG5YAunrMv/7vQwsgjQwZFNxeGNuYC858.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jian",
        "surname": "Gao"
      },
      "authorName": "Gao, Jian",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jun",
        "surname": "Gao"
      },
      "authorName": "Gao, Jun",
      "articleRefs": [
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Qing",
        "surname": "Gao"
      },
      "authorName": "Gao, Qing",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luis Hernan",
        "surname": "Garcia Paucar"
      },
      "authorName": "Garcia Paucar, Luis Hernan",
      "articleRefs": [
        {
          "pageNumber": 19,
          "articleName": "RE-STORM: Mapping the Decision-Making Problem and Non-functional Requirements Trade-Off to Partially Observable Markov Decision Processes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1AplVy6AlFdsLXU7K9WoG4/2ESFN2MR9Vb4xC6FlAUfF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Garlan"
      },
      "authorName": "Garlan, David",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        },
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        },
        {
          "pageNumber": 137,
          "articleName": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daya",
        "surname": "Gaur"
      },
      "authorName": "Gaur, Daya",
      "articleRefs": [
        {
          "pageNumber": 331,
          "articleName": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Franz-Xaver",
        "surname": "Geiger"
      },
      "authorName": "Geiger, Franz-Xaver",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stefanos",
        "surname": "Georgiou"
      },
      "authorName": "Georgiou, Stefanos",
      "articleRefs": [
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel M",
        "surname": "German"
      },
      "authorName": "German, Daniel M",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ilias",
        "surname": "Gerostathopoulos"
      },
      "authorName": "Gerostathopoulos, Ilias",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mohammad",
        "surname": "Ghafari"
      },
      "authorName": "Ghafari, Mohammad",
      "articleRefs": [
        {
          "pageNumber": 64,
          "articleName": "JIT Feedback - What Experienced Developers Like about Static Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Richard",
        "surname": "Gil"
      },
      "authorName": "Gil, Richard",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jeewani",
        "surname": "Ginige"
      },
      "authorName": "Ginige, Jeewani",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniela",
        "surname": "Girardi"
      },
      "authorName": "Girardi, Daniela",
      "articleRefs": [
        {
          "pageNumber": 364,
          "articleName": "A Benchmark Study on Sentiment Analysis for Software Engineering Research",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1jNhKLjuP971qE1RJy9uu5/7dzem7EqX1CwyPMxfPm4hq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Antonios",
        "surname": "Gkortzis"
      },
      "authorName": "Gkortzis, Antonios",
      "articleRefs": [
        {
          "pageNumber": 18,
          "articleName": "VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1nUxyIEZiXlC3woWkerAB3/4sbqMlxiIxD1zaEVwS8TkJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maria",
        "surname": "Gómez"
      },
      "authorName": "Gómez, Maria",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "Guiding App Testing with Mined Interaction Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/dNmewr7weK1YD5YVdxv7F/3SlrPLN2rg60lt7lSePnqr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Beatriz",
        "surname": "Gomez"
      },
      "authorName": "Gomez, Beatriz",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Humberto",
        "surname": "Gomez"
      },
      "authorName": "Gomez, Humberto",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dan",
        "surname": "Gopstein"
      },
      "authorName": "Gopstein, Dan",
      "articleRefs": [
        {
          "pageNumber": 281,
          "articleName": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Peter",
        "surname": "Gorder"
      },
      "authorName": "Gorder, Peter",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alessandra",
        "surname": "Gorla"
      },
      "authorName": "Gorla, Alessandra",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        },
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        },
        {
          "pageNumber": 320,
          "articleName": "RepliComment: Identifying Clones in Code Comments",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2pliSydiWl7XslV2J2egVH/3s77fQ7QuChavo8uJWTye5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paula",
        "surname": "G. Povoas"
      },
      "authorName": "G. Povoas, Paula",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Giovanni",
        "surname": "Grano"
      },
      "authorName": "Grano, Giovanni",
      "articleRefs": [
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Demetrius",
        "surname": "Green"
      },
      "authorName": "Green, Demetrius",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "William G.",
        "surname": "Griswold"
      },
      "authorName": "Griswold, William G.",
      "articleRefs": [
        {
          "pageNumber": 202,
          "articleName": "ANEL: Robust Mobile Network Programming Using a Declarative Language",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6cvuWh9A5dODPN6zZ73nkV/6pY4QxksVXKUnmcWoGgUrZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Roland",
        "surname": "Groz"
      },
      "authorName": "Groz, Roland",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Extending Specification Patterns for Verification of Parametric Traces",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "John",
        "surname": "Grundy"
      },
      "authorName": "Grundy, John",
      "articleRefs": [
        {
          "pageNumber": 219,
          "articleName": "Vision: Improved Development of Mobile eHealth Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf"
        },
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rong",
        "surname": "Gu"
      },
      "authorName": "Gu, Rong",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yann-Gaël",
        "surname": "Guéhéneuc"
      },
      "authorName": "Guéhéneuc, Yann-Gaël",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michele",
        "surname": "Guerriero"
      },
      "authorName": "Guerriero, Michele",
      "articleRefs": [
        {
          "pageNumber": 172,
          "articleName": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zahia",
        "surname": "Guessoum"
      },
      "authorName": "Guessoum, Zahia",
      "articleRefs": [
        {
          "pageNumber": 130,
          "articleName": "A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/xLin6RoRQ6LiJyfeCfZGh/184WE5awQRYQomHAyURoSq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hongjing",
        "surname": "Guo"
      },
      "authorName": "Guo, Hongjing",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yao",
        "surname": "Guo"
      },
      "authorName": "Guo, Yao",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        },
        {
          "pageNumber": 266,
          "articleName": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rajeev Kumar",
        "surname": "Gupta"
      },
      "authorName": "Gupta, Rajeev Kumar",
      "articleRefs": [
        {
          "pageNumber": 77,
          "articleName": "Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7dRCgZJa0qQzjnfakn7xTR/1nkf6ibKCJ1LNrtT8XLLjR.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sonia",
        "surname": "Haiduc"
      },
      "authorName": "Haiduc, Sonia",
      "articleRefs": [
        {
          "pageNumber": 222,
          "articleName": "Automatic Tag Recommendation for Software Development Video Tutorials",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1FFKusLwThlkttcgQS0RX2/2iLpJBGy2c1hej1IC27PJm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Scott",
        "surname": "Hall"
      },
      "authorName": "Hall, Scott",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Detecting No-Sleep Energy Bugs Using Reference Counted Variables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2UOr6Fneg8VkP5Lov34jPR/66V3zI1wNjTOB5RsCUBcW7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Abdelwahab",
        "surname": "Hamou-Lhadj"
      },
      "authorName": "Hamou-Lhadj, Abdelwahab",
      "articleRefs": [
        {
          "pageNumber": 153,
          "articleName": "CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1TKlBTF3pMLDYWY56OUydc/1G6fsO6sfwnIHiY4TICQzT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Donggyun",
        "surname": "Han"
      },
      "authorName": "Han, Donggyun",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark",
        "surname": "Harman"
      },
      "authorName": "Harman, Mark",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paul",
        "surname": "Harnack"
      },
      "authorName": "Harnack, Paul",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        },
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johannes",
        "surname": "Härtel"
      },
      "authorName": "Härtel, Johannes",
      "articleRefs": [
        {
          "pageNumber": 233,
          "articleName": "Classification of APIs by Hierarchical Clustering",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2v9V1LqIFYYVjMhRIeEs3v/4N0UdyVH3nIDyokrYsNoDq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael S.",
        "surname": "Harvey"
      },
      "authorName": "Harvey, Michael S.",
      "articleRefs": [
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Md. Mehedi",
        "surname": "Hasan"
      },
      "authorName": "Hasan, Md. Mehedi",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "MobiCoMonkey - Context Testing of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shinpei",
        "surname": "Hayashi"
      },
      "authorName": "Hayashi, Shinpei",
      "articleRefs": [
        {
          "pageNumber": 324,
          "articleName": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Betty",
        "surname": "H.C. Cheng"
      },
      "authorName": "H.C. Cheng, Betty",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2SUmREckTuJBYeOqzURf5T/5kMPcC2ZIstTrrvleqnxWc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haochen",
        "surname": "He"
      },
      "authorName": "He, Haochen",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Felienne",
        "surname": "Hermans"
      },
      "authorName": "Hermans, Felienne",
      "articleRefs": [
        {
          "pageNumber": 308,
          "articleName": "Code Phonology: An Exploration into the Vocalization of Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yoshiki",
        "surname": "Higo"
      },
      "authorName": "Higo, Yoshiki",
      "articleRefs": [
        {
          "pageNumber": 316,
          "articleName": "Toward Refactoring Evaluation with Code Naturalness",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1wLm0llzu4fwdsdZMv5CbV/1ci2pkCSPuLgIPN21eTZIQ.pdf"
        },
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        },
        {
          "pageNumber": 336,
          "articleName": "A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? —",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2FaENRgCasXURrdA1YYXET/3ytP2Fi5twQBv6D30oq5vQ.pdf"
        },
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Hilton"
      },
      "authorName": "Hilton, Michael",
      "articleRefs": [
        {
          "pageNumber": 165,
          "articleName": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pierre-Emmanuel",
        "surname": "Hladik"
      },
      "authorName": "Hladik, Pierre-Emmanuel",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johannes C.",
        "surname": "Hofmeister"
      },
      "authorName": "Hofmeister, Johannes C.",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Konstantin",
        "surname": "Holl"
      },
      "authorName": "Holl, Konstantin",
      "articleRefs": [
        {
          "pageNumber": 247,
          "articleName": "Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1AqWIyNws8JvQIDx1b9cyZ/2HqGpmXwOoKrPJhNoIdfhq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel V.",
        "surname": "Holt"
      },
      "authorName": "Holt, Daniel V.",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shahadat",
        "surname": "Hossain"
      },
      "authorName": "Hossain, Shahadat",
      "articleRefs": [
        {
          "pageNumber": 331,
          "articleName": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xing",
        "surname": "Hu"
      },
      "authorName": "Hu, Xing",
      "articleRefs": [
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Giuseppe",
        "surname": "Iaffaldano"
      },
      "authorName": "Iaffaldano, Giuseppe",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Amani",
        "surname": "Ibrahim"
      },
      "authorName": "Ibrahim, Amani",
      "articleRefs": [
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Anita",
        "surname": "Imani"
      },
      "authorName": "Imani, Anita",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Félix",
        "surname": "Ingrand"
      },
      "authorName": "Ingrand, Félix",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Katsuro",
        "surname": "Inoue"
      },
      "authorName": "Inoue, Katsuro",
      "articleRefs": [
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paola",
        "surname": "Inverardi"
      },
      "authorName": "Inverardi, Paola",
      "articleRefs": [
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Takuya",
        "surname": "Ishizu"
      },
      "authorName": "Ishizu, Takuya",
      "articleRefs": [
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jaikrishna",
        "surname": "Iyer"
      },
      "authorName": "Iyer, Jaikrishna",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2wO9E4Qz8g7W8f5p5Z5apO/uNqbxnyOicRnSBHv59Vul.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Clemente",
        "surname": "Izurieta"
      },
      "authorName": "Izurieta, Clemente",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alan",
        "surname": "Jaffe"
      },
      "authorName": "Jaffe, Alan",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sharmin",
        "surname": "Jahan"
      },
      "authorName": "Jahan, Sharmin",
      "articleRefs": [
        {
          "pageNumber": 149,
          "articleName": "Toward Evaluating the Impact of Self-Adaptation on Security Control Certification",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/78OhinAgkubclG5YAunrMv/7vQwsgjQwZFNxeGNuYC858.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ridhi",
        "surname": "Jain"
      },
      "authorName": "Jain, Ridhi",
      "articleRefs": [
        {
          "pageNumber": 487,
          "articleName": "A Search System for Mathematical Expressions on Software Binaries",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shivani",
        "surname": "Jain"
      },
      "authorName": "Jain, Shivani",
      "articleRefs": [
        {
          "pageNumber": 77,
          "articleName": "Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7dRCgZJa0qQzjnfakn7xTR/1nkf6ibKCJ1LNrtT8XLLjR.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pooyan",
        "surname": "Jamshidi"
      },
      "authorName": "Jamshidi, Pooyan",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Calahan",
        "surname": "Janik-Jones"
      },
      "authorName": "Janik-Jones, Calahan",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "John",
        "surname": "Jenkins"
      },
      "authorName": "Jenkins, John",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf"
        },
        {
          "pageNumber": 80,
          "articleName": "ICC-Inspect: Supporting Runtime Inspection of Android Inter-Component Communications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/79ZgCqLFF9opAYHe8coy4l/25kpTIpW1VVxjjoh3biB75.pdf"
        },
        {
          "pageNumber": 265,
          "articleName": "Leveraging Historical Versions of Android Apps for Efficient and Precise Taint Analysis",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YO2FQIRP9udip8vAOMYyN/41wfwDnmzQjsSxizDP6kZ7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiaoping",
        "surname": "Jia"
      },
      "authorName": "Jia, Xiaoping",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhouyang",
        "surname": "Jia"
      },
      "authorName": "Jia, Zhouyang",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "He",
        "surname": "Jiang"
      },
      "authorName": "Jiang, He",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jing",
        "surname": "Jiang"
      },
      "authorName": "Jiang, Jing",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yu",
        "surname": "Jiang"
      },
      "authorName": "Jiang, Yu",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yanyan",
        "surname": "JIANG"
      },
      "authorName": "JIANG, Yanyan",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xianhao",
        "surname": "Jin"
      },
      "authorName": "Jin, Xianhao",
      "articleRefs": [
        {
          "pageNumber": 70,
          "articleName": "The Hidden Cost of Code Completion: Understanding the Impact of the Recommendation-List Length on its Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/NW7H41z6ua4JPpVmIO4af/7tWrBYn4tHTBMYDxHnitYt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xinxin",
        "surname": "Jin"
      },
      "authorName": "Jin, Xinxin",
      "articleRefs": [
        {
          "pageNumber": 202,
          "articleName": "ANEL: Robust Mobile Network Programming Using a Declarative Language",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6cvuWh9A5dODPN6zZ73nkV/6pY4QxksVXKUnmcWoGgUrZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhi",
        "surname": "Jin"
      },
      "authorName": "Jin, Zhi",
      "articleRefs": [
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "James",
        "surname": "Jones"
      },
      "authorName": "Jones, James",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jeffrey",
        "surname": "Jones"
      },
      "authorName": "Jones, Jeffrey",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alireza",
        "surname": "Joonbakhsh"
      },
      "authorName": "Joonbakhsh, Alireza",
      "articleRefs": [
        {
          "pageNumber": 78,
          "articleName": "Mining and Extraction of Personal Software Process Measures through IDE Interaction Logs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4SPwj7oHM58u1ebfOvCkzd/6nkv830YYUB4WCKRG51ZPB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wouter",
        "surname": "Joosen"
      },
      "authorName": "Joosen, Wouter",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Carlos",
        "surname": "Juiz"
      },
      "authorName": "Juiz, Carlos",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kyanda Swaib",
        "surname": "Kaawaase"
      },
      "authorName": "Kaawaase, Kyanda Swaib",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Big Data: Deep Learning for Detecting Malware",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/4wTsnBSWYtxDPQmlCpV3xg/6T2SMwlGsnEMQ83s5zFd0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Swaib",
        "surname": "Kaawaase Kyanda"
      },
      "authorName": "Kaawaase Kyanda, Swaib",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3k6JxR3FkmMf5UYiLrpX7x/SIxQrEnAUYfGkvnQWXDCD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stavros",
        "surname": "Kalafatis"
      },
      "authorName": "Kalafatis, Stavros",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "yasutaka",
        "surname": "kamei"
      },
      "authorName": "kamei, yasutaka",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Empirical Study on the Relationship Between Developer's Working Habits and Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4YR4IiN7N2xD8SPmKPg9GE/3IAtokElNPYIhiQlp2nnH2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Benjamin",
        "surname": "Kanagwa"
      },
      "authorName": "Kanagwa, Benjamin",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alperen",
        "surname": "Karaoglu"
      },
      "authorName": "Karaoglu, Alperen",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Odaya",
        "surname": "Kardashov"
      },
      "authorName": "Kardashov, Odaya",
      "articleRefs": [
        {
          "pageNumber": 122,
          "articleName": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Kästner"
      },
      "authorName": "Kästner, Christian",
      "articleRefs": [
        {
          "pageNumber": 165,
          "articleName": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf"
        },
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Kastner"
      },
      "authorName": "Kastner, Christian",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vikrant",
        "surname": "Kaulgud"
      },
      "authorName": "Kaulgud, Vikrant",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joshua",
        "surname": "Kayani"
      },
      "authorName": "Kayani, Joshua",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rick",
        "surname": "Kazman"
      },
      "authorName": "Kazman, Rick",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maria",
        "surname": "Kechagia"
      },
      "authorName": "Kechagia, Maria",
      "articleRefs": [
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Khaled M.",
        "surname": "Khan"
      },
      "authorName": "Khan, Khaled M.",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Muhammad Ali",
        "surname": "Khan"
      },
      "authorName": "Khan, Muhammad Ali",
      "articleRefs": [
        {
          "pageNumber": 331,
          "articleName": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Muhammad Taimoor",
        "surname": "Khan"
      },
      "authorName": "Khan, Muhammad Taimoor",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Niamul",
        "surname": "Khan"
      },
      "authorName": "Khan, Niamul",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rafiq Ahmad",
        "surname": "Khan"
      },
      "authorName": "Khan, Rafiq Ahmad",
      "articleRefs": [
        {
          "pageNumber": 137,
          "articleName": "A Preliminary Structure of Software Security Assurance Model",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5oOYMWBXW15p6w1SRRXk7q/7eeFtGiHr6b6ip4NQ1BoaY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Siffat Ullah",
        "surname": "Khan"
      },
      "authorName": "Khan, Siffat Ullah",
      "articleRefs": [
        {
          "pageNumber": 137,
          "articleName": "A Preliminary Structure of Software Security Assurance Model",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5oOYMWBXW15p6w1SRRXk7q/7eeFtGiHr6b6ip4NQ1BoaY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Foutse",
        "surname": "Khomh"
      },
      "authorName": "Khomh, Foutse",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        },
        {
          "pageNumber": 353,
          "articleName": "The Open-Closed Principle of Modern Machine Learning Frameworks",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mesfin",
        "surname": "Kifle"
      },
      "authorName": "Kifle, Mesfin",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dae-Kyoo",
        "surname": "Kim"
      },
      "authorName": "Kim, Dae-Kyoo",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Detecting No-Sleep Energy Bugs Using Reference Counted Variables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2UOr6Fneg8VkP5Lov34jPR/66V3zI1wNjTOB5RsCUBcW7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kali",
        "surname": "Kimball"
      },
      "authorName": "Kimball, Kali",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cody",
        "surname": "Kinneer"
      },
      "authorName": "Kinneer, Cody",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hiroyuki",
        "surname": "Kirinuki"
      },
      "authorName": "Kirinuki, Hiroyuki",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fred",
        "surname": "Kiwanuka"
      },
      "authorName": "Kiwanuka, Fred",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3k6JxR3FkmMf5UYiLrpX7x/SIxQrEnAUYfGkvnQWXDCD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jacques",
        "surname": "Klein"
      },
      "authorName": "Klein, Jacques",
      "articleRefs": [
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark",
        "surname": "Klein"
      },
      "authorName": "Klein, Mark",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Carsten",
        "surname": "Kleiner"
      },
      "authorName": "Kleiner, Carsten",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dean",
        "surname": "Knudson"
      },
      "authorName": "Knudson, Dean",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrew",
        "surname": "Ko"
      },
      "authorName": "Ko, Andrew",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7nXU0IkIFHGveFQPA0yuZv/zrtUB2xMi9g56p4CkTDY2.pdf"
        },
        {
          "pageNumber": 118,
          "articleName": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4uQ9qNYdtevyu0Cpsh8V1P/3ipiI14cuE2PUzjnTOswW2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ryan K L",
        "surname": "Ko"
      },
      "authorName": "Ko, Ryan K L",
      "articleRefs": [
        {
          "pageNumber": 389,
          "articleName": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Takashi",
        "surname": "KOBAYASHI"
      },
      "authorName": "KOBAYASHI, Takashi",
      "articleRefs": [
        {
          "pageNumber": 380,
          "articleName": "SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7lwETdpg2rWqW1F9Ts15c7/3N75AVXJrykAQKXdW5I6W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dimitrios S.",
        "surname": "Kolovos"
      },
      "authorName": "Kolovos, Dimitrios S.",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Körner"
      },
      "authorName": "Körner, Christian",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vasileios",
        "surname": "Koutavas"
      },
      "authorName": "Koutavas, Vasileios",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        },
        {
          "pageNumber": 64,
          "articleName": "Self-Adaptive Automata",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3dxozXoAX7AlDorzFPfQPU/1PbhgVqGQskwRy91V4mPTJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nicholas A.",
        "surname": "Kraft"
      },
      "authorName": "Kraft, Nicholas A.",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jens",
        "surname": "Krinke"
      },
      "authorName": "Krinke, Jens",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        },
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dániel",
        "surname": "Krupp"
      },
      "authorName": "Krupp, Dániel",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel",
        "surname": "Krutz"
      },
      "authorName": "Krutz, Daniel",
      "articleRefs": [
        {
          "pageNumber": 188,
          "articleName": "Security: A Critical Quality Attribute in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1z3S59IR1rxMHAggP1cDTo/01olZVDrM4w5tT2fG01CDn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel E.",
        "surname": "Krutz"
      },
      "authorName": "Krutz, Daniel E.",
      "articleRefs": [
        {
          "pageNumber": 56,
          "articleName": "Investigating User Perception and Comprehension of Android Permission Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7k3Q4plDc6aAFKXUGrtnEp/3FcnYYOacoZsRsJJ05AkPm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Victor V.",
        "surname": "Kryssanov"
      },
      "authorName": "Kryssanov, Victor V.",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "East Meets West: Global Software Engineering Course in Japan and Germany",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marco",
        "surname": "Kuhrmann"
      },
      "authorName": "Kuhrmann, Marco",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Uirá",
        "surname": "Kulesza"
      },
      "authorName": "Kulesza, Uirá",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ratnanabh",
        "surname": "Kumar"
      },
      "authorName": "Kumar, Ratnanabh",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6wApSUULH6l9KvgCBKtcZa/50da86lCp9kA13yOChV1FP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Toshiyuki",
        "surname": "Kurabayashi"
      },
      "authorName": "Kurabayashi, Toshiyuki",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shinji",
        "surname": "Kusumoto"
      },
      "authorName": "Kusumoto, Shinji",
      "articleRefs": [
        {
          "pageNumber": 316,
          "articleName": "Toward Refactoring Evaluation with Code Naturalness",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1wLm0llzu4fwdsdZMv5CbV/1ci2pkCSPuLgIPN21eTZIQ.pdf"
        },
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        },
        {
          "pageNumber": 336,
          "articleName": "A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? —",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2FaENRgCasXURrdA1YYXET/3ytP2Fi5twQBv6D30oq5vQ.pdf"
        },
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Miikka",
        "surname": "Kuutila"
      },
      "authorName": "Kuutila, Miikka",
      "articleRefs": [
        {
          "pageNumber": 437,
          "articleName": "Towards Automatically Identifying Paid Open Source Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Konstantin",
        "surname": "Kuznetsov"
      },
      "authorName": "Kuznetsov, Konstantin",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        },
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        },
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sami",
        "surname": "Kyostila"
      },
      "authorName": "Kyostila, Sami",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christoph",
        "surname": "Laaber"
      },
      "authorName": "Laaber, Christoph",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Miguel A.",
        "surname": "Labrador"
      },
      "authorName": "Labrador, Miguel A.",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jeremy",
        "surname": "Lacomis"
      },
      "authorName": "Lacomis, Jeremy",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bellatreche",
        "surname": "Ladjel"
      },
      "authorName": "Ladjel, Bellatreche",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Consolidation of BI Efforts in the LOD Era for African Context",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/7IN0KXb2e9LBJzL91T8FBv/3YS6q37zv8wrCOYAYBboFS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patricia",
        "surname": "Lago"
      },
      "authorName": "Lago, Patricia",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Architectural Technical Debt Identification: The Research Landscape",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ramesh",
        "surname": "Lal"
      },
      "authorName": "Lal, Ramesh",
      "articleRefs": [
        {
          "pageNumber": 59,
          "articleName": "Enhancing Product and Service Capability Through Scaling Agility in a Global Software Vendor Environment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2AkvJTXKQgZWHcNHYMd5NI/3FPSt2essGR5J3fAk6jdr3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wing",
        "surname": "Lam"
      },
      "authorName": "Lam, Wing",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Valerio Panzica",
        "surname": "La Manna"
      },
      "authorName": "La Manna, Valerio Panzica",
      "articleRefs": [
        {
          "pageNumber": 176,
          "articleName": "Towards a Framework for Proximity-Based Hybrid Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/c3yvsjcybuRWNJUh1ynnm/RpjaA5JJZVt0xjXCf14v3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ralf",
        "surname": "Lämmel"
      },
      "authorName": "Lämmel, Ralf",
      "articleRefs": [
        {
          "pageNumber": 233,
          "articleName": "Classification of APIs by Hierarchical Clustering",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2v9V1LqIFYYVjMhRIeEs3v/4N0UdyVH3nIDyokrYsNoDq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maxime",
        "surname": "Lamothe"
      },
      "authorName": "Lamothe, Maxime",
      "articleRefs": [
        {
          "pageNumber": 503,
          "articleName": "Exploring the Use of Automated API Migrating Techniques in Practice: An Experience Report on Android",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5jj41oQED5vy32x8NUcopV/7Gn5ZlgPZVo1KvH3gpWbz0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Anna-Lena",
        "surname": "Lamprecht"
      },
      "authorName": "Lamprecht, Anna-Lena",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Filippo",
        "surname": "Lanubile"
      },
      "authorName": "Lanubile, Filippo",
      "articleRefs": [
        {
          "pageNumber": 14,
          "articleName": "A Gold Standard for Emotion Annotation in Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2zXXCaCZSLbHi9Q37UvpS9/ND7YXM1z7MerOP41IKQNG.pdf"
        },
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        },
        {
          "pageNumber": 364,
          "articleName": "A Benchmark Study on Sentiment Analysis for Software Engineering Research",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1jNhKLjuP971qE1RJy9uu5/7dzem7EqX1CwyPMxfPm4hq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luigi",
        "surname": "Lavazza"
      },
      "authorName": "Lavazza, Luigi",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Technical Debt as an External Software Attribute",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1qd2sBfCQPyo0T1Fn8EtGj/42wUlzkoTtCbQPTqaf3iox.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yves",
        "surname": "Ledru"
      },
      "authorName": "Ledru, Yves",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Extending Specification Patterns for Verification of Parametric Traces",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Axel",
        "surname": "Legay"
      },
      "authorName": "Legay, Axel",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Claire",
        "surname": "Le Goues"
      },
      "authorName": "Le Goues, Claire",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        },
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        },
        {
          "pageNumber": 102,
          "articleName": "Common Statement Kind Changes to Inform Automatic Program Repair",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4yKOiRx1rEPHJaytESAo26/EznOWdoFNxGH37gYu2wyO.pdf"
        },
        {
          "pageNumber": 114,
          "articleName": "A Study on the Use of IDE Features for Debugging",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tfhWhVMkdDfI2Dv4891FU/6Y8xYSkFixxV48LgNdhrYF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nelson",
        "surname": "Leitão Júnior"
      },
      "authorName": "Leitão Júnior, Nelson",
      "articleRefs": [
        {
          "pageNumber": 145,
          "articleName": "Toward a Theory of Communication in Distributed Software Development Teams: A Research Proposal",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1Cd8DEN1bIr86zE4IZtUYV/R27kuC4a4wLirHpEJx6Ut.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Philipp",
        "surname": "Leitner"
      },
      "authorName": "Leitner, Philipp",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexandre",
        "surname": "L'Erario"
      },
      "authorName": "L'Erario, Alexandre",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bin",
        "surname": "Li"
      },
      "authorName": "Li, Bin",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Boyang",
        "surname": "Li"
      },
      "authorName": "Li, Boyang",
      "articleRefs": [
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ge",
        "surname": "Li"
      },
      "authorName": "Li, Ge",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hao",
        "surname": "Li"
      },
      "authorName": "Li, Hao",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Li",
        "surname": "Li"
      },
      "authorName": "Li, Li",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        },
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shanshan",
        "surname": "Li"
      },
      "authorName": "Li, Shanshan",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shuai",
        "surname": "Li"
      },
      "authorName": "Li, Shuai",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiaochen",
        "surname": "Li"
      },
      "authorName": "Li, Xiaochen",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yuanchun",
        "surname": "Li"
      },
      "authorName": "Li, Yuanchun",
      "articleRefs": [
        {
          "pageNumber": 266,
          "articleName": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhixing",
        "surname": "Li"
      },
      "authorName": "Li, Zhixing",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jiafeng",
        "surname": "Liao"
      },
      "authorName": "Liao, Jiafeng",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mario",
        "surname": "Linares-Vasquez"
      },
      "authorName": "Linares-Vasquez, Mario",
      "articleRefs": [
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mario",
        "surname": "Linares-Vásquez"
      },
      "authorName": "Linares-Vásquez, Mario",
      "articleRefs": [
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Erik",
        "surname": "Linstead"
      },
      "authorName": "Linstead, Erik",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        },
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Björn",
        "surname": "Lisper"
      },
      "authorName": "Lisper, Björn",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cong",
        "surname": "Liu"
      },
      "authorName": "Liu, Cong",
      "articleRefs": [
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dong",
        "surname": "Liu"
      },
      "authorName": "Liu, Dong",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Han",
        "surname": "Liu"
      },
      "authorName": "Liu, Han",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jin",
        "surname": "Liu"
      },
      "authorName": "Liu, Jin",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shaocong",
        "surname": "LIU"
      },
      "authorName": "LIU, Shaocong",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Giovanni",
        "surname": "Liva"
      },
      "authorName": "Liva, Giovanni",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Lo"
      },
      "authorName": "Lo, David",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        },
        {
          "pageNumber": 442,
          "articleName": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Federico Andrés",
        "surname": "Lois"
      },
      "authorName": "Lois, Federico Andrés",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Waren",
        "surname": "Long"
      },
      "authorName": "Long, Waren",
      "articleRefs": [
        {
          "pageNumber": 34,
          "articleName": "Public Git Archive: A Big Code Dataset for All",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/22Twq1K4q0KBiv1E9lDd1N/1o2e5Gi5jqbzKJMEhX2QzU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Antónia",
        "surname": "Lopes"
      },
      "authorName": "Lopes, Antónia",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Panos",
        "surname": "Louridas"
      },
      "authorName": "Louridas, Panos",
      "articleRefs": [
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pernille",
        "surname": "Lous"
      },
      "authorName": "Lous, Pernille",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Angela",
        "surname": "Lozano"
      },
      "authorName": "Lozano, Angela",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jian",
        "surname": "LU"
      },
      "authorName": "LU, Jian",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jeremy",
        "surname": "Ludwig"
      },
      "authorName": "Ludwig, Jeremy",
      "articleRefs": [
        {
          "pageNumber": 53,
          "articleName": "Static Software Metrics for Reliability and Maintainability",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrew",
        "surname": "Lukyamuzi"
      },
      "authorName": "Lukyamuzi, Andrew",
      "articleRefs": [
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kristina",
        "surname": "Lundqvist"
      },
      "authorName": "Lundqvist, Kristina",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiapu",
        "surname": "Luo"
      },
      "authorName": "Luo, Xiapu",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kaixie",
        "surname": "Lyu"
      },
      "authorName": "Lyu, Kaixie",
      "articleRefs": [
        {
          "pageNumber": 380,
          "articleName": "SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7lwETdpg2rWqW1F9Ts15c7/3N75AVXJrykAQKXdW5I6W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yingjun",
        "surname": "Lyu"
      },
      "authorName": "Lyu, Yingjun",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jun",
        "surname": "MA"
      },
      "authorName": "MA, Jun",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lei",
        "surname": "Ma"
      },
      "authorName": "Ma, Lei",
      "articleRefs": [
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luyao",
        "surname": "Ma"
      },
      "authorName": "Ma, Luyao",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sen",
        "surname": "Ma"
      },
      "authorName": "Ma, Sen",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiao",
        "surname": "Ma"
      },
      "authorName": "Ma, Xiao",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yuzhan",
        "surname": "Ma"
      },
      "authorName": "Ma, Yuzhan",
      "articleRefs": [
        {
          "pageNumber": 286,
          "articleName": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf"
        },
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Macho"
      },
      "authorName": "Macho, Christian",
      "articleRefs": [
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patrick",
        "surname": "Mäder"
      },
      "authorName": "Mäder, Patrick",
      "articleRefs": [
        {
          "pageNumber": 442,
          "articleName": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rodrigo",
        "surname": "Magalhães dos Santos"
      },
      "authorName": "Magalhães dos Santos, Rodrigo",
      "articleRefs": [
        {
          "pageNumber": 277,
          "articleName": "Impacts of Coding Practices on Readability",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6w0SFpqKAKc3TBdO05ttCj/2MK67SaEQGfvRUPQ9pFzVl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johan",
        "surname": "Magnusson"
      },
      "authorName": "Magnusson, Johan",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mehran",
        "surname": "Mahmoudi"
      },
      "authorName": "Mahmoudi, Mehran",
      "articleRefs": [
        {
          "pageNumber": 220,
          "articleName": "The Android Update Problem: An Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/40ITzpu9A7gja2DFXlgksu/5xMIfFQxaevjACtqxWJBAz.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Suvodeep",
        "surname": "Majumder"
      },
      "authorName": "Majumder, Suvodeep",
      "articleRefs": [
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ivano",
        "surname": "Malavolta"
      },
      "authorName": "Malavolta, Ivano",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Architectural Technical Debt Identification: The Research Landscape",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jonathan",
        "surname": "Maletic"
      },
      "authorName": "Maletic, Jonathan",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Anthony",
        "surname": "Mallet"
      },
      "authorName": "Mallet, Anthony",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Prabhulinga",
        "surname": "Manikreddy"
      },
      "authorName": "Manikreddy, Prabhulinga",
      "articleRefs": [
        {
          "pageNumber": 16,
          "articleName": "Control Based Management to Self Organizing Agile Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1XqmM122hfF9YfOQq0DIQ1/4jDyX0YEicjIoIemsyqzIP.pdf"
        },
        {
          "pageNumber": 35,
          "articleName": "Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2wO9E4Qz8g7W8f5p5Z5apO/uNqbxnyOicRnSBHv59Vul.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zoltán Ádám",
        "surname": "Mann"
      },
      "authorName": "Mann, Zoltán Ádám",
      "articleRefs": [
        {
          "pageNumber": 190,
          "articleName": "The Special Case of Data Protection and Self-Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3DZkSlFbYCoN8zYlAo78vC/5GNDCtt4OMVwMVAH7Hh2AF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mika",
        "surname": "Mäntylä"
      },
      "authorName": "Mäntylä, Mika",
      "articleRefs": [
        {
          "pageNumber": 387,
          "articleName": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf"
        },
        {
          "pageNumber": 437,
          "articleName": "Towards Automatically Identifying Paid Open Source Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luciano",
        "surname": "Marchezan"
      },
      "authorName": "Marchezan, Luciano",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tiziana",
        "surname": "Margaria"
      },
      "authorName": "Margaria, Tiziana",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Raluca",
        "surname": "Marinescu"
      },
      "authorName": "Marinescu, Raluca",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vadim",
        "surname": "Markovtsev"
      },
      "authorName": "Markovtsev, Vadim",
      "articleRefs": [
        {
          "pageNumber": 34,
          "articleName": "Public Git Archive: A Big Code Dataset for All",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/22Twq1K4q0KBiv1E9lDd1N/1o2e5Gi5jqbzKJMEhX2QzU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Allen",
        "surname": "Marshall"
      },
      "authorName": "Marshall, Allen",
      "articleRefs": [
        {
          "pageNumber": 149,
          "articleName": "Toward Evaluating the Impact of Self-Adaptation on Security Control Certification",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/78OhinAgkubclG5YAunrMv/7vQwsgjQwZFNxeGNuYC858.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Antonio",
        "surname": "Martini"
      },
      "authorName": "Martini, Antonio",
      "articleRefs": [
        {
          "pageNumber": 55,
          "articleName": "AnaConDebt: A Tool to Assess and Track Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4fkLBVFUWnkSDBjv5gLazl/1HX8ny04woSIZuBkiM4q0t.pdf"
        },
        {
          "pageNumber": 105,
          "articleName": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pedro",
        "surname": "Martins"
      },
      "authorName": "Martins, Pedro",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel Moritz",
        "surname": "Marutschke"
      },
      "authorName": "Marutschke, Daniel Moritz",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "East Meets West: Global Software Engineering Course in Japan and Germany",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Emmanuel",
        "surname": "Masabo"
      },
      "authorName": "Masabo, Emmanuel",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Big Data: Deep Learning for Detecting Malware",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/4wTsnBSWYtxDPQmlCpV3xg/6T2SMwlGsnEMQ83s5zFd0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "George",
        "surname": "Mathew"
      },
      "authorName": "Mathew, George",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shinsuke",
        "surname": "Matsumoto"
      },
      "authorName": "Matsumoto, Shinsuke",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marco",
        "surname": "Mattos"
      },
      "authorName": "Mattos, Marco",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Roger",
        "surname": "Mayer"
      },
      "authorName": "Mayer, Roger",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Curtis",
        "surname": "McCord"
      },
      "authorName": "McCord, Curtis",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Steve",
        "surname": "McDonald"
      },
      "authorName": "McDonald, Steve",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ross",
        "surname": "McIlroy"
      },
      "authorName": "McIlroy, Ross",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shane",
        "surname": "McIntosh"
      },
      "authorName": "McIntosh, Shane",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf"
        },
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Adam",
        "surname": "Meade"
      },
      "authorName": "Meade, Adam",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nenad",
        "surname": "Medvidovic"
      },
      "authorName": "Medvidovic, Nenad",
      "articleRefs": [
        {
          "pageNumber": 215,
          "articleName": "Toward Predicting Architectural Significance of Implementation Issues",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6YZBwy7ypYv0ELfqXGe1JQ/6O2doMdhWQsHIa9L6mtpC9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rômulo",
        "surname": "Meloca"
      },
      "authorName": "Meloca, Rômulo",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Na",
        "surname": "Meng"
      },
      "authorName": "Meng, Na",
      "articleRefs": [
        {
          "pageNumber": 180,
          "articleName": "Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/67gfBNc0dr0P1DQH78eAGU/2g2EA4pFdwSe4GsF2eqxyq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tom",
        "surname": "Mens"
      },
      "authorName": "Mens, Tom",
      "articleRefs": [
        {
          "pageNumber": 181,
          "articleName": "On the Impact of Security Vulnerabilities in the npm Package Dependency Network",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/smpJmx8mh2G24jvMxWglO/63i23sBR9g3TNrLmC7312D.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tim",
        "surname": "Menzies"
      },
      "authorName": "Menzies, Tim",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        },
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Salma",
        "surname": "Messaoudi"
      },
      "authorName": "Messaoudi, Salma",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andreas",
        "surname": "Metzger"
      },
      "authorName": "Metzger, Andreas",
      "articleRefs": [
        {
          "pageNumber": 190,
          "articleName": "The Special Case of Data Protection and Self-Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3DZkSlFbYCoN8zYlAo78vC/5GNDCtt4OMVwMVAH7Hh2AF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Benedikt",
        "surname": "Meurer"
      },
      "authorName": "Meurer, Benedikt",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexandros",
        "surname": "Michailidis"
      },
      "authorName": "Michailidis, Alexandros",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian Bo",
        "surname": "Michelsen"
      },
      "authorName": "Michelsen, Christian Bo",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Justin",
        "surname": "Middleton"
      },
      "authorName": "Middleton, Justin",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Leandro",
        "surname": "Minku"
      },
      "authorName": "Minku, Leandro",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mehdi",
        "surname": "Mirakhorli"
      },
      "authorName": "Mirakhorli, Mehdi",
      "articleRefs": [
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dimitris",
        "surname": "Mitropoulos"
      },
      "authorName": "Mitropoulos, Dimitris",
      "articleRefs": [
        {
          "pageNumber": 18,
          "articleName": "VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1nUxyIEZiXlC3woWkerAB3/4sbqMlxiIxD1zaEVwS8TkJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nikolaos",
        "surname": "Mittas"
      },
      "authorName": "Mittas, Nikolaos",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ran",
        "surname": "Mo"
      },
      "authorName": "Mo, Ran",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mahshid Helali",
        "surname": "Moghadam"
      },
      "authorName": "Moghadam, Mahshid Helali",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Austin",
        "surname": "Moninger"
      },
      "authorName": "Moninger, Austin",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lloyd",
        "surname": "Montgomery"
      },
      "authorName": "Montgomery, Lloyd",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Predicting Developers' IDE Commands with Machine Learning",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3sIkWAZkujnhOEp1TgwToe/6hZmbi8mq10FXusX1xqFGM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kevin",
        "surname": "Moran"
      },
      "authorName": "Moran, Kevin",
      "articleRefs": [
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sandro",
        "surname": "Morasca"
      },
      "authorName": "Morasca, Sandro",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Technical Debt as an External Software Attribute",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1qd2sBfCQPyo0T1Fn8EtGj/42wUlzkoTtCbQPTqaf3iox.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gabriel A.",
        "surname": "Moreno"
      },
      "authorName": "Moreno, Gabriel A.",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        },
        {
          "pageNumber": 137,
          "articleName": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joao Ricardo",
        "surname": "Moreno Camilo"
      },
      "authorName": "Moreno Camilo, Joao Ricardo",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Allan",
        "surname": "Mori"
      },
      "authorName": "Mori, Allan",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Parisa",
        "surname": "Moslehi"
      },
      "authorName": "Moslehi, Parisa",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Feature Location Using Crowd-Based Screencasts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark",
        "surname": "Mozina"
      },
      "authorName": "Mozina, Mark",
      "articleRefs": [
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Roopa",
        "surname": "M. S."
      },
      "authorName": "M. S., Roopa",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6wApSUULH6l9KvgCBKtcZa/50da86lCp9kA13yOChV1FP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Doreen-Tuheirwe",
        "surname": "Mukasa"
      },
      "authorName": "Mukasa, Doreen-Tuheirwe",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Matthew",
        "surname": "Mullarkey"
      },
      "authorName": "Mullarkey, Matthew",
      "articleRefs": [
        {
          "pageNumber": 134,
          "articleName": "Technical Debt-Related Information Asymmetry between Finance and IT",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/69zACLZ55yBa2lNn06NsOW/5X6PgrnbtjGaWartOUTDUU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Immaculée Josélyne",
        "surname": "Munezero"
      },
      "authorName": "Munezero, Immaculée Josélyne",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gail",
        "surname": "Murphy"
      },
      "authorName": "Murphy, Gail",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Emerson",
        "surname": "Murphy-Hill"
      },
      "authorName": "Murphy-Hill, Emerson",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sarah",
        "surname": "Nadi"
      },
      "authorName": "Nadi, Sarah",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        },
        {
          "pageNumber": 220,
          "articleName": "The Android Update Problem: An Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/40ITzpu9A7gja2DFXlgksu/5xMIfFQxaevjACtqxWJBAz.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vivek",
        "surname": "Nair"
      },
      "authorName": "Nair, Vivek",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Keigo",
        "surname": "Naitou"
      },
      "authorName": "Naitou, Keigo",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Justine",
        "surname": "Nakirijja"
      },
      "authorName": "Nakirijja, Justine",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Planning for Public Sector Software Projects Using Value-Based Requirements Engineering Techniques: A Research Agenda",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5YldhptFinmng9P1H37lnj/wgQnWggQaeQaIO8c6nuEJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daye",
        "surname": "Nam"
      },
      "authorName": "Nam, Daye",
      "articleRefs": [
        {
          "pageNumber": 215,
          "articleName": "Toward Predicting Architectural Significance of Implementation Issues",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6YZBwy7ypYv0ELfqXGe1JQ/6O2doMdhWQsHIa9L6mtpC9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Suman",
        "surname": "Nataraj"
      },
      "authorName": "Nataraj, Suman",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Detecting No-Sleep Energy Bugs Using Reference Counted Variables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2UOr6Fneg8VkP5Lov34jPR/66V3zI1wNjTOB5RsCUBcW7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Siva",
        "surname": "Natarajan"
      },
      "authorName": "Natarajan, Siva",
      "articleRefs": [
        {
          "pageNumber": 224,
          "articleName": "P2A: A Tool for Converting Pixels to Animated Mobile Application User Interfaces",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7f8hN7Pn6xO9QPMQzw9HO6/5VIEG0Hexz560riIylXdr7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jaime",
        "surname": "Navon"
      },
      "authorName": "Navon, Jaime",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Maleknaz",
        "surname": "Nayebi"
      },
      "authorName": "Nayebi, Maleknaz",
      "articleRefs": [
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mathieu",
        "surname": "Nayrolles"
      },
      "authorName": "Nayrolles, Mathieu",
      "articleRefs": [
        {
          "pageNumber": 153,
          "articleName": "CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1TKlBTF3pMLDYWY56OUydc/1G6fsO6sfwnIHiY4TICQzT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "George",
        "surname": "Ndungu"
      },
      "authorName": "Ndungu, George",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patrick",
        "surname": "Neff"
      },
      "authorName": "Neff, Patrick",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patrick",
        "surname": "Neubauer"
      },
      "authorName": "Neubauer, Patrick",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Graham",
        "surname": "Neubig"
      },
      "authorName": "Neubig, Graham",
      "articleRefs": [
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Newman"
      },
      "authorName": "Newman, Christian",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andres",
        "surname": "Neyem"
      },
      "authorName": "Neyem, Andres",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "John",
        "surname": "Ngubiri"
      },
      "authorName": "Ngubiri, John",
      "articleRefs": [
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tuan",
        "surname": "Nguyen"
      },
      "authorName": "Nguyen, Tuan",
      "articleRefs": [
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Armstrong",
        "surname": "Nhlabatsi"
      },
      "authorName": "Nhlabatsi, Armstrong",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Clodagh",
        "surname": "Nic Canna"
      },
      "authorName": "Nic Canna, Clodagh",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Oscar",
        "surname": "Nierstrasz"
      },
      "authorName": "Nierstrasz, Oscar",
      "articleRefs": [
        {
          "pageNumber": 64,
          "articleName": "JIT Feedback - What Experienced Developers Like about Static Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xu",
        "surname": "Niu"
      },
      "authorName": "Niu, Xu",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kunihiro",
        "surname": "NODA"
      },
      "authorName": "NODA, Kunihiro",
      "articleRefs": [
        {
          "pageNumber": 380,
          "articleName": "SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7lwETdpg2rWqW1F9Ts15c7/3N75AVXJrykAQKXdW5I6W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "John",
        "surname": "Noll"
      },
      "authorName": "Noll, John",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        },
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nicole",
        "surname": "Novielli"
      },
      "authorName": "Novielli, Nicole",
      "articleRefs": [
        {
          "pageNumber": 14,
          "articleName": "A Gold Standard for Emotion Annotation in Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2zXXCaCZSLbHi9Q37UvpS9/ND7YXM1z7MerOP41IKQNG.pdf"
        },
        {
          "pageNumber": 364,
          "articleName": "A Benchmark Study on Sentiment Analysis for Software Engineering Research",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1jNhKLjuP971qE1RJy9uu5/7dzem7EqX1CwyPMxfPm4hq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ingrid",
        "surname": "Nunes"
      },
      "authorName": "Nunes, Ingrid",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Cleaning Up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/26J5vHG8vHDYBgETMd3Zz4/2LF1HRaHhdW7UO7wCiVccz.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Genaína",
        "surname": "Nunes Rodrigues"
      },
      "authorName": "Nunes Rodrigues, Genaína",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Robin",
        "surname": "Nunkesser"
      },
      "authorName": "Nunkesser, Robin",
      "articleRefs": [
        {
          "pageNumber": 214,
          "articleName": "Beyond Web/Native/Hybrid: A New Taxonomy for Mobile App Development",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7mEd2jzriF7VRyHkP6uWHi/1AhvGKXWf1IXAKWtsV0cta.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bashar",
        "surname": "Nuseibeh"
      },
      "authorName": "Nuseibeh, Bashar",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        },
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lina",
        "surname": "Ochoa"
      },
      "authorName": "Ochoa, Lina",
      "articleRefs": [
        {
          "pageNumber": 170,
          "articleName": "An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4wPidAyFv816mgEv4y4ufk/7t0r9Hn1L3qqIJ7X8vb4zo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Washington",
        "surname": "Okori"
      },
      "authorName": "Okori, Washington",
      "articleRefs": [
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rafael",
        "surname": "Olaechea"
      },
      "authorName": "Olaechea, Rafael",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fabricio Sousa",
        "surname": "Oliveira"
      },
      "authorName": "Oliveira, Fabricio Sousa",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johnatan",
        "surname": "Oliveira"
      },
      "authorName": "Oliveira, Johnatan",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rocco",
        "surname": "Oliveto"
      },
      "authorName": "Oliveto, Rocco",
      "articleRefs": [
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alessandro",
        "surname": "Orso"
      },
      "authorName": "Orso, Alessandro",
      "articleRefs": [
        {
          "pageNumber": 236,
          "articleName": "GUIFetch: Supporting App Design and Development through GUI Search",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jordan",
        "surname": "Ott"
      },
      "authorName": "Ott, Jordan",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        },
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tolga",
        "surname": "Ovatman"
      },
      "authorName": "Ovatman, Tolga",
      "articleRefs": [
        {
          "pageNumber": 135,
          "articleName": "An Empirical Study on Scrum Application Patterns in Distributed Teams",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2TpvbYSC9eItPQkIddIzbx/5gFnDv397NrGfCMLLlq9GU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tiago",
        "surname": "Pagotto"
      },
      "authorName": "Pagotto, Tiago",
      "articleRefs": [
        {
          "pageNumber": 44,
          "articleName": "A Process for Distributed Software Evolution",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf"
        },
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Richard F.",
        "surname": "Paige"
      },
      "authorName": "Paige, Richard F.",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Matheus",
        "surname": "Paixao"
      },
      "authorName": "Paixao, Matheus",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        },
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jeffrey",
        "surname": "Palmerino"
      },
      "authorName": "Palmerino, Jeffrey",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Improving Android Permissions Models for Increased User Awareness and Security",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4r1iJW957QWaHnKs6smfiQ/5ETdQztLOpJldD8RMF1l4q.pdf"
        },
        {
          "pageNumber": 56,
          "articleName": "Investigating User Perception and Comprehension of Android Permission Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7k3Q4plDc6aAFKXUGrtnEp/3FcnYYOacoZsRsJJ05AkPm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fabio",
        "surname": "Palomba"
      },
      "authorName": "Palomba, Fabio",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Annibale",
        "surname": "Panichella"
      },
      "authorName": "Panichella, Annibale",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jevgenija",
        "surname": "Pantiuchina"
      },
      "authorName": "Pantiuchina, Jevgenija",
      "articleRefs": [
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michail",
        "surname": "Papamichail"
      },
      "authorName": "Papamichail, Michail",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sangyoung",
        "surname": "Park"
      },
      "authorName": "Park, Sangyoung",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christopher",
        "surname": "Parnin"
      },
      "authorName": "Parnin, Christopher",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Esteban",
        "surname": "Parra"
      },
      "authorName": "Parra, Esteban",
      "articleRefs": [
        {
          "pageNumber": 222,
          "articleName": "Automatic Tag Recommendation for Software Development Video Tutorials",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1FFKusLwThlkttcgQS0RX2/2iLpJBGy2c1hej1IC27PJm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luca",
        "surname": "Pascarella"
      },
      "authorName": "Pascarella, Luca",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 39,
          "articleName": "Classifying Code Comments in Java Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Jpqy13chjNAIIWvMOHGWF/9Ww57ttOnSNXTkylyGQBo.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Liliana",
        "surname": "Pasquale"
      },
      "authorName": "Pasquale, Liliana",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Frank",
        "surname": "Pasveer"
      },
      "authorName": "Pasveer, Frank",
      "articleRefs": [
        {
          "pageNumber": 176,
          "articleName": "Towards a Framework for Proximity-Based Hybrid Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/c3yvsjcybuRWNJUh1ynnm/RpjaA5JJZVt0xjXCf14v3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sydney",
        "surname": "Paul"
      },
      "authorName": "Paul, Sydney",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hannes",
        "surname": "Payer"
      },
      "authorName": "Payer, Hannes",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nataniel",
        "surname": "P. Borges Jr."
      },
      "authorName": "P. Borges Jr., Nataniel",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "Guiding App Testing with Mined Interaction Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/dNmewr7weK1YD5YVdxv7F/3SlrPLN2rg60lt7lSePnqr.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patrizio",
        "surname": "Pelliccione"
      },
      "authorName": "Pelliccione, Patrizio",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alfredo J.",
        "surname": "Perez"
      },
      "authorName": "Perez, Alfredo J.",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Anthony",
        "surname": "Peruma"
      },
      "authorName": "Peruma, Anthony",
      "articleRefs": [
        {
          "pageNumber": 56,
          "articleName": "Investigating User Perception and Comprehension of Android Permission Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7k3Q4plDc6aAFKXUGrtnEp/3FcnYYOacoZsRsJJ05AkPm.pdf"
        },
        {
          "pageNumber": 188,
          "articleName": "Security: A Critical Quality Attribute in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1z3S59IR1rxMHAggP1cDTo/01olZVDrM4w5tT2fG01CDn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Patricia",
        "surname": "Pesado"
      },
      "authorName": "Pesado, Patricia",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Nadja",
        "surname": "Peters"
      },
      "authorName": "Peters, Nadja",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fabio",
        "surname": "Petrillo"
      },
      "authorName": "Petrillo, Fabio",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Srinivas",
        "surname": "Pinisetty"
      },
      "authorName": "Pinisetty, Srinivas",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Runtime Verification of Hyperproperties for Deterministic Programs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gustavo",
        "surname": "Pinto"
      },
      "authorName": "Pinto, Gustavo",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        },
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Martin",
        "surname": "Pinzger"
      },
      "authorName": "Pinzger, Martin",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        },
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marco",
        "surname": "Pistoia"
      },
      "authorName": "Pistoia, Marco",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Ares: Triggering Payload of Evasive Android Malware",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1kwoE4IsWlbBcNdOplxNHd/7uM7gUAKRHWP2Xgy3303zJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Reinhold",
        "surname": "Plösch"
      },
      "authorName": "Plösch, Reinhold",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sanjay",
        "surname": "Podder"
      },
      "authorName": "Podder, Sanjay",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Poellabauer"
      },
      "authorName": "Poellabauer, Christian",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ivanilton",
        "surname": "Polato"
      },
      "authorName": "Polato, Ivanilton",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zoltán",
        "surname": "Porkoláb"
      },
      "authorName": "Porkoláb, Zoltán",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        },
        {
          "pageNumber": 393,
          "articleName": "The CodeCompass Comprehension Framework",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/uR5cigvgpepUoRX1Aeeq3/6eOKh60JCax8ks2bTR9xr1.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jaroslav",
        "surname": "Porubän"
      },
      "authorName": "Porubän, Jaroslav",
      "articleRefs": [
        {
          "pageNumber": 344,
          "articleName": "Augmenting Source Code Lines with Sample Variable Values",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/01RNRJpkeZQdMt01mE0INJ/7KfXNr42kDvTSWAikYMOEj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Denys",
        "surname": "Poshyvanyk"
      },
      "authorName": "Poshyvanyk, Denys",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Development, Testing and Maintenance of Android Apps: Challenges, Approaches, Tools, and Future Directions",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/72yU6SOQ4yKrkts81SJc0C/4KZj9YEFOkKtWu9gXKzRur.pdf"
        },
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        },
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        },
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Evangelos",
        "surname": "Pournaras"
      },
      "authorName": "Pournaras, Evangelos",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mukul",
        "surname": "Prasad"
      },
      "authorName": "Prasad, Mukul",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sai",
        "surname": "Prathik"
      },
      "authorName": "Prathik, Sai",
      "articleRefs": [
        {
          "pageNumber": 487,
          "articleName": "A Search System for Mathematical Expressions on Software Binaries",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christian",
        "surname": "Prehofer"
      },
      "authorName": "Prehofer, Christian",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thomas",
        "surname": "Probst"
      },
      "authorName": "Probst, Thomas",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sebastian",
        "surname": "Proksch"
      },
      "authorName": "Proksch, Sebastian",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Un-break My Build: Assisting Developers with Build Repair Hints",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf"
        },
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rüdiger",
        "surname": "Pryss"
      },
      "authorName": "Pryss, Rüdiger",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Rahul",
        "surname": "Purandare"
      },
      "authorName": "Purandare, Rahul",
      "articleRefs": [
        {
          "pageNumber": 487,
          "articleName": "A Search System for Mathematical Expressions on Software Binaries",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Abheeshta",
        "surname": "Putta"
      },
      "authorName": "Putta, Abheeshta",
      "articleRefs": [
        {
          "pageNumber": 141,
          "articleName": "Scaling Agile Software Development to Large and Globally Distributed Large-Scale Organizations",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3D3xE4iPeZeBajA04k0edm/5Is3jBkc2I8n7je7NZlDbY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sebastián Fernandez",
        "surname": "Quezada"
      },
      "authorName": "Quezada, Sebastián Fernandez",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Noam",
        "surname": "Rabbani"
      },
      "authorName": "Rabbani, Noam",
      "articleRefs": [
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alex",
        "surname": "Radermacher"
      },
      "authorName": "Radermacher, Alex",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ansar",
        "surname": "Rafique"
      },
      "authorName": "Rafique, Ansar",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Chaiyong",
        "surname": "Ragkhitwetsagul"
      },
      "authorName": "Ragkhitwetsagul, Chaiyong",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Akond",
        "surname": "Rahman"
      },
      "authorName": "Rahman, Akond",
      "articleRefs": [
        {
          "pageNumber": 66,
          "articleName": "Comprehension Effort and Programming Activities: Related? Or Not Related?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3NKUe2aOSenqglECedNY5y/3qyMl0I6sjBmLY5jaE0FwS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Md Masudur",
        "surname": "Rahman"
      },
      "authorName": "Rahman, Md Masudur",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Md. Rayhanur",
        "surname": "Rahman"
      },
      "authorName": "Rahman, Md. Rayhanur",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "MobiCoMonkey - Context Testing of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark",
        "surname": "Rajpal"
      },
      "authorName": "Rajpal, Mark",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "Effective Distributed Pair Programming",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/XWLVzxAHGNC5muCfArBjM/5ms3XI1aMr9vp3xGw0rnA4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Srini",
        "surname": "Ramaswamy"
      },
      "authorName": "Ramaswamy, Srini",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "A Proposed Sizing Model for Managing 3rd Party Code Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2andjewAbaTVM54oMU9aHm/1WW8iz6uh0UUrA3PuoN5SC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michael",
        "surname": "Rath"
      },
      "authorName": "Rath, Michael",
      "articleRefs": [
        {
          "pageNumber": 442,
          "articleName": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Baishakhi",
        "surname": "Ray"
      },
      "authorName": "Ray, Baishakhi",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mohammad Abdur",
        "surname": "Razzak"
      },
      "authorName": "Razzak, Mohammad Abdur",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mohammed Abdur",
        "surname": "Razzak"
      },
      "authorName": "Razzak, Mohammed Abdur",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Steven P.",
        "surname": "Reiss"
      },
      "authorName": "Reiss, Steven P.",
      "articleRefs": [
        {
          "pageNumber": 236,
          "articleName": "GUIFetch: Supporting App Design and Development through GUI Search",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhilei",
        "surname": "Ren"
      },
      "authorName": "Ren, Zhilei",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Rice"
      },
      "authorName": "Rice, David",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ita",
        "surname": "Richardson"
      },
      "authorName": "Richardson, Ita",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Till",
        "surname": "Riedel"
      },
      "authorName": "Riedel, Till",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dirk",
        "surname": "Riehle"
      },
      "authorName": "Riehle, Dirk",
      "articleRefs": [
        {
          "pageNumber": 515,
          "articleName": "The Patch-Flow Method for Measuring Inner Source Collaboration",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/67njFKnNg6BjSnzLM71Lr3/2Of8xip4ODYotv9xuWma7t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Juergen",
        "surname": "Rilling"
      },
      "authorName": "Rilling, Juergen",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Feature Location Using Crowd-Based Screencasts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrés Felipe",
        "surname": "Rincón Gamboa"
      },
      "authorName": "Rincón Gamboa, Andrés Felipe",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kevin G.",
        "surname": "Rivera-Morales"
      },
      "authorName": "Rivera-Morales, Kevin G.",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Romain",
        "surname": "Robbes"
      },
      "authorName": "Robbes, Romain",
      "articleRefs": [
        {
          "pageNumber": 492,
          "articleName": "Imprecisions Diagnostic in Source Code Deltas",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Arthur",
        "surname": "Rodrigues"
      },
      "authorName": "Rodrigues, Arthur",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luís",
        "surname": "Rodrigues"
      },
      "authorName": "Rodrigues, Luís",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ariel",
        "surname": "Rodriguez"
      },
      "authorName": "Rodriguez, Ariel",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Empirical Study on the Relationship Between Developer's Working Habits and Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4YR4IiN7N2xD8SPmKPg9GE/3IAtokElNPYIhiQlp2nnH2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bill",
        "surname": "Rogers"
      },
      "authorName": "Rogers, Bill",
      "articleRefs": [
        {
          "pageNumber": 389,
          "articleName": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paolo",
        "surname": "Romano"
      },
      "authorName": "Romano, Paolo",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mikael",
        "surname": "Roos"
      },
      "authorName": "Roos, Mikael",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ariel",
        "surname": "Rosenfeld"
      },
      "authorName": "Rosenfeld, Ariel",
      "articleRefs": [
        {
          "pageNumber": 122,
          "articleName": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Atanas",
        "surname": "Rountev"
      },
      "authorName": "Rountev, Atanas",
      "articleRefs": [
        {
          "pageNumber": 13,
          "articleName": "Orlis: Obfuscation-Resilient Library Detection for Android",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Chanchal K.",
        "surname": "Roy"
      },
      "authorName": "Roy, Chanchal K.",
      "articleRefs": [
        {
          "pageNumber": 19,
          "articleName": "Adventures in NICAD: A Ten-Year Retrospective",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3dyEgnWgi4SanttaR1D7Oq/2yxP0yLYjDnuU8PilT2tqu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stefano",
        "surname": "Ruberto"
      },
      "authorName": "Ruberto, Stefano",
      "articleRefs": [
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guenther",
        "surname": "Ruhe"
      },
      "authorName": "Ruhe, Guenther",
      "articleRefs": [
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Barbara",
        "surname": "Russo"
      },
      "authorName": "Russo, Barbara",
      "articleRefs": [
        {
          "pageNumber": 203,
          "articleName": "Profiling Call Changes Via Motif Mining",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1xiMLi0gUh1Ze5ANgiZYsF/5USzOOuiLHbJaUF7HEHpbu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mehrdad",
        "surname": "Saadatmand"
      },
      "authorName": "Saadatmand, Mehrdad",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Motoshi",
        "surname": "Saeki"
      },
      "authorName": "Saeki, Motoshi",
      "articleRefs": [
        {
          "pageNumber": 324,
          "articleName": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Natthawute",
        "surname": "Sae-Lim"
      },
      "authorName": "Sae-Lim, Natthawute",
      "articleRefs": [
        {
          "pageNumber": 324,
          "articleName": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Matthias",
        "surname": "Saft"
      },
      "authorName": "Saft, Matthias",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ripon",
        "surname": "Saha"
      },
      "authorName": "Saha, Ripon",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Houari",
        "surname": "Sahraoui"
      },
      "authorName": "Sahraoui, Houari",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mohamed Aymen",
        "surname": "Saied"
      },
      "authorName": "Saied, Mohamed Aymen",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kazi",
        "surname": "Sakib"
      },
      "authorName": "Sakib, Kazi",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "MobiCoMonkey - Context Testing of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pasquale",
        "surname": "Salza"
      },
      "authorName": "Salza, Pasquale",
      "articleRefs": [
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ashkan",
        "surname": "Sami"
      },
      "authorName": "Sami, Ashkan",
      "articleRefs": [
        {
          "pageNumber": 78,
          "articleName": "Mining and Extraction of Personal Software Process Measures through IDE Interaction Logs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4SPwj7oHM58u1ebfOvCkzd/6nkv830YYUB4WCKRG51ZPB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pablo",
        "surname": "Sanabria"
      },
      "authorName": "Sanabria, Pablo",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Leonardo",
        "surname": "Sanches dos Santos"
      },
      "authorName": "Sanches dos Santos, Leonardo",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Beatriz A.",
        "surname": "Sanchez"
      },
      "authorName": "Sanchez, Beatriz A.",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kristian",
        "surname": "Sandahl"
      },
      "authorName": "Sandahl, Kristian",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Sands"
      },
      "authorName": "Sands, David",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Runtime Verification of Hyperproperties for Deterministic Programs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Julianne",
        "surname": "Sansa-Otim"
      },
      "authorName": "Sansa-Otim, Julianne",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Big Data: Deep Learning for Detecting Malware",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/4wTsnBSWYtxDPQmlCpV3xg/6T2SMwlGsnEMQ83s5zFd0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sadnan",
        "surname": "Saquif"
      },
      "authorName": "Saquif, Sadnan",
      "articleRefs": [
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Beecham",
        "surname": "Sarah"
      },
      "authorName": "Sarah, Beecham",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christos",
        "surname": "Sarikyriakidis"
      },
      "authorName": "Sarikyriakidis, Christos",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Raimondas",
        "surname": "Sasnauskas"
      },
      "authorName": "Sasnauskas, Raimondas",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Simone",
        "surname": "Scalabrino"
      },
      "authorName": "Scalabrino, Simone",
      "articleRefs": [
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Joshua D",
        "surname": "Scarsbrook"
      },
      "authorName": "Scarsbrook, Joshua D",
      "articleRefs": [
        {
          "pageNumber": 389,
          "articleName": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andrea",
        "surname": "Schankin"
      },
      "authorName": "Schankin, Andrea",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gerald",
        "surname": "Schermann"
      },
      "authorName": "Schermann, Gerald",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Structured Information on State and Evolution of Dockerfiles on GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tbcdm06zSC6TEH3VA6arE/4bOo28bCYpLh3XngDSLPNJ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Simon André",
        "surname": "Scherr"
      },
      "authorName": "Scherr, Simon André",
      "articleRefs": [
        {
          "pageNumber": 247,
          "articleName": "Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1AqWIyNws8JvQIDx1b9cyZ/2HqGpmXwOoKrPJhNoIdfhq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Winfried",
        "surname": "Schlee"
      },
      "authorName": "Schlee, Winfried",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Philipp",
        "surname": "Schleiss"
      },
      "authorName": "Schleiss, Philipp",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bradley",
        "surname": "Schmerl"
      },
      "authorName": "Schmerl, Bradley",
      "articleRefs": [
        {
          "pageNumber": 137,
          "articleName": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Daniel",
        "surname": "Schneider"
      },
      "authorName": "Schneider, Daniel",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gerardo",
        "surname": "Schneider"
      },
      "authorName": "Schneider, Gerardo",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Runtime Verification of Hyperproperties for Deterministic Programs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "Testing Meets Static and Runtime Verification",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marcelo",
        "surname": "Schots"
      },
      "authorName": "Schots, Marcelo",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "Analysis of Test Log Information through Interactive Visualizations",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7p0pFx8bE7YnSOAPX5sD3B/3295UHUN0aAFM1x6oW69xy.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Edward J.",
        "surname": "Schwartz"
      },
      "authorName": "Schwartz, Edward J.",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gian Luca",
        "surname": "Scoccia"
      },
      "authorName": "Scoccia, Gian Luca",
      "articleRefs": [
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "João Pablo",
        "surname": "S. da Silva"
      },
      "authorName": "S. da Silva, João Pablo",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Carolyn",
        "surname": "Seaman"
      },
      "authorName": "Seaman, Carolyn",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "From Lasagna to Spaghetti: A Decision Model to Manage Defect Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5q1FRWyZzATg1gOOmQ6eZr/10zLH1Wp6na9rXgsATV2kg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cristina",
        "surname": "Seceleanu"
      },
      "authorName": "Seceleanu, Cristina",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ibrahim",
        "surname": "Seckin"
      },
      "authorName": "Seckin, Ibrahim",
      "articleRefs": [
        {
          "pageNumber": 135,
          "articleName": "An Empirical Study on Scrum Application Patterns in Distributed Teams",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2TpvbYSC9eItPQkIddIzbx/5gFnDv397NrGfCMLLlq9GU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Peter E.",
        "surname": "Sedgewick"
      },
      "authorName": "Sedgewick, Peter E.",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Self-Adaptation Made Easy with Blockchains",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6dibjBLDaYcGaOjkTzaMaR/1XoumyUqtQMhBIdWn4XePu.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Barbara",
        "surname": "Seegebarth"
      },
      "authorName": "Seegebarth, Barbara",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ahmad",
        "surname": "Seet"
      },
      "authorName": "Seet, Ahmad",
      "articleRefs": [
        {
          "pageNumber": 106,
          "articleName": "Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7nbYnyE9hZggqbfgQX5KLC/7dmrlRpgEBUXuzgQEUjC0E.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Khouri",
        "surname": "Selma"
      },
      "authorName": "Selma, Khouri",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Consolidation of BI Efforts in the LOD Era for African Context",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/7IN0KXb2e9LBJzL91T8FBv/3YS6q37zv8wrCOYAYBboFS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexander",
        "surname": "Serebrenik"
      },
      "authorName": "Serebrenik, Alexander",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        },
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        },
        {
          "pageNumber": 526,
          "articleName": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Abdelhak",
        "surname": "Seriai"
      },
      "authorName": "Seriai, Abdelhak",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Francisco",
        "surname": "Servant"
      },
      "authorName": "Servant, Francisco",
      "articleRefs": [
        {
          "pageNumber": 70,
          "articleName": "The Hidden Cost of Code Completion: Understanding the Impact of the Recommendation-List Length on its Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/NW7H41z6ua4JPpVmIO4af/7tWrBYn4tHTBMYDxHnitYt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Arman",
        "surname": "Shahbazian"
      },
      "authorName": "Shahbazian, Arman",
      "articleRefs": [
        {
          "pageNumber": 215,
          "articleName": "Toward Predicting Architectural Significance of Implementation Issues",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6YZBwy7ypYv0ELfqXGe1JQ/6O2doMdhWQsHIa9L6mtpC9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Weiyi",
        "surname": "Shang"
      },
      "authorName": "Shang, Weiyi",
      "articleRefs": [
        {
          "pageNumber": 503,
          "articleName": "Exploring the Use of Automated API Migrating Techniques in Practice: An Experience Report on Android",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5jj41oQED5vy32x8NUcopV/7Gn5ZlgPZVo1KvH3gpWbz0.pdf"
        },
        {
          "pageNumber": 564,
          "articleName": "Studying the Relationship between Exception Handling Practices and Post-Release Defects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YGRIbJjMeNQAV17b2ymJ9/yKCiY9IwfDACgeJQbjY4L.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sihao",
        "surname": "Shao"
      },
      "authorName": "Shao, Sihao",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lwin Khin",
        "surname": "Shar"
      },
      "authorName": "Shar, Lwin Khin",
      "articleRefs": [
        {
          "pageNumber": 24,
          "articleName": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Anas",
        "surname": "Shatnawi"
      },
      "authorName": "Shatnawi, Anas",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hudhaifa",
        "surname": "Shatnawi"
      },
      "authorName": "Shatnawi, Hudhaifa",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kento",
        "surname": "Shimonaka"
      },
      "authorName": "Shimonaka, Kento",
      "articleRefs": [
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Léuson",
        "surname": "Silva"
      },
      "authorName": "Silva, Léuson",
      "articleRefs": [
        {
          "pageNumber": 576,
          "articleName": "Analyzing Conflict Predictors in Open-Source Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Janvier Omar",
        "surname": "Sinayobye"
      },
      "authorName": "Sinayobye, Janvier Omar",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3k6JxR3FkmMf5UYiLrpX7x/SIxQrEnAUYfGkvnQWXDCD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bharat",
        "surname": "Singh"
      },
      "authorName": "Singh, Bharat",
      "articleRefs": [
        {
          "pageNumber": 77,
          "articleName": "Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7dRCgZJa0qQzjnfakn7xTR/1nkf6ibKCJ1LNrtT8XLLjR.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kapil",
        "surname": "Singi"
      },
      "authorName": "Singi, Kapil",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gizelle",
        "surname": "S. Lemos"
      },
      "authorName": "S. Lemos, Gizelle",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        },
        {
          "pageNumber": 40,
          "articleName": "Software Engineering Tools Environment for Outsourcing Teams Collaboration",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2lImER8Y1axu5ueud93SAc/5YpcyX6t463sAS2tbRc3jY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Will",
        "surname": "Snipes"
      },
      "authorName": "Snipes, Will",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "A Proposed Sizing Model for Managing 3rd Party Code Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2andjewAbaTVM54oMU9aHm/1WW8iz6uh0UUrA3PuoN5SC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zheng",
        "surname": "Song"
      },
      "authorName": "Song, Zheng",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mauricio",
        "surname": "Soto"
      },
      "authorName": "Soto, Mauricio",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Common Statement Kind Changes to Inform Automatic Program Repair",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4yKOiRx1rEPHJaytESAo26/EznOWdoFNxGH37gYu2wyO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "César",
        "surname": "Soto-Valero"
      },
      "authorName": "Soto-Valero, César",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Luca",
        "surname": "Spalazzi"
      },
      "authorName": "Spalazzi, Luca",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Francesco",
        "surname": "Spegni"
      },
      "authorName": "Spegni, Francesco",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marcelo",
        "surname": "S. Pimenta"
      },
      "authorName": "S. Pimenta, Marcelo",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Diomidis",
        "surname": "Spinellis"
      },
      "authorName": "Spinellis, Diomidis",
      "articleRefs": [
        {
          "pageNumber": 18,
          "articleName": "VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1nUxyIEZiXlC3woWkerAB3/4sbqMlxiIxD1zaEVwS8TkJ.pdf"
        },
        {
          "pageNumber": 38,
          "articleName": "Word Embeddings for the Software Engineering Domain",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2yUcqdZ1sGSWDujwCuUbAN/1gygjbeTTFatgdTevMgK1V.pdf"
        },
        {
          "pageNumber": 58,
          "articleName": "Documented Unix Facilities over 48 Years",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4FJhB6MFicRFcJtYeq859b/532J4Nwk2EzsJ8YrSy9370.pdf"
        },
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fausto",
        "surname": "Spoto"
      },
      "authorName": "Spoto, Fausto",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kamonphop",
        "surname": "Srisopha"
      },
      "authorName": "Srisopha, Kamonphop",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "An Exploratory Study on the Influence of Developers in Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thomas",
        "surname": "Stablein"
      },
      "authorName": "Stablein, Thomas",
      "articleRefs": [
        {
          "pageNumber": 134,
          "articleName": "Technical Debt-Related Information Asymmetry between Finance and IT",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/69zACLZ55yBa2lNn06NsOW/5X6PgrnbtjGaWartOUTDUU.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Marielle",
        "surname": "Stoelinga"
      },
      "authorName": "Stoelinga, Marielle",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Risk Management for High Tech Systems",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/6JSZKdU24pC4GbkhIh6t0P/2g1zAbL86B9v45ClHIT4JV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Kathryn T.",
        "surname": "Stolee"
      },
      "authorName": "Stolee, Kathryn T.",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yulei",
        "surname": "Sui"
      },
      "authorName": "Sui, Yulei",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Matúš",
        "surname": "Sulír"
      },
      "authorName": "Sulír, Matúš",
      "articleRefs": [
        {
          "pageNumber": 344,
          "articleName": "Augmenting Source Code Lines with Sample Variable Values",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/01RNRJpkeZQdMt01mE0INJ/7KfXNr42kDvTSWAikYMOEj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jianling",
        "surname": "Sun"
      },
      "authorName": "Sun, Jianling",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xiaobing",
        "surname": "Sun"
      },
      "authorName": "Sun, Xiaobing",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alaaeddin",
        "surname": "Swidan"
      },
      "authorName": "Swidan, Alaaeddin",
      "articleRefs": [
        {
          "pageNumber": 308,
          "articleName": "Code Phonology: An Exploration into the Vocalization of Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andreas",
        "surname": "Symeonidis"
      },
      "authorName": "Symeonidis, Andreas",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gilleanes",
        "surname": "T. A. Guedes"
      },
      "authorName": "T. A. Guedes, Gilleanes",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Safouan",
        "surname": "Taha"
      },
      "authorName": "Taha, Safouan",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Formal Verification of Automotive Embedded Software",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Aoi",
        "surname": "Takahashi"
      },
      "authorName": "Takahashi, Aoi",
      "articleRefs": [
        {
          "pageNumber": 324,
          "articleName": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Damian Andrew",
        "surname": "Tamburri"
      },
      "authorName": "Tamburri, Damian Andrew",
      "articleRefs": [
        {
          "pageNumber": 172,
          "articleName": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Lin",
        "surname": "Tan"
      },
      "authorName": "Tan, Lin",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yongshan",
        "surname": "Tan"
      },
      "authorName": "Tan, Yongshan",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "fumiya",
        "surname": "tanaka"
      },
      "authorName": "tanaka, fumiya",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Empirical Study on the Relationship Between Developer's Working Habits and Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4YR4IiN7N2xD8SPmKPg9GE/3IAtokElNPYIhiQlp2nnH2.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yutian",
        "surname": "Tang"
      },
      "authorName": "Tang, Yutian",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Akito",
        "surname": "Tanikado"
      },
      "authorName": "Tanikado, Akito",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haruto",
        "surname": "Tanno"
      },
      "authorName": "Tanno, Haruto",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xianping",
        "surname": "TAO"
      },
      "authorName": "TAO, Xianping",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Degif",
        "surname": "Teka"
      },
      "authorName": "Teka, Degif",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Paolo",
        "surname": "Tell"
      },
      "authorName": "Tell, Paolo",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Manish",
        "surname": "Thapa"
      },
      "authorName": "Thapa, Manish",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pablo",
        "surname": "Thomas"
      },
      "authorName": "Thomas, Pablo",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eli",
        "surname": "Tilevich"
      },
      "authorName": "Tilevich, Eli",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Intent to Share: Enhancing Android Inter-Component Communication for Distributed Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1S3Dd6OotKwfzlcbu8Wh4b/6GRtupRJo5b5742PvsDHTl.pdf"
        },
        {
          "pageNumber": 105,
          "articleName": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf"
        },
        {
          "pageNumber": 180,
          "articleName": "Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/67gfBNc0dr0P1DQH78eAGU/2g2EA4pFdwSe4GsF2eqxyq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vassil",
        "surname": "Todorov"
      },
      "authorName": "Todorov, Vassil",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Formal Verification of Automotive Embedded Software",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Adam",
        "surname": "Tornhill"
      },
      "authorName": "Tornhill, Adam",
      "articleRefs": [
        {
          "pageNumber": 59,
          "articleName": "Prioritize Technical Debt in Large-Scale Systems Using CodeScene",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4ztSp0TzBsjchaxwK0jeuJ/4RLObPqtzuis008tqXOU5O.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Weslley",
        "surname": "Torres"
      },
      "authorName": "Torres, Weslley",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Davide",
        "surname": "Tosi"
      },
      "authorName": "Tosi, Davide",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Technical Debt as an External Software Attribute",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1qd2sBfCQPyo0T1Fn8EtGj/42wUlzkoTtCbQPTqaf3iox.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Vinh Thuy",
        "surname": "Tran"
      },
      "authorName": "Tran, Vinh Thuy",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mario",
        "surname": "Trapp"
      },
      "authorName": "Trapp, Mario",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christoph",
        "surname": "Treude"
      },
      "authorName": "Treude, Christoph",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Asher",
        "surname": "Trockman"
      },
      "authorName": "Trockman, Asher",
      "articleRefs": [
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Frank",
        "surname": "Trollmann"
      },
      "authorName": "Trollmann, Frank",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/33X1ybju3dwW3NQegEQDtT/6Cj9Kc8OxCe0hk2TuSZJve.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eddy",
        "surname": "Truyen"
      },
      "authorName": "Truyen, Eddy",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michail",
        "surname": "Tsapanos"
      },
      "authorName": "Tsapanos, Michail",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Michele",
        "surname": "Tufano"
      },
      "authorName": "Tufano, Michele",
      "articleRefs": [
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thein Than",
        "surname": "Tun"
      },
      "authorName": "Tun, Thein Than",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        },
        {
          "pageNumber": 194,
          "articleName": "Agree to Disagree: Security Requirements are Different, but Mechanisms for Security Adaptation are Not",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3QGgS1lHfIF4Tv0IDBgJSw/36UkGXMQcGDUKUaA7gVrrO.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yuriy",
        "surname": "Tymchuk"
      },
      "authorName": "Tymchuk, Yuriy",
      "articleRefs": [
        {
          "pageNumber": 64,
          "articleName": "JIT Feedback - What Experienced Developers Like about Static Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": " University of Gothenburg",
        "surname": "undefined"
      },
      "authorName": "undefined, University of Gothenburg",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gustavo",
        "surname": "Vale"
      },
      "authorName": "Vale, Gustavo",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tessa",
        "surname": "Valentien"
      },
      "authorName": "Valentien, Tessa",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Massimo",
        "surname": "Valla"
      },
      "authorName": "Valla, Massimo",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mark G.J.",
        "surname": "van den Brand"
      },
      "authorName": "van den Brand, Mark G.J.",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Wil M.P",
        "surname": "van der Aalst"
      },
      "authorName": "van der Aalst, Wil M.P",
      "articleRefs": [
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Arie",
        "surname": "van Deursen"
      },
      "authorName": "van Deursen, Arie",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Boudewijn",
        "surname": "van Dongen"
      },
      "authorName": "van Dongen, Boudewijn",
      "articleRefs": [
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Dimitri",
        "surname": "Van Landuyt"
      },
      "authorName": "Van Landuyt, Dimitri",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Bogdan",
        "surname": "Vasilescu"
      },
      "authorName": "Vasilescu, Bogdan",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        },
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        },
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        },
        {
          "pageNumber": 165,
          "articleName": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf"
        },
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        },
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Carmine",
        "surname": "Vassallo"
      },
      "authorName": "Vassallo, Carmine",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Un-break My Build: Assisting Developers with Build Repair Hints",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Christopher",
        "surname": "Vendome"
      },
      "authorName": "Vendome, Christopher",
      "articleRefs": [
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Roberto",
        "surname": "Verdecchia"
      },
      "authorName": "Verdecchia, Roberto",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Architectural Technical Debt Identification: The Research Landscape",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf"
        },
        {
          "pageNumber": 35,
          "articleName": "Identifying Architectural Technical Debt in Android Applications through Automated Compliance Checking",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2GojGt1tPE8l1QD6OQKCry/7xWLPafiIzONXaU7xhOSvq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Idalides",
        "surname": "Vergara-Laurens"
      },
      "authorName": "Vergara-Laurens, Idalides",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Markos",
        "surname": "Viggiato"
      },
      "authorName": "Viggiato, Markos",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Venkatesh",
        "surname": "Vinayakarao"
      },
      "authorName": "Vinayakarao, Venkatesh",
      "articleRefs": [
        {
          "pageNumber": 487,
          "articleName": "A Search System for Mathematical Expressions on Software Binaries",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jurgen",
        "surname": "Vinju"
      },
      "authorName": "Vinju, Jurgen",
      "articleRefs": [
        {
          "pageNumber": 170,
          "articleName": "An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4wPidAyFv816mgEv4y4ufk/7t0r9Hn1L3qqIJ7X8vb4zo.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Giovanni",
        "surname": "Viviani"
      },
      "authorName": "Viviani, Giovanni",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cristina",
        "surname": "V. Lopes"
      },
      "authorName": "V. Lopes, Cristina",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Thomas",
        "surname": "Vogel"
      },
      "authorName": "Vogel, Thomas",
      "articleRefs": [
        {
          "pageNumber": 101,
          "articleName": "mRUBiS: An Exemplar for Model-Based Architectural Self-Healing and Self-Optimization",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4AlAbDXJUpXo0LxWaTk95u/5zizl5UYGihEcEuBT7spP8.pdf"
        },
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mani",
        "surname": "V. S."
      },
      "authorName": "V. S., Mani",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6wApSUULH6l9KvgCBKtcZa/50da86lCp9kA13yOChV1FP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Markus",
        "surname": "Wagner"
      },
      "authorName": "Wagner, Markus",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stefan",
        "surname": "Wagner"
      },
      "authorName": "Wagner, Stefan",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haoyu",
        "surname": "Wang"
      },
      "authorName": "Wang, Haoyu",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Huaimin",
        "surname": "Wang"
      },
      "authorName": "Wang, Huaimin",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ji",
        "surname": "Wang"
      },
      "authorName": "Wang, Ji",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jiacheng",
        "surname": "Wang"
      },
      "authorName": "Wang, Jiacheng",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tao",
        "surname": "Wang"
      },
      "authorName": "Wang, Tao",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Teng",
        "surname": "Wang"
      },
      "authorName": "Wang, Teng",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yan",
        "surname": "Wang"
      },
      "authorName": "Wang, Yan",
      "articleRefs": [
        {
          "pageNumber": 13,
          "articleName": "Orlis: Obfuscation-Resilient Library Detection for Android",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cody",
        "surname": "Watson"
      },
      "authorName": "Watson, Cody",
      "articleRefs": [
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Frederick",
        "surname": "Webber"
      },
      "authorName": "Webber, Frederick",
      "articleRefs": [
        {
          "pageNumber": 53,
          "articleName": "Static Software Metrics for Reliability and Maintainability",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gereon",
        "surname": "Weiss"
      },
      "authorName": "Weiss, Gereon",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "White"
      },
      "authorName": "White, David",
      "articleRefs": [
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Martin",
        "surname": "White"
      },
      "authorName": "White, Martin",
      "articleRefs": [
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alexander",
        "surname": "Wickert"
      },
      "authorName": "Wickert, Alexander",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "David",
        "surname": "Widder"
      },
      "authorName": "Widder, David",
      "articleRefs": [
        {
          "pageNumber": 165,
          "articleName": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Igor",
        "surname": "Wiese"
      },
      "authorName": "Wiese, Igor",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "John",
        "surname": "Wilkie"
      },
      "authorName": "Wilkie, John",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Erik",
        "surname": "Wittern"
      },
      "authorName": "Wittern, Erik",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Eoin",
        "surname": "Woods"
      },
      "authorName": "Woods, Eoin",
      "articleRefs": [
        {
          "pageNumber": 61,
          "articleName": "The Past, Present and Future of Technical Debt: Learning from the Past to Prepare for the Future",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6PpoZXj310wBbyhny82NQl/s6MoSp1NMFp3ZzVDxBaEj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Haowei",
        "surname": "Wu"
      },
      "authorName": "Wu, Haowei",
      "articleRefs": [
        {
          "pageNumber": 13,
          "articleName": "Orlis: Obfuscation-Resilient Library Detection for Android",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xin",
        "surname": "Xia"
      },
      "authorName": "Xia, Xin",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        },
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        },
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guoai",
        "surname": "Xu"
      },
      "authorName": "Xu, Guoai",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jun",
        "surname": "Xu"
      },
      "authorName": "Xu, Jun",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Steven",
        "surname": "Xu"
      },
      "authorName": "Xu, Steven",
      "articleRefs": [
        {
          "pageNumber": 53,
          "articleName": "Static Software Metrics for Reliability and Maintainability",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yulin",
        "surname": "Xu"
      },
      "authorName": "Xu, Yulin",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "A Multi-level Dataset of Linux Kernel Patchwork",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2Cy38XQpH2jSuLo56Bf9NG/7s4N9TBZ65Snk6crd3tqua.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhou",
        "surname": "Xu"
      },
      "authorName": "Xu, Zhou",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Chang",
        "surname": "XU"
      },
      "authorName": "XU, Chang",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Aiko",
        "surname": "Yamashita"
      },
      "authorName": "Yamashita, Aiko",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guowei",
        "surname": "Yang"
      },
      "authorName": "Yang, Guowei",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Jinqiu",
        "surname": "Yang"
      },
      "authorName": "Yang, Jinqiu",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Mu",
        "surname": "Yang"
      },
      "authorName": "Yang, Mu",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xin",
        "surname": "Yang"
      },
      "authorName": "Yang, Xin",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Ziyue",
        "surname": "Yang"
      },
      "authorName": "Yang, Ziyue",
      "articleRefs": [
        {
          "pageNumber": 266,
          "articleName": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Gang",
        "surname": "Yin"
      },
      "authorName": "Yin, Gang",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Pengcheng",
        "surname": "Yin"
      },
      "authorName": "Yin, Pengcheng",
      "articleRefs": [
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Annie T.T.",
        "surname": "Ying"
      },
      "authorName": "Ying, Annie T.T.",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Weiliang",
        "surname": "Ying"
      },
      "authorName": "Ying, Weiliang",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hiroaki",
        "surname": "Yoshida"
      },
      "authorName": "Yoshida, Hiroaki",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Norihiro",
        "surname": "Yoshida"
      },
      "authorName": "Yoshida, Norihiro",
      "articleRefs": [
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yijun",
        "surname": "Yu"
      },
      "authorName": "Yu, Yijun",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yue",
        "surname": "Yu"
      },
      "authorName": "Yu, Yue",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Zhe",
        "surname": "Yu"
      },
      "authorName": "Yu, Zhe",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Stephen",
        "surname": "Zahos"
      },
      "authorName": "Zahos, Stephen",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Fiorella",
        "surname": "Zampetti"
      },
      "authorName": "Zampetti, Fiorella",
      "articleRefs": [
        {
          "pageNumber": 526,
          "articleName": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Orel",
        "surname": "Zang"
      },
      "authorName": "Zang, Orel",
      "articleRefs": [
        {
          "pageNumber": 122,
          "articleName": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Andreas",
        "surname": "Zeller"
      },
      "authorName": "Zeller, Andreas",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        },
        {
          "pageNumber": 133,
          "articleName": "Guiding App Testing with Mined Interaction Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/dNmewr7weK1YD5YVdxv7F/3SlrPLN2rg60lt7lSePnqr.pdf"
        },
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Timothy",
        "surname": "Zemp"
      },
      "authorName": "Zemp, Timothy",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Un-break My Build: Assisting Developers with Build Repair Hints",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Hailong",
        "surname": "Zhang"
      },
      "authorName": "Zhang, Hailong",
      "articleRefs": [
        {
          "pageNumber": 13,
          "articleName": "Orlis: Obfuscation-Resilient Library Detection for Android",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Shikun",
        "surname": "Zhang"
      },
      "authorName": "Zhang, Shikun",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Tao",
        "surname": "Zhang"
      },
      "authorName": "Zhang, Tao",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Xian",
        "surname": "Zhang"
      },
      "authorName": "Zhang, Xian",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yun",
        "surname": "Zhang"
      },
      "authorName": "Zhang, Yun",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Guoliang",
        "surname": "Zhao"
      },
      "authorName": "Zhao, Guoliang",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Cheng",
        "surname": "Zhou"
      },
      "authorName": "Zhou, Cheng",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Henry Hongwei",
        "surname": "Zhou"
      },
      "authorName": "Zhou, Henry Hongwei",
      "articleRefs": [
        {
          "pageNumber": 281,
          "articleName": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Minghui",
        "surname": "Zhou"
      },
      "authorName": "Zhou, Minghui",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "A Multi-level Dataset of Linux Kernel Patchwork",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2Cy38XQpH2jSuLo56Bf9NG/7s4N9TBZ65Snk6crd3tqua.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Yuanyuan",
        "surname": "Zhou"
      },
      "authorName": "Zhou, Yuanyuan",
      "articleRefs": [
        {
          "pageNumber": 202,
          "articleName": "ANEL: Robust Mobile Network Programming Using a Declarative Language",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6cvuWh9A5dODPN6zZ73nkV/6pY4QxksVXKUnmcWoGgUrZ.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Alfred",
        "surname": "Zimmermann"
      },
      "authorName": "Zimmermann, Alfred",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Johannes",
        "surname": "Zimmermann"
      },
      "authorName": "Zimmermann, Johannes",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Waleed",
        "surname": "Zogaan"
      },
      "authorName": "Zogaan, Waleed",
      "articleRefs": [
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Manuela",
        "surname": "Züger"
      },
      "authorName": "Züger, Manuela",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Sensing and Supporting Software Developers' Focus",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/425jFDIu1dUo8PziPBl09U/2MJIh8Up6F6RR6jTDsv20f.pdf"
        }
      ]
    },
    {
      "author": {
        "givenName": "Sali",
        "surname": "Zumberi"
      },
      "authorName": "Zumberi, Sali",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Structured Information on State and Evolution of Dockerfiles on GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tbcdm06zSC6TEH3VA6arE/4bOo28bCYpLh3XngDSLPNJ.pdf"
        }
      ]
    }
  ],
  "affiliations": [
    {
      "affiliation": "Aalto University",
      "articleRefs": [
        {
          "pageNumber": 141,
          "articleName": "Scaling Agile Software Development to Large and Globally Distributed Large-Scale Organizations",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3D3xE4iPeZeBajA04k0edm/5Is3jBkc2I8n7je7NZlDbY.pdf"
        }
      ]
    },
    {
      "affiliation": "ABB Corporate Research",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "A Proposed Sizing Model for Managing 3rd Party Code Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2andjewAbaTVM54oMU9aHm/1WW8iz6uh0UUrA3PuoN5SC.pdf"
        },
        {
          "pageNumber": 94,
          "articleName": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf"
        }
      ]
    },
    {
      "affiliation": "ABB Inc.",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "A Proposed Sizing Model for Managing 3rd Party Code Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2andjewAbaTVM54oMU9aHm/1WW8iz6uh0UUrA3PuoN5SC.pdf"
        }
      ]
    },
    {
      "affiliation": "Accenture Labs",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Compliance Adherence in Distributed Software Delivery: A Blockchain Approach",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/4HKQBnqV5dFbHRdJt5HOi4/3mHfdDKYnx5zUkdottHvFC.pdf"
        }
      ]
    },
    {
      "affiliation": "Addis Ababa University",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        }
      ]
    },
    {
      "affiliation": "Agile Global Results",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "Effective Distributed Pair Programming",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/XWLVzxAHGNC5muCfArBjM/5ms3XI1aMr9vp3xGw0rnA4.pdf"
        }
      ]
    },
    {
      "affiliation": "Air Force Research Laboratory",
      "articleRefs": [
        {
          "pageNumber": 53,
          "articleName": "Static Software Metrics for Reliability and Maintainability",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf"
        }
      ]
    },
    {
      "affiliation": "Aristotle University of Thessaloniki",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        }
      ]
    },
    {
      "affiliation": "Aston University",
      "articleRefs": [
        {
          "pageNumber": 12,
          "articleName": "DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-functional Requirements Trade-Off",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7q5F99vJVOh1uAmp2uEWz7/1Nki1M3SjX06D2rphANLXt.pdf"
        },
        {
          "pageNumber": 19,
          "articleName": "RE-STORM: Mapping the Decision-Making Problem and Non-functional Requirements Trade-Off to Partially Observable Markov Decision Processes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1AplVy6AlFdsLXU7K9WoG4/2ESFN2MR9Vb4xC6FlAUfF.pdf"
        }
      ]
    },
    {
      "affiliation": "Athens University of Economics and Business",
      "articleRefs": [
        {
          "pageNumber": 18,
          "articleName": "VulinOSS: A Dataset of Security Vulnerabilities in Open-Source Systems",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1nUxyIEZiXlC3woWkerAB3/4sbqMlxiIxD1zaEVwS8TkJ.pdf"
        },
        {
          "pageNumber": 38,
          "articleName": "Word Embeddings for the Software Engineering Domain",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2yUcqdZ1sGSWDujwCuUbAN/1gygjbeTTFatgdTevMgK1V.pdf"
        },
        {
          "pageNumber": 58,
          "articleName": "Documented Unix Facilities over 48 Years",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4FJhB6MFicRFcJtYeq859b/532J4Nwk2EzsJ8YrSy9370.pdf"
        },
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        }
      ]
    },
    {
      "affiliation": "Auckland University of Technology",
      "articleRefs": [
        {
          "pageNumber": 59,
          "articleName": "Enhancing Product and Service Capability Through Scaling Agility in a Global Software Vendor Environment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2AkvJTXKQgZWHcNHYMd5NI/3FPSt2essGR5J3fAk6jdr3.pdf"
        }
      ]
    },
    {
      "affiliation": "Bar-Ilan University",
      "articleRefs": [
        {
          "pageNumber": 122,
          "articleName": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf"
        }
      ]
    },
    {
      "affiliation": "Beihang University",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        }
      ]
    },
    {
      "affiliation": "Beijing Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        }
      ]
    },
    {
      "affiliation": "Beijing University of Posts and Telecommunications",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        }
      ]
    },
    {
      "affiliation": "Blekinge Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Bowling Green State University",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "affiliation": "Brown University",
      "articleRefs": [
        {
          "pageNumber": 236,
          "articleName": "GUIFetch: Supporting App Design and Development through GUI Search",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf"
        }
      ]
    },
    {
      "affiliation": "California Polytechnic State University",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "affiliation": "Carleton University",
      "articleRefs": [
        {
          "pageNumber": 106,
          "articleName": "Studying Developer Build Issues and Debugger Usage via Timeline Analysis in Visual Studio IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7nbYnyE9hZggqbfgQX5KLC/7dmrlRpgEBUXuzgQEUjC0E.pdf"
        }
      ]
    },
    {
      "affiliation": "Carnegie Mellon University",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        },
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        },
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        },
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        },
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        },
        {
          "pageNumber": 102,
          "articleName": "Common Statement Kind Changes to Inform Automatic Program Repair",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4yKOiRx1rEPHJaytESAo26/EznOWdoFNxGH37gYu2wyO.pdf"
        },
        {
          "pageNumber": 114,
          "articleName": "A Study on the Use of IDE Features for Debugging",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tfhWhVMkdDfI2Dv4891FU/6Y8xYSkFixxV48LgNdhrYF.pdf"
        },
        {
          "pageNumber": 137,
          "articleName": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf"
        },
        {
          "pageNumber": 165,
          "articleName": "I'm Leaving You, Travis: A Continuous Integration Breakup Story",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/HPnBeaycnLhoKPgMXvcXg/6DaSziDRMuuYLlRm1sHLDA.pdf"
        },
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        },
        {
          "pageNumber": 476,
          "articleName": "Learning to Mine Aligned Code and Natural Language Pairs from Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1aORDveZ0RhFSiPRw1awTB/3MfTKqbefDXDqUEOIT6qcZ.pdf"
        }
      ]
    },
    {
      "affiliation": "Carnegie Mellon University Software Engineering Institute",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Meaningful Variable Names for Decompiled Code: A Machine Translation Approach",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5O1yABY1ISeDgFx6IfeJJh/6OH0pqAKxmdvWm8d5WebL4.pdf"
        }
      ]
    },
    {
      "affiliation": "CASC Software Testing Center",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "affiliation": "CA Technologies; University of Oslo",
      "articleRefs": [
        {
          "pageNumber": 105,
          "articleName": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf"
        }
      ]
    },
    {
      "affiliation": "Centrum Wiskunde & Informatica",
      "articleRefs": [
        {
          "pageNumber": 170,
          "articleName": "An Empirical Evaluation of OSGi Dependencies Best Practices in the Eclipse IDE",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4wPidAyFv816mgEv4y4ufk/7t0r9Hn1L3qqIJ7X8vb4zo.pdf"
        }
      ]
    },
    {
      "affiliation": "Chalmers ",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        }
      ]
    },
    {
      "affiliation": "Chalmers;  University of Gothenburg,  Sweden",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "affiliation": "Chalmers University of Technology",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Runtime Verification of Hyperproperties for Deterministic Programs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "Testing Meets Static and Runtime Verification",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf"
        },
        {
          "pageNumber": 105,
          "articleName": "Technical Debt Cripples Software Developer Productivity: A Longitudinal Study on Developers’ Daily Software Development Work",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/30152rsd3sAtkq33KHfDer/1nTrkeXC2CRvpkESKyr6v0.pdf"
        }
      ]
    },
    {
      "affiliation": "Chapman University",
      "articleRefs": [
        {
          "pageNumber": 336,
          "articleName": "Learning Lexical Features of Programming Languages from Imagery Using Convolutional Neural Networks",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/28tTygLj4leauZvmQ8KshF/5HcDSgwmWNUDaqoAEOBHRx.pdf"
        },
        {
          "pageNumber": 376,
          "articleName": "A Deep Learning Approach to Identifying Source Code in Images and Video",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1OrioXZMlvosJ87bb4IOLc/7LfFCV5HpzVEXJe7yDiKbK.pdf"
        }
      ]
    },
    {
      "affiliation": "Charles University in Prague",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "affiliation": "Clausthal University of Technology",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "affiliation": "Clemson University",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "affiliation": "CMU",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "affiliation": "Codealike",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "affiliation": "College of Computer",
      "articleRefs": [
        {
          "pageNumber": 22,
          "articleName": "A Dataset of Duplicate Pull-Requests in GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6wG23GBpiYGNZL3NaZaWNV/5vhQzhc3FDkUJFZNIYq1UF.pdf"
        }
      ]
    },
    {
      "affiliation": "College of Information Science and Engineering Ritsumeikan University",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "East Meets West: Global Software Engineering Course in Japan and Germany",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf"
        }
      ]
    },
    {
      "affiliation": "College of William and Mary",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Development, Testing and Maintenance of Android Apps: Challenges, Approaches, Tools, and Future Directions",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/72yU6SOQ4yKrkts81SJc0C/4KZj9YEFOkKtWu9gXKzRur.pdf"
        },
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "affiliation": "College of William & Mary",
      "articleRefs": [
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        }
      ]
    },
    {
      "affiliation": "Columbus State University",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "affiliation": "Computer Science Department Technical University Nuremberg Georg Simon Ohm",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "East Meets West: Global Software Engineering Course in Japan and Germany",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/71wEib9QS1H47IOWDgNrlH/5pcdWz03wqc5fqhJN7UcyN.pdf"
        }
      ]
    },
    {
      "affiliation": "Concordia University",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        },
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        },
        {
          "pageNumber": 192,
          "articleName": "Feature Location Using Crowd-Based Screencasts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf"
        },
        {
          "pageNumber": 503,
          "articleName": "Exploring the Use of Automated API Migrating Techniques in Practice: An Experience Report on Android",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5jj41oQED5vy32x8NUcopV/7Gn5ZlgPZVo1KvH3gpWbz0.pdf"
        },
        {
          "pageNumber": 564,
          "articleName": "Studying the Relationship between Exception Handling Practices and Post-Release Defects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YGRIbJjMeNQAV17b2ymJ9/yKCiY9IwfDACgeJQbjY4L.pdf"
        }
      ]
    },
    {
      "affiliation": "Concordia University Texas",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "affiliation": "Corporate Technology Siemens AG",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "affiliation": "Dalian University of Technology",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "affiliation": "Dalian University of Technology; Beijing Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        }
      ]
    },
    {
      "affiliation": "Danube University Krems",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "affiliation": "DCC",
      "articleRefs": [
        {
          "pageNumber": 492,
          "articleName": "Imprecisions Diagnostic in Source Code Deltas",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf"
        }
      ]
    },
    {
      "affiliation": "Deakin University",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        },
        {
          "pageNumber": 219,
          "articleName": "Vision: Improved Development of Mobile eHealth Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf"
        },
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        }
      ]
    },
    {
      "affiliation": "Debitoor",
      "articleRefs": [
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "affiliation": "DEIB - Politecnico di Milano",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "affiliation": "Delft University of Technology",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 39,
          "articleName": "Classifying Code Comments in Java Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Jpqy13chjNAIIWvMOHGWF/9Ww57ttOnSNXTkylyGQBo.pdf"
        },
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 303,
          "articleName": "What are Your Programming Language's Energy-Delay Implications?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3RVScHaHbvZ2zZbpVOhsyS/K3KAjBezXJMPRjXANJZM2.pdf"
        },
        {
          "pageNumber": 308,
          "articleName": "Code Phonology: An Exploration into the Vocalization of Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        }
      ]
    },
    {
      "affiliation": "DePaul University",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf"
        }
      ]
    },
    {
      "affiliation": "Dickinson College",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2CFNv3iw6blRpYjuEqSu5q/7npRmSGJ66AhtFtt8M2qZV.pdf"
        }
      ]
    },
    {
      "affiliation": "Drexel University",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "affiliation": "ECE Department",
      "articleRefs": [
        {
          "pageNumber": 153,
          "articleName": "CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1TKlBTF3pMLDYWY56OUydc/1G6fsO6sfwnIHiY4TICQzT.pdf"
        }
      ]
    },
    {
      "affiliation": "Ecole nationale Supérieure d'Informatique",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Consolidation of BI Efforts in the LOD Era for African Context",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/7IN0KXb2e9LBJzL91T8FBv/3YS6q37zv8wrCOYAYBboFS.pdf"
        }
      ]
    },
    {
      "affiliation": "Ecole Polytechnique",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "affiliation": "Eindhoven University of Technology",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        },
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        },
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        },
        {
          "pageNumber": 526,
          "articleName": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf"
        }
      ]
    },
    {
      "affiliation": "Eindhoven University of Technology; University of Guayaquil",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "affiliation": "Electrical and Computer Engineering Dept.",
      "articleRefs": [
        {
          "pageNumber": 42,
          "articleName": "npm-Miner: An Infrastructure for Measuring the Quality of the npm Registry",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/KtHWxdNJMgfwVsN8krvk5/v8EDMwlKDxv9hG1mfoFoO.pdf"
        }
      ]
    },
    {
      "affiliation": "Empear",
      "articleRefs": [
        {
          "pageNumber": 59,
          "articleName": "Prioritize Technical Debt in Large-Scale Systems Using CodeScene",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4ztSp0TzBsjchaxwK0jeuJ/4RLObPqtzuis008tqXOU5O.pdf"
        }
      ]
    },
    {
      "affiliation": "Endava",
      "articleRefs": [
        {
          "pageNumber": 61,
          "articleName": "The Past, Present and Future of Technical Debt: Learning from the Past to Prepare for the Future",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6PpoZXj310wBbyhny82NQl/s6MoSp1NMFp3ZzVDxBaEj.pdf"
        }
      ]
    },
    {
      "affiliation": "Eötvös Loránd University",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        },
        {
          "pageNumber": 393,
          "articleName": "The CodeCompass Comprehension Framework",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/uR5cigvgpepUoRX1Aeeq3/6eOKh60JCax8ks2bTR9xr1.pdf"
        }
      ]
    },
    {
      "affiliation": "EquitySim",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "affiliation": "Ericsson AB",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Introducing Debtgrep: A Tool for Fighting Technical Debt in Base Station Software",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/g6oFwH3JSwuzHcHuQyIdX/5cFrvKitaSeNFbDHK1JgBu.pdf"
        }
      ]
    },
    {
      "affiliation": "Ericsson Hungary Ltd.",
      "articleRefs": [
        {
          "pageNumber": 361,
          "articleName": "CodeCompass: An Open Software Comprehension Framework for Industrial Usage",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XkUbk6FiapI0cK51r7eZO/4QcQsZ9bBcydSjayv8ekkc.pdf"
        }
      ]
    },
    {
      "affiliation": "ETH Zurich",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "Prototyping Self-Managed Interdependent Networks - Self-Healing Synergies against Cascading Failures",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1LFfVTa1iUU28aaSJAm6qA/3THvsRIzpHEbMXE5tJwbvC.pdf"
        }
      ]
    },
    {
      "affiliation": "Fcebook and University College London",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal Institute of Rio Grande do Norte",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Bahia",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Pampa",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Pará",
      "articleRefs": [
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Pernambuco",
      "articleRefs": [
        {
          "pageNumber": 145,
          "articleName": "Toward a Theory of Communication in Distributed Software Development Teams: A Research Proposal",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1Cd8DEN1bIr86zE4IZtUYV/R27kuC4a4wLirHpEJx6Ut.pdf"
        },
        {
          "pageNumber": 292,
          "articleName": "How Swift Developers Handle Errors",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2swnKWFWqYu9QOqwxQbtvK/3hRxeUWasjqk7idbi3Gw1U.pdf"
        },
        {
          "pageNumber": 576,
          "articleName": "Analyzing Conflict Predictors in Open-Source Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/62CUmG5UsoRCmykCL0ORq6/JBaMiP2Iq7UBTS6ormZQv.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Rio Grande do Norte",
      "articleRefs": [
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Rio Grande do Sul",
      "articleRefs": [
        {
          "pageNumber": 87,
          "articleName": "A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3zxubGO9vV44LDQJkyuRWO/2Dd24Lkdf9bVVnCRhXgSRo.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Sergipe; Federal University of Bahia",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "How Do Design Decisions Affect the Distribution of Software Metrics?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6Q8gLnfoOsmjN8iTn2Qopa/7C9ADAlC5mY3PIuFsRCeyd.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Technology",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Technology - Paraná",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        },
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "affiliation": "Federal University of Technology – Parana",
      "articleRefs": [
        {
          "pageNumber": 44,
          "articleName": "A Process for Distributed Software Evolution",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5R1UhNiijywS0D7rigDON7/16LgeZJQZSwrc3UI9xwYoA.pdf"
        }
      ]
    },
    {
      "affiliation": "Florida State University",
      "articleRefs": [
        {
          "pageNumber": 222,
          "articleName": "Automatic Tag Recommendation for Software Development Video Tutorials",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1FFKusLwThlkttcgQS0RX2/2iLpJBGy2c1hej1IC27PJm.pdf"
        }
      ]
    },
    {
      "affiliation": "Fondazione Bruno Kessler",
      "articleRefs": [
        {
          "pageNumber": 24,
          "articleName": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf"
        }
      ]
    },
    {
      "affiliation": "Fraunhofer ESK",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        }
      ]
    },
    {
      "affiliation": "Fraunhofer IESE",
      "articleRefs": [
        {
          "pageNumber": 26,
          "articleName": "Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/46Fyau7RTqSvN2JZm43Rws/2f2j7ekCz98WGLdgTLJUQT.pdf"
        },
        {
          "pageNumber": 247,
          "articleName": "Acceptance Testing of Mobile Applications - Automated Emotion Tracking for Large User Groups",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1AqWIyNws8JvQIDx1b9cyZ/2HqGpmXwOoKrPJhNoIdfhq.pdf"
        }
      ]
    },
    {
      "affiliation": "Free University of Bozen-Bolzano",
      "articleRefs": [
        {
          "pageNumber": 203,
          "articleName": "Profiling Call Changes Via Motif Mining",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1xiMLi0gUh1Ze5ANgiZYsF/5USzOOuiLHbJaUF7HEHpbu.pdf"
        }
      ]
    },
    {
      "affiliation": "Friedrich-Alexander-Universität Erlangen-Nürnberg",
      "articleRefs": [
        {
          "pageNumber": 515,
          "articleName": "The Patch-Flow Method for Measuring Inner Source Collaboration",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/67njFKnNg6BjSnzLM71Lr3/2Of8xip4ODYotv9xuWma7t.pdf"
        }
      ]
    },
    {
      "affiliation": "Fujitsu Labs of America",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        }
      ]
    },
    {
      "affiliation": "Georgia College & State University",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "affiliation": "Georgia Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "affiliation": "Georgia Tech",
      "articleRefs": [
        {
          "pageNumber": 236,
          "articleName": "GUIFetch: Supporting App Design and Development through GUI Search",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7j2mIm7lfl2PG40nR71ZJJ/6hZK9vmsR73ljRu6ffEOnq.pdf"
        }
      ]
    },
    {
      "affiliation": "Google Inc",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "affiliation": "Grand Valley State University",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2SUmREckTuJBYeOqzURf5T/5kMPcC2ZIstTrrvleqnxWc.pdf"
        }
      ]
    },
    {
      "affiliation": "Gran Sasso Science Institute",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Architectural Technical Debt Identification: The Research Landscape",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf"
        },
        {
          "pageNumber": 35,
          "articleName": "Identifying Architectural Technical Debt in Android Applications through Automated Compliance Checking",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2GojGt1tPE8l1QD6OQKCry/7xWLPafiIzONXaU7xhOSvq.pdf"
        },
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "affiliation": "Graz University of Technology",
      "articleRefs": [
        {
          "pageNumber": 183,
          "articleName": "INSpIRA: INtegrating Security Into Risk Assessment",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ZTVp9M58dlYoX4H3UmQMz/3CPzDjmXVpoCupl1P2WG0m.pdf"
        }
      ]
    },
    {
      "affiliation": "Hamm-Lippstadt University of Applied Sciences",
      "articleRefs": [
        {
          "pageNumber": 214,
          "articleName": "Beyond Web/Native/Hybrid: A New Taxonomy for Mobile App Development",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7mEd2jzriF7VRyHkP6uWHi/1AhvGKXWf1IXAKWtsV0cta.pdf"
        }
      ]
    },
    {
      "affiliation": "Hannover University of Applied Sciences & Arts",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Harbin Engineering University",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "affiliation": "Harbin Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "affiliation": "Hawassa University",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        }
      ]
    },
    {
      "affiliation": "HealthConnect",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Is Stack Overflow in Portuguese Attractive for Brazilian Users?",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3wXdHmjMVS0PXBf0VV0Nh7/2UA5pvfiKDBQWh4nNnvn4s.pdf"
        }
      ]
    },
    {
      "affiliation": "Heidelberg University",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        }
      ]
    },
    {
      "affiliation": "Huawei Technologies Co.",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "affiliation": "Humboldt-Universität zu Berlin",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "affiliation": "Humboldt University Berlin",
      "articleRefs": [
        {
          "pageNumber": 101,
          "articleName": "mRUBiS: An Exemplar for Model-Based Architectural Self-Healing and Self-Optimization",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4AlAbDXJUpXo0LxWaTk95u/5zizl5UYGihEcEuBT7spP8.pdf"
        }
      ]
    },
    {
      "affiliation": "IBM Research",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Ares: Triggering Payload of Evasive Android Malware",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1kwoE4IsWlbBcNdOplxNHd/7uM7gUAKRHWP2Xgy3303zJ.pdf"
        }
      ]
    },
    {
      "affiliation": "IBM T.J. Watson Research Center",
      "articleRefs": [
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "affiliation": "IMDEA Software Institute",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        },
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        },
        {
          "pageNumber": 320,
          "articleName": "RepliComment: Identifying Clones in Code Comments",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2pliSydiWl7XslV2J2egVH/3s77fQ7QuChavo8uJWTye5.pdf"
        }
      ]
    },
    {
      "affiliation": "IMDEA Software Institute / Universidad Politécnica de Madrid",
      "articleRefs": [
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        }
      ]
    },
    {
      "affiliation": "IMEC",
      "articleRefs": [
        {
          "pageNumber": 176,
          "articleName": "Towards a Framework for Proximity-Based Hybrid Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/c3yvsjcybuRWNJUh1ynnm/RpjaA5JJZVt0xjXCf14v3.pdf"
        }
      ]
    },
    {
      "affiliation": "Indraprastha Institute of Information Technology",
      "articleRefs": [
        {
          "pageNumber": 487,
          "articleName": "A Search System for Mathematical Expressions on Software Binaries",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4tBpjlztDNmgYuVeoIpxif/5enNGDLjL2UyUIk3ErxNjg.pdf"
        }
      ]
    },
    {
      "affiliation": "INESC-ID / IST Universidade de Lisboa",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "affiliation": "INRIA Rennes",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        }
      ]
    },
    {
      "affiliation": "Institute of Information Technology",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "MobiCoMonkey - Context Testing of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/31BmYK0ZqkbgdiIkT9cQeX/3Fu35K7A9yiELd4uuEtEyB.pdf"
        }
      ]
    },
    {
      "affiliation": "Instituto de Pesquisas Tecnológicas de São Paulo - IPT-SP",
      "articleRefs": [
        {
          "pageNumber": 277,
          "articleName": "Impacts of Coding Practices on Readability",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6w0SFpqKAKc3TBdO05ttCj/2MK67SaEQGfvRUPQ9pFzVl.pdf"
        }
      ]
    },
    {
      "affiliation": "International Hellenic University",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "affiliation": "Istanbul Technical University",
      "articleRefs": [
        {
          "pageNumber": 135,
          "articleName": "An Empirical Study on Scrum Application Patterns in Distributed Teams",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2TpvbYSC9eItPQkIddIzbx/5gFnDv397NrGfCMLLlq9GU.pdf"
        }
      ]
    },
    {
      "affiliation": "IT University of Copenhagen",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Adapting Lightweight User-Centered Design with the Scrum-Based Development Process",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3WENAO2Q7gD4S8oKQvukc/3jsceoqtzpCygPslqX5NZc.pdf"
        },
        {
          "pageNumber": 102,
          "articleName": "Virtual by Design: How a Work Environment can Support Agile Distributed Software Development",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5ozYWNgXTZYDXNX3elzGHT/75EjPBS9fZHQX43DVH4hlt.pdf"
        }
      ]
    },
    {
      "affiliation": "Johannes Kepler University",
      "articleRefs": [
        {
          "pageNumber": 95,
          "articleName": "Design Debt Prioritization: A Design Best Practice-Based Approach",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/ueHPXisNAG13UTVYBIT6Y/24if1cqXk3AB0B8rqbkGBh.pdf"
        }
      ]
    },
    {
      "affiliation": "JuliaSoft",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "affiliation": "Karlsruhe Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        },
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "affiliation": "Kent State University",
      "articleRefs": [
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        }
      ]
    },
    {
      "affiliation": "KTH Royal Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "affiliation": "KU Leuven",
      "articleRefs": [
        {
          "pageNumber": 33,
          "articleName": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated Database Clusters",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/72kskvd714nFBREel87JPu/60yt7Rjh8fcRFqFSkYXMw5.pdf"
        }
      ]
    },
    {
      "affiliation": "kyushu university",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Empirical Study on the Relationship Between Developer's Working Habits and Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4YR4IiN7N2xD8SPmKPg9GE/3IAtokElNPYIhiQlp2nnH2.pdf"
        }
      ]
    },
    {
      "affiliation": "LAAS-CNRS - Université de Toulouse",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Formal Verification of Complex Robotic Systems on Resource-Constrained Platforms",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/cDBUN1ykYbFPG6M57XTim/76iq5Ctr2hGw49vdgKbvU0.pdf"
        }
      ]
    },
    {
      "affiliation": "La Forge Research Lab",
      "articleRefs": [
        {
          "pageNumber": 153,
          "articleName": "CLEVER: Combining Code Metrics with Clone Detection for Just-in-Time Fault Prevention and Resolution in Large Industrial Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1TKlBTF3pMLDYWY56OUydc/1G6fsO6sfwnIHiY4TICQzT.pdf"
        }
      ]
    },
    {
      "affiliation": "LASIGE / FCUL Universidade de Lisboa",
      "articleRefs": [
        {
          "pageNumber": 196,
          "articleName": "Learning Non-deterministic Impact Models for Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/7rlFBTsmtNh8LCxH0azpi8/3v6vXU6i0gLViRX4w9reT6.pdf"
        }
      ]
    },
    {
      "affiliation": "Leanwork Tecnologia",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "A SCRUM-Based Process to Distributed Projects in Multidisciplinary Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5PGfVEOQWcFv3vRD8TEi5C/1PvDmWubVmAOXkGl6WOfr9.pdf"
        }
      ]
    },
    {
      "affiliation": "Lero - The Irish Software Research Centre",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "affiliation": "Lero–the Irish Software Research Centre",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "affiliation": "LIAS/ISAE-ENSMA",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Consolidation of BI Efforts in the LOD Era for African Context",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/7IN0KXb2e9LBJzL91T8FBv/3YS6q37zv8wrCOYAYBboFS.pdf"
        }
      ]
    },
    {
      "affiliation": "Linkoping University",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Linnaeus University",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Decentralized Self-Adaptive Computing at the Edge",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4ARtYkQVUB7hixaSKTqTgw/23slMjtin7WgSIOAwLF4fI.pdf"
        }
      ]
    },
    {
      "affiliation": "LIP6",
      "articleRefs": [
        {
          "pageNumber": 130,
          "articleName": "A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/xLin6RoRQ6LiJyfeCfZGh/184WE5awQRYQomHAyURoSq.pdf"
        }
      ]
    },
    {
      "affiliation": "LRI - CentraleSupélec - Université Paris-Saclay",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Formal Verification of Automotive Embedded Software",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf"
        }
      ]
    },
    {
      "affiliation": "LRI- Groupe PSA - Université Paris-Saclay",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Formal Verification of Automotive Embedded Software",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4ktYCcUnK3nRF39zx1K2Nw/1MJSMSRtWlKBfPraDsB8m6.pdf"
        }
      ]
    },
    {
      "affiliation": "Maharishi University of Management",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "affiliation": "Makerere University",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "A State-of-the-Art Review of Machine Learning Techniques for Fraud Detection Research",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/3k6JxR3FkmMf5UYiLrpX7x/SIxQrEnAUYfGkvnQWXDCD.pdf"
        },
        {
          "pageNumber": 20,
          "articleName": "Big Data: Deep Learning for Detecting Malware",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/4wTsnBSWYtxDPQmlCpV3xg/6T2SMwlGsnEMQ83s5zFd0E.pdf"
        },
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        },
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        },
        {
          "pageNumber": 50,
          "articleName": "Planning for Public Sector Software Projects Using Value-Based Requirements Engineering Techniques: A Research Agenda",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/5YldhptFinmng9P1H37lnj/wgQnWggQaeQaIO8c6nuEJ.pdf"
        }
      ]
    },
    {
      "affiliation": "Makerere University PhD student",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Partitioning Microservices: A Domain Engineering Approach",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/1LxhljbWWHEG4KqHKXynfC/62xSuIzqekmRpeqIqurMK4.pdf"
        }
      ]
    },
    {
      "affiliation": "Mälardalen University",
      "articleRefs": [
        {
          "pageNumber": 74,
          "articleName": "Formal Verification of an Autonomous Wheel Loader by Model Checking",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1tHw7nvKrvmmSHjNCo2JCE/7mSSFgdQ3cQGiC3G5n7Q3W.pdf"
        },
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "affiliation": "Mbarara University of Science and Technology",
      "articleRefs": [
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        }
      ]
    },
    {
      "affiliation": "McGill University",
      "articleRefs": [
        {
          "pageNumber": 86,
          "articleName": "Do Software Engineers Use Autocompletion Features Differently than Other Developers?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6dsYf4qTlK9aVhtTr3fncP/1fkcg8mpHMsCni9fDmzDm9.pdf"
        },
        {
          "pageNumber": 98,
          "articleName": "Revisiting \"Programmers' Build Errors\" in the Visual Studio Context",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5Arq3IKp6CdKpHN4TLBMpr/6nib2AYGjsYxSkjmbqSqGe.pdf"
        }
      ]
    },
    {
      "affiliation": "MCIS",
      "articleRefs": [
        {
          "pageNumber": 353,
          "articleName": "The Open-Closed Principle of Modern Machine Learning Frameworks",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf"
        }
      ]
    },
    {
      "affiliation": "Michigan State University",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/2SUmREckTuJBYeOqzURf5T/5kMPcC2ZIstTrrvleqnxWc.pdf"
        }
      ]
    },
    {
      "affiliation": "Mohammed Abdur Razzak",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "affiliation": "Monash University",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        },
        {
          "pageNumber": 219,
          "articleName": "Vision: Improved Development of Mobile eHealth Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6EM03WmzDYF2GyB0dYlXBt/ve8zNwsOpz0eB1zw394bK.pdf"
        },
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        },
        {
          "pageNumber": 252,
          "articleName": "Vision: Mobile eHealth Learning and Intervention Platform",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/kynjdozDLIdbfGKatHIJc/6NUfQreGrhdKX9SjEAWYfY.pdf"
        },
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        },
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "affiliation": "Montana State University",
      "articleRefs": [
        {
          "pageNumber": 138,
          "articleName": "A Position Study to Investigate Technical Debt Associated with Security Weaknesses",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1vI3uSh2bbYdbBf6YZ1hSD/4BZxZd9lyGIX91EQ2GVDjv.pdf"
        }
      ]
    },
    {
      "affiliation": "Nagoya University",
      "articleRefs": [
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "affiliation": "Nanjing University",
      "articleRefs": [
        {
          "pageNumber": 244,
          "articleName": "LESDroid - A Tool for Detecting Exported Service Leaks of Android Applications",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4Ym1IiVZOu6Pbefc0CIa20/5sFTSrP9YurS9gApFvh8HH.pdf"
        }
      ]
    },
    {
      "affiliation": "Nanyang Technological University",
      "articleRefs": [
        {
          "pageNumber": 24,
          "articleName": "AnFlo: Detecting Anomalous Sensitive Information Flows in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1Da1cD3fqdRkzGHQURPQtA/3SpZsMdlBbWfR9sIP2y1L8.pdf"
        }
      ]
    },
    {
      "affiliation": "National University of Defense Technology",
      "articleRefs": [
        {
          "pageNumber": 178,
          "articleName": "LogTracker: Learning Log Revision Behaviors Proactively from Software Evolution History",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2fg7zrH9719MFxTIcXNyDr/2ht6lvtxsswgbh1yHnQqwM.pdf"
        }
      ]
    },
    {
      "affiliation": "New York University",
      "articleRefs": [
        {
          "pageNumber": 281,
          "articleName": "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2ChNd4QZQnZxEKo7KWybuG/BfRZdF9fgcaDCtL4pXFTV.pdf"
        }
      ]
    },
    {
      "affiliation": "Nippon Telegraph and Telephone Corporation",
      "articleRefs": [
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        }
      ]
    },
    {
      "affiliation": "North Carolina State University",
      "articleRefs": [
        {
          "pageNumber": 66,
          "articleName": "Comprehension Effort and Programming Activities: Related? Or Not Related?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3NKUe2aOSenqglECedNY5y/3qyMl0I6sjBmLY5jaE0FwS.pdf"
        },
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        },
        {
          "pageNumber": 403,
          "articleName": "Which Contributions Predict Whether Developers are Accepted into GitHub Teams",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3z70FCKg3sg5cFGKrX1jJ4/6gIca2FpXfg39ou4U2TCHq.pdf"
        },
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        },
        {
          "pageNumber": 554,
          "articleName": "500+ Times Faster than Deep Learning: (A Case Study Exploring Faster Methods for Text Mining StackOverflow)",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4OBnbxn06092CMddQ5iuae/Yylh6UopeB3LXKOLafM3b.pdf"
        }
      ]
    },
    {
      "affiliation": "North Dakota State University",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Northern Arizona University - NAU",
      "articleRefs": [
        {
          "pageNumber": 277,
          "articleName": "Impacts of Coding Practices on Readability",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6w0SFpqKAKc3TBdO05ttCj/2MK67SaEQGfvRUPQ9pFzVl.pdf"
        }
      ]
    },
    {
      "affiliation": "Oakland University",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Detecting No-Sleep Energy Bugs Using Reference Counted Variables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2UOr6Fneg8VkP5Lov34jPR/66V3zI1wNjTOB5RsCUBcW7.pdf"
        }
      ]
    },
    {
      "affiliation": "Ocuco Ltd",
      "articleRefs": [
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "affiliation": "Open University",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        }
      ]
    },
    {
      "affiliation": "Open University of the Netherlands",
      "articleRefs": [
        {
          "pageNumber": 308,
          "articleName": "Code Phonology: An Exploration into the Vocalization of Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5DPh7xq2kMk7VsYGlB5x7V/3aWNYc8OWUx1JDsdJkG5a.pdf"
        }
      ]
    },
    {
      "affiliation": "OrangeApk",
      "articleRefs": [
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        }
      ]
    },
    {
      "affiliation": "Osaka University",
      "articleRefs": [
        {
          "pageNumber": 316,
          "articleName": "Toward Refactoring Evaluation with Code Naturalness",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1wLm0llzu4fwdsdZMv5CbV/1ci2pkCSPuLgIPN21eTZIQ.pdf"
        },
        {
          "pageNumber": 332,
          "articleName": "Toward Introducing Automated Program Repair Techniques to Industrial Software Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5I4UCkD92FSTyuoY7BUZPN/108uV5FRtBnS5LiF35WKDY.pdf"
        },
        {
          "pageNumber": 336,
          "articleName": "A Study on Inappropriately Partitioned Commits — How Much and What Kinds of IP Commits in Java Projects? —",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2FaENRgCasXURrdA1YYXET/3ytP2Fi5twQBv6D30oq5vQ.pdf"
        },
        {
          "pageNumber": 340,
          "articleName": "On the Naturalness of Auto-Generated Code —Can We Identify Auto-Generated Code Automatically?—",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/6jpYDAfEcKb744eLGfElpv/7cSUbQlOTOyd6EUpbUEn6F.pdf"
        },
        {
          "pageNumber": 352,
          "articleName": "How Slim Will My System Be? Estimating Refactored Code Size by Merging Clones",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7mTfqDsjjsCSJ0MGrCV7mH/1CSJopEynbdHjowWX6jejf.pdf"
        }
      ]
    },
    {
      "affiliation": "OsloMet - Oslo Metropolitan University",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        }
      ]
    },
    {
      "affiliation": "paluno - The Ruhr Institute for Software Technology",
      "articleRefs": [
        {
          "pageNumber": 190,
          "articleName": "The Special Case of Data Protection and Self-Adaptation",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3DZkSlFbYCoN8zYlAo78vC/5GNDCtt4OMVwMVAH7Hh2AF.pdf"
        }
      ]
    },
    {
      "affiliation": "Peking University",
      "articleRefs": [
        {
          "pageNumber": 144,
          "articleName": "Unsupervised Deep Bug Report Summarization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7jLQcMXbTNUlLNkv33H4xH/1bSOHaJJAUgK7dfiD0j2V4.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        },
        {
          "pageNumber": 231,
          "articleName": "Why are Android Apps Removed From Google Play? A Large-Scale Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3XsVvAg8KCpTYl8MOz239i/1WttM2Hs2gzDcrpjWrly1q.pdf"
        },
        {
          "pageNumber": 266,
          "articleName": "What's Inside My App?: Understanding Feature Redundancy in Mobile Apps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/ptEGAvKnop7Re2jh46cTV/6ED3nFiWdVXzXie8A2ho0t.pdf"
        },
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "affiliation": "Peking University; CASIC - CQC Software Testing and Assessment Technology (Beijing) Corporation Ltd.",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "affiliation": "Politecnico di Milano",
      "articleRefs": [
        {
          "pageNumber": 172,
          "articleName": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf"
        }
      ]
    },
    {
      "affiliation": "Polytechnique Montreal",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Developer Interaction Traces Backed by IDE Screen Recordings from Think Aloud Sessions",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7uPpwltsVBquJHYQkLj2sG/3FGkfwrrsjMCT8R7CghUBv.pdf"
        },
        {
          "pageNumber": 192,
          "articleName": "Feature Location Using Crowd-Based Screencasts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/48HPG2ikYDa169zFh4xurk/3sqn6JwPLm1pTWZknnMZxi.pdf"
        }
      ]
    },
    {
      "affiliation": "Pontificia Universidad Católica de Chile",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "affiliation": "Psychologische Hochschule Berlin",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "affiliation": "PUC-Minas",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "affiliation": "Qatar University",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "affiliation": "Queen's University",
      "articleRefs": [
        {
          "pageNumber": 19,
          "articleName": "Adventures in NICAD: A Ten-Year Retrospective",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3dyEgnWgi4SanttaR1D7Oq/2yxP0yLYjDnuU8PilT2tqu.pdf"
        },
        {
          "pageNumber": 131,
          "articleName": "Studying the Impact of Adopting Continuous Integration on the Delivery Time of Pull Requests",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/DZ7CC85uslSr4BSsQAJjL/6VLqY0jSwWTIm8DooaK2ug.pdf"
        }
      ]
    },
    {
      "affiliation": "Rice University",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "affiliation": "Rio de Janeiro State University",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "Analysis of Test Log Information through Interactive Visualizations",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7p0pFx8bE7YnSOAPX5sD3B/3295UHUN0aAFM1x6oW69xy.pdf"
        }
      ]
    },
    {
      "affiliation": "RISE SICS Lund",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "affiliation": "RISE SICS Västerås",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "affiliation": "RISE SICS Västerås/Mälardalen University",
      "articleRefs": [
        {
          "pageNumber": 217,
          "articleName": "Adaptive Runtime Response Time Control in PLC-based Real-Time Systems Using Reinforcement Learning",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3z32KiC0UQeOX61R5lxHb3/1xqc7Sl0mONWMLEDpJyvXn.pdf"
        }
      ]
    },
    {
      "affiliation": "RIT",
      "articleRefs": [
        {
          "pageNumber": 188,
          "articleName": "Security: A Critical Quality Attribute in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1z3S59IR1rxMHAggP1cDTo/01olZVDrM4w5tT2fG01CDn.pdf"
        }
      ]
    },
    {
      "affiliation": "Rochester Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Improving Android Permissions Models for Increased User Awareness and Security",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4r1iJW957QWaHnKs6smfiQ/5ETdQztLOpJldD8RMF1l4q.pdf"
        },
        {
          "pageNumber": 56,
          "articleName": "Investigating User Perception and Comprehension of Android Permission Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7k3Q4plDc6aAFKXUGrtnEp/3FcnYYOacoZsRsJJ05AkPm.pdf"
        },
        {
          "pageNumber": 370,
          "articleName": "Leveraging the Agile Development Process for Selecting Invoking/Excluding Tests to Support Feature Location",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5FHJzJZziWpE1X6Jj6ZzJm/G8eGggoqZFwBGIpMTMZi9.pdf"
        },
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "affiliation": "Rowan University",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "affiliation": "RWTH Aachen University",
      "articleRefs": [
        {
          "pageNumber": 97,
          "articleName": "Component Interface Identification and Behavioral Model Discovery from Software Execution Data",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/qtYQVR3yFPYxgYMsMf22Y/1ZkYD1JSzARk8Edc881Vms.pdf"
        }
      ]
    },
    {
      "affiliation": "Saarland University",
      "articleRefs": [
        {
          "pageNumber": 133,
          "articleName": "Guiding App Testing with Mined Interaction Models",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/dNmewr7weK1YD5YVdxv7F/3SlrPLN2rg60lt7lSePnqr.pdf"
        }
      ]
    },
    {
      "affiliation": "Saarland University/CISPA",
      "articleRefs": [
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "affiliation": "Saarland University / CISPA",
      "articleRefs": [
        {
          "pageNumber": 84,
          "articleName": "Analyzing the User Interface of Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/Uzz60O8CH6ckjNGeAufdE/4C8VnSv6w59BCtbWTdZ5oO.pdf"
        },
        {
          "pageNumber": 142,
          "articleName": "What did Really Change with the New Release of the App?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4iSCwrVXGIb6hgJLTlva5p/1N3Czipv7EBKyuvU1KmvtY.pdf"
        }
      ]
    },
    {
      "affiliation": "Samsung R&D Institute Brazil - Campinas - SP",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        },
        {
          "pageNumber": 40,
          "articleName": "Software Engineering Tools Environment for Outsourcing Teams Collaboration",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2lImER8Y1axu5ueud93SAc/5YpcyX6t463sAS2tbRc3jY.pdf"
        }
      ]
    },
    {
      "affiliation": "Samsung R&D Institute Brazil - Manaus - AM",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Validation of Outsourcing TeamsWork on Agile Projects of Samsung R&D Institute Brazil",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/dvXsZFDOEB2iWXsZlLVt6/1qr40VeSLvLXrix0Uggw86.pdf"
        }
      ]
    },
    {
      "affiliation": "School of Electronics Engineering and Computer Science",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "A Multi-level Dataset of Linux Kernel Patchwork",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2Cy38XQpH2jSuLo56Bf9NG/7s4N9TBZ65Snk6crd3tqua.pdf"
        }
      ]
    },
    {
      "affiliation": "SES",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        }
      ]
    },
    {
      "affiliation": "SEU/CMU and U. of Hawaii",
      "articleRefs": [
        {
          "pageNumber": 297,
          "articleName": "Assessing an Architecture's Ability to Support Feature Evolution",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7K7biwjuitGH70wMvtO9eq/zlWQr9E7MUVuYF4ETqxGi.pdf"
        }
      ]
    },
    {
      "affiliation": "Shiraz University",
      "articleRefs": [
        {
          "pageNumber": 78,
          "articleName": "Mining and Extraction of Personal Software Process Measures through IDE Interaction Logs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4SPwj7oHM58u1ebfOvCkzd/6nkv830YYUB4WCKRG51ZPB.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Corporate Technology",
      "articleRefs": [
        {
          "pageNumber": 135,
          "articleName": "An Empirical Study on Scrum Application Patterns in Distributed Teams",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2TpvbYSC9eItPQkIddIzbx/5gFnDv397NrGfCMLLlq9GU.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Healthcare Private Limited",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Transitioning from Plan-Driven to Lean in a Global Software Engineering Organization: A Practice-Centric View",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/6wApSUULH6l9KvgCBKtcZa/50da86lCp9kA13yOChV1FP.pdf"
        },
        {
          "pageNumber": 77,
          "articleName": "Challenges in Scaling up a Globally Distributed Legacy Product: A Case Study of a Matrix Organization",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7dRCgZJa0qQzjnfakn7xTR/1nkf6ibKCJ1LNrtT8XLLjR.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Technology and Service Private Limited",
      "articleRefs": [
        {
          "pageNumber": 16,
          "articleName": "Control Based Management to Self Organizing Agile Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1XqmM122hfF9YfOQq0DIQ1/4jDyX0YEicjIoIemsyqzIP.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Technology and Services Private Limited",
      "articleRefs": [
        {
          "pageNumber": 16,
          "articleName": "Control Based Management to Self Organizing Agile Teams: A Case Study",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1XqmM122hfF9YfOQq0DIQ1/4jDyX0YEicjIoIemsyqzIP.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Technology and Services Private Ltd",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2wO9E4Qz8g7W8f5p5Z5apO/uNqbxnyOicRnSBHv59Vul.pdf"
        }
      ]
    },
    {
      "affiliation": "Siemens Technology and Services Pvt Ltd",
      "articleRefs": [
        {
          "pageNumber": 35,
          "articleName": "Effective Collaboration across the Globe through Digital Dash Boards and Machine Learning",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2wO9E4Qz8g7W8f5p5Z5apO/uNqbxnyOicRnSBHv59Vul.pdf"
        }
      ]
    },
    {
      "affiliation": "Singapore Management University",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        },
        {
          "pageNumber": 200,
          "articleName": "Deep Code Comment Generation",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5dLvdnuJCdl0ZD0KMSyw5E/7EEt44LKRDFFZEaL0CP0bg.pdf"
        },
        {
          "pageNumber": 442,
          "articleName": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf"
        }
      ]
    },
    {
      "affiliation": "Software Engineering Institute",
      "articleRefs": [
        {
          "pageNumber": 51,
          "articleName": "Uncertainty Reduction in Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3btedRGcvmo9SNhuCIwBlh/7GDPxIhtzWbt55Nvz0FOUT.pdf"
        },
        {
          "pageNumber": 137,
          "articleName": "SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3pCX6nLraX2dhuzXtpW8T9/4vB1LskkvJ4R3yizw2jD6N.pdf"
        }
      ]
    },
    {
      "affiliation": "SonarSource SA",
      "articleRefs": [
        {
          "pageNumber": 57,
          "articleName": "Cognitive Complexity — An Overview and Evaluation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/2ksa7SpXQ20IFceb2GK0wK/QrkJzP49BIy23ZmNLqlxX.pdf"
        }
      ]
    },
    {
      "affiliation": "source{d}",
      "articleRefs": [
        {
          "pageNumber": 34,
          "articleName": "Public Git Archive: A Big Code Dataset for All",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/22Twq1K4q0KBiv1E9lDd1N/1o2e5Gi5jqbzKJMEhX2QzU.pdf"
        }
      ]
    },
    {
      "affiliation": "Stottler Henke Associates",
      "articleRefs": [
        {
          "pageNumber": 53,
          "articleName": "Static Software Metrics for Reliability and Maintainability",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4dMU6fYKCB4hIivF4Ioedi/4i01Wl8Zonr0s5B3lbI9Fj.pdf"
        }
      ]
    },
    {
      "affiliation": "SWAT Lab.",
      "articleRefs": [
        {
          "pageNumber": 353,
          "articleName": "The Open-Closed Principle of Modern Machine Learning Frameworks",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/7zV17nkUoJzA7U7GHBvU5w/22RYGbYrMXsrvjAQgbcMA6.pdf"
        }
      ]
    },
    {
      "affiliation": "Swisscom",
      "articleRefs": [
        {
          "pageNumber": 64,
          "articleName": "JIT Feedback - What Experienced Developers Like about Static Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf"
        }
      ]
    },
    {
      "affiliation": "SwSE Research Group",
      "articleRefs": [
        {
          "pageNumber": 492,
          "articleName": "Imprecisions Diagnostic in Source Code Deltas",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/v3xK9yTmQf1kLMrRFjFZY/1dVW5oM9IquceRGqpQPKFm.pdf"
        }
      ]
    },
    {
      "affiliation": "Technical University Munich",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "affiliation": "Technical University Munich & fortiss GmbH",
      "articleRefs": [
        {
          "pageNumber": 58,
          "articleName": "Adapting a System with Noisy Outputs with Statistical Guarantees",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/4F4CEYmnWJ9IbgsCBXNHVZ/7HV9nixLy9HUC11Mznaaqf.pdf"
        }
      ]
    },
    {
      "affiliation": "Technical University of Košice",
      "articleRefs": [
        {
          "pageNumber": 344,
          "articleName": "Augmenting Source Code Lines with Sample Variable Values",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/01RNRJpkeZQdMt01mE0INJ/7KfXNr42kDvTSWAikYMOEj.pdf"
        }
      ]
    },
    {
      "affiliation": "Technical University of Munich",
      "articleRefs": [
        {
          "pageNumber": 90,
          "articleName": "API for Power-Aware Application Design on Mobile Systems",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5yR5aTDkbrNbB6mly1yI0c/7ciO75XHvuthICCrCWacQ5.pdf"
        }
      ]
    },
    {
      "affiliation": "Technische Universität Berlin",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "affiliation": "Technische Universität Braunschweig",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Technische Universität Darmstadt",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        }
      ]
    },
    {
      "affiliation": "Technische Universität Ilmenau",
      "articleRefs": [
        {
          "pageNumber": 442,
          "articleName": "Analyzing Requirements and Traceability Information to Improve Bug Localization",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4UtPXaaOmmTwo0CS5WMGTg/607A29ekNvWtdQVmvV73X9.pdf"
        }
      ]
    },
    {
      "affiliation": "Texas A & M University",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Texas State University",
      "articleRefs": [
        {
          "pageNumber": 156,
          "articleName": "How Do Android Operating System Updates Impact Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5RTaoCK5z8gynX7ecPaRVt/34gtll5q21Y6yzjHtX18AP.pdf"
        }
      ]
    },
    {
      "affiliation": "The College of William & Mary",
      "articleRefs": [
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        }
      ]
    },
    {
      "affiliation": "The Hong Kong Polytechnic University",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "affiliation": "The Ohio State University",
      "articleRefs": [
        {
          "pageNumber": 13,
          "articleName": "Orlis: Obfuscation-Resilient Library Detection for Android",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/DQAMUtvmECru9s6bU2y3K/7AZKc2wxwu6aKHsgj8xW1j.pdf"
        }
      ]
    },
    {
      "affiliation": "The Open University",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        },
        {
          "pageNumber": 194,
          "articleName": "Agree to Disagree: Security Requirements are Different, but Mechanisms for Security Adaptation are Not",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3QGgS1lHfIF4Tv0IDBgJSw/36UkGXMQcGDUKUaA7gVrrO.pdf"
        }
      ]
    },
    {
      "affiliation": "The University of Adelaide",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "affiliation": "TIM S.p.A. - Services Innovation",
      "articleRefs": [
        {
          "pageNumber": 166,
          "articleName": "LiqDroid: Towards Seamlessly Distributed Android Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/jvjaEPABHManAM2th3yKh/4rbSc6KSBYaKYdtR8ifjV9.pdf"
        }
      ]
    },
    {
      "affiliation": "Tokyo Institute of Technology",
      "articleRefs": [
        {
          "pageNumber": 324,
          "articleName": "A Preliminary Study on Using Code Smells to Improve Bug Localization",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7J9xplMc2mwy4kbt6rWUfS/26YjNq8HqwAnO0IIXaEZdY.pdf"
        },
        {
          "pageNumber": 380,
          "articleName": "SDExplorer: A Generic Toolkit for Smoothly Exploring Massive-Scale Sequence Diagram",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7lwETdpg2rWqW1F9Ts15c7/3N75AVXJrykAQKXdW5I6W.pdf"
        }
      ]
    },
    {
      "affiliation": "Trinity College Dublin",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        },
        {
          "pageNumber": 64,
          "articleName": "Self-Adaptive Automata",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3dxozXoAX7AlDorzFPfQPU/1PbhgVqGQskwRy91V4mPTJ.pdf"
        }
      ]
    },
    {
      "affiliation": "Tsinghua University",
      "articleRefs": [
        {
          "pageNumber": 6,
          "articleName": "JBench: A Dataset of Data Races for Concurrency Testing",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1omJXsucT0XSohh2QobEE7/n7NZqUVnrjXpqF8UfDEfP.pdf"
        }
      ]
    },
    {
      "affiliation": "TU Berlin",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Hybrid Adaptation Policies – Towards a Framework for Classification and Modelling of Different Combinations of Adaptation Policies",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/33X1ybju3dwW3NQegEQDtT/6Cj9Kc8OxCe0hk2TuSZJve.pdf"
        }
      ]
    },
    {
      "affiliation": "TU/e - JADS",
      "articleRefs": [
        {
          "pageNumber": 172,
          "articleName": "Defining, Enforcing and Checking Privacy Policies In Data-Intensive Applications",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/3cg3ONp0hoLcg0WyhC8G30/7lUdGDUh56RezgvK3S3STk.pdf"
        }
      ]
    },
    {
      "affiliation": "UCI",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf"
        }
      ]
    },
    {
      "affiliation": "UFMG",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "affiliation": "UFSJ",
      "articleRefs": [
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "affiliation": "Uganda Technology and Management University",
      "articleRefs": [
        {
          "pageNumber": 27,
          "articleName": "Tracking Food Insecurity from Tweets Using Data Mining Techniques",
          "articleLocation": "pdfs/SEiA2018-40v6c8Nhvlif39yy9LFSot/TtuuV9ZLh3Wf2PRSYZxL8/5iHPXKgzkzQReqTHngANHu.pdf"
        }
      ]
    },
    {
      "affiliation": "Ulm University",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "affiliation": "undefined",
      "articleRefs": [
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        },
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        }
      ]
    },
    {
      "affiliation": "Unisinos",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "A Performance Evaluation of Cross-Platform Mobile Application Development Approaches",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1gPd4DwLok6C0Q9YysM7uU/7pXXD0jIRPW4nTdPWxYVt0.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidad Central \"Marta Abreu\" de Las Villas",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidad del Norte",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidad de los Andes",
      "articleRefs": [
        {
          "pageNumber": 7,
          "articleName": "Overcoming Language Dichotomies: Toward Effective Program Comprehension for Mobile App Development",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4I7Afce030ZEa4G1lAQGfA/1J0XwUoJ0n3NN50u4ubzTN.pdf"
        },
        {
          "pageNumber": 52,
          "articleName": "Aiding Comprehension of Unit Test Cases and Test Suites with Stereotype-Based Tagging",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1PGNjrxVhviZZWX50YEZeN/0VKeXWpqnGj23HOUhFGTD.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidad del Turabo",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidade Estadual do Ceará",
      "articleRefs": [
        {
          "pageNumber": 130,
          "articleName": "A Coordination Mechanism to Replicate Large-Scale Multi-agent Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/xLin6RoRQ6LiJyfeCfZGh/184WE5awQRYQomHAyURoSq.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidade Federal do Rio Grande do Sul",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Cleaning Up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/26J5vHG8vHDYBgETMd3Zz4/2LF1HRaHhdW7UO7wCiVccz.pdf"
        }
      ]
    },
    {
      "affiliation": "Universidad Nacional de la Plata",
      "articleRefs": [
        {
          "pageNumber": 191,
          "articleName": "Development Frameworks for Mobile Devices: A Comparative Study about Energy Consumption",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1eq8gpIflOPtHzdA3WR6V1/4DaGsNw9qGBevrXJ8GSKDC.pdf"
        }
      ]
    },
    {
      "affiliation": "Universita Ca' Foscari di Venezia",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "affiliation": "Università degli Studi dell'Insubria",
      "articleRefs": [
        {
          "pageNumber": 21,
          "articleName": "Technical Debt as an External Software Attribute",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/1qd2sBfCQPyo0T1Fn8EtGj/42wUlzkoTtCbQPTqaf3iox.pdf"
        }
      ]
    },
    {
      "affiliation": "Università della Svizzera italiana",
      "articleRefs": [
        {
          "pageNumber": 312,
          "articleName": "Towards Just-in-Time Refactoring Recommenders",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4cfBnwEAApw2pOtGXQeAqH/7xaXnRQW7fm4mGL28IW5zS.pdf"
        }
      ]
    },
    {
      "affiliation": "Università della Svizzera Italiana; IMDEA Software Institute",
      "articleRefs": [
        {
          "pageNumber": 320,
          "articleName": "RepliComment: Identifying Clones in Code Comments",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2pliSydiWl7XslV2J2egVH/3s77fQ7QuChavo8uJWTye5.pdf"
        }
      ]
    },
    {
      "affiliation": "Università della Svizzera italiana (USI)",
      "articleRefs": [
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "affiliation": "Universita di Verona",
      "articleRefs": [
        {
          "pageNumber": 40,
          "articleName": "CIL to Java-Bytecode Translation for Static Analysis Leveraging",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1kKBxpOnzxfTluvawdn0tm/bFbQzbJ9d5h6MNdy208iq.pdf"
        }
      ]
    },
    {
      "affiliation": "Università Politecnica delle Marche",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        }
      ]
    },
    {
      "affiliation": "Universite de Montreal",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "affiliation": "University College Dublin",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Compositional Verification of Self-Adaptive Cyber-Physical Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/1tJKPNef88xNK6XHaJpvfg/229mxpTMuZ3xvM3ZuHRZ5H.pdf"
        }
      ]
    },
    {
      "affiliation": "University College London",
      "articleRefs": [
        {
          "pageNumber": 46,
          "articleName": "CROP: Linking Code Reviews to Source Code Changes",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3EJa4wcX5E2TAvw7j19NgS/4tjIgRFY6ISe16WvaAeMIb.pdf"
        },
        {
          "pageNumber": 90,
          "articleName": "Who's This? Developer Identification Using IDE Event Data",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4eZMAg1wYkWXx7RNpEQfRa/4uPlbqHLfysFW1vR4JUTg3.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Adelaide",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Alberta",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        },
        {
          "pageNumber": 220,
          "articleName": "The Android Update Problem: An Empirical Study",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/40ITzpu9A7gja2DFXlgksu/5xMIfFQxaevjACtqxWJBAz.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Applied Sciences Reutlingen",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Bari",
      "articleRefs": [
        {
          "pageNumber": 92,
          "articleName": "On Developers' Personality in Large-Scale Distributed Projects: The Case of the Apache Ecosystem",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2BZmV6fowc7ZorVa3NKNWY/6PySdipZY9buOSF6AbAIbv.pdf"
        },
        {
          "pageNumber": 387,
          "articleName": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Bari Aldo Moro",
      "articleRefs": [
        {
          "pageNumber": 14,
          "articleName": "A Gold Standard for Emotion Annotation in Stack Overflow",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2zXXCaCZSLbHi9Q37UvpS9/ND7YXM1z7MerOP41IKQNG.pdf"
        },
        {
          "pageNumber": 364,
          "articleName": "A Benchmark Study on Sentiment Analysis for Software Engineering Research",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1jNhKLjuP971qE1RJy9uu5/7dzem7EqX1CwyPMxfPm4hq.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Bern",
      "articleRefs": [
        {
          "pageNumber": 64,
          "articleName": "JIT Feedback - What Experienced Developers Like about Static Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7MQtlrLXAo9qkCTI0GlbSt/25bBtcMqHNlNvMCEeJq247.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Birmingham",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6U1ZcaHX3Mn3EmMuKpA8sV/26AtvlcHx6w0AZzQjnnDp5.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Birmingham; King Saud University",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6U1ZcaHX3Mn3EmMuKpA8sV/26AtvlcHx6w0AZzQjnnDp5.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Brasília",
      "articleRefs": [
        {
          "pageNumber": 206,
          "articleName": "A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/27sQsOzcXw0blis8vqxYNP/7htRDEbBGSlccTCZmwOo5e.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Bristol",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        }
      ]
    },
    {
      "affiliation": "University of British Columbia",
      "articleRefs": [
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Calgary",
      "articleRefs": [
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        }
      ]
    },
    {
      "affiliation": "University of California",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "50K-C: A Dataset of Compilable, and Compiled, Java Projects",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3MKGCY5CqJjOs8CzpUZa8H/2cc3U7xmmVRpC4wYOOtppa.pdf"
        },
        {
          "pageNumber": 86,
          "articleName": "Hierarchical Abstraction of Execution Traces for Program Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2ZBB2iCkVlDaoBRYYK3Imv/3NKkqF9jQ7j312UM9dvlxS.pdf"
        }
      ]
    },
    {
      "affiliation": "University of California San Diego",
      "articleRefs": [
        {
          "pageNumber": 202,
          "articleName": "ANEL: Robust Mobile Network Programming Using a Declarative Language",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6cvuWh9A5dODPN6zZ73nkV/6pY4QxksVXKUnmcWoGgUrZ.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Colorado",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "University of East London",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        },
        {
          "pageNumber": 121,
          "articleName": "Scaling Agile across the Global Organization: An Early Stage Industrial SAFe Self-Assessment",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/3K8rh3FgL9E8TmE3leWIl6/1Ye75HklIa3VNYAJqfaSXI.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Evansville",
      "articleRefs": [
        {
          "pageNumber": 314,
          "articleName": "\"Automatically Assessing Code Understandability\" Reanalyzed: Combined Metrics Matter",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1rjcpuv2ikUtj0cSmQbGNn/14QiTXuUR0aCksN8oJzmOp.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Gothenburg",
      "articleRefs": [
        {
          "pageNumber": 20,
          "articleName": "Runtime Verification of Hyperproperties for Deterministic Programs",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/27YQBlWFuvgPU68iFyNtt2/7ycHonGYcdLCEAoc0KN9BB.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "Testing Meets Static and Runtime Verification",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/3o3JjLpuJVe2Ugh4Gnrkjc/2p1Y0up4IwxUQgzbyFtB5k.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Gothenburg; Westerdal Oslo School of Art",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Greenwich",
      "articleRefs": [
        {
          "pageNumber": 161,
          "articleName": "Requirements and Specifications for Adaptive Security: Concepts and Analysis",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/zx2RPHDmZkM3cKPz91qmD/DvEOYxBCnm4DgLTnOmNy7.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Groningen",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Illinois at Urbana-Champaign",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        },
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Kent",
      "articleRefs": [
        {
          "pageNumber": 192,
          "articleName": "Self-Adaptation Made Easy with Blockchains",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/6dibjBLDaYcGaOjkTzaMaR/1XoumyUqtQMhBIdWn4XePu.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Klagenfurt",
      "articleRefs": [
        {
          "pageNumber": 50,
          "articleName": "Modeling Time in Java Programs for Automatic Error Detection",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/25U0Bo8tnZGE7GDSYDHC3i/66sh1N4JUBPJYmHujztw5n.pdf"
        },
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Koblenz-Landau",
      "articleRefs": [
        {
          "pageNumber": 233,
          "articleName": "Classification of APIs by Hierarchical Clustering",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2v9V1LqIFYYVjMhRIeEs3v/4N0UdyVH3nIDyokrYsNoDq.pdf"
        }
      ]
    },
    {
      "affiliation": "University of L’Aquila",
      "articleRefs": [
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Leicester",
      "articleRefs": [
        {
          "pageNumber": 341,
          "articleName": "Data-Driven Search-Based Software Engineering",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1JgBihL07nMQRDhm7eqpsy/54x3Spxqs26s5ia7xardEY.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Lethbridge",
      "articleRefs": [
        {
          "pageNumber": 331,
          "articleName": "A Design Structure Matrix Approach for Measuring Co-change-Modularity of Software Products",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1NAaDpYl9Rym9aPXlxfdjL/11jK5sl9mpodIOl1JvCS0g.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Limerick and Lero",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Luxembourg",
      "articleRefs": [
        {
          "pageNumber": 167,
          "articleName": "A Search-Based Approach for Accurate Identification of Log Message Formats",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/68mpHoA79ci54pYOpfR6ft/24cQc42FfuV6eULRoF51Uf.pdf"
        },
        {
          "pageNumber": 254,
          "articleName": "Characterising Deprecated Android APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3UwTHjfxQvvP7MM71NvGkW/2g1mU5NfTFlDQECIOk0cZj.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Macedonia",
      "articleRefs": [
        {
          "pageNumber": 62,
          "articleName": "The Developer's Dilemma: Factors Affecting the Decision to Repay Code Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3Tgd8PMIjSd22tuK2W94Nh/6ZENWUmFUyH9XnuHx8PzEG.pdf"
        },
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Malakand",
      "articleRefs": [
        {
          "pageNumber": 137,
          "articleName": "A Preliminary Structure of Software Security Assurance Model",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/5oOYMWBXW15p6w1SRRXk7q/7eeFtGiHr6b6ip4NQ1BoaY.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Maryland Baltimore County",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "From Lasagna to Spaghetti: A Decision Model to Manage Defect Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/5q1FRWyZzATg1gOOmQ6eZr/10zLH1Wp6na9rXgsATV2kg.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Milan-Bicocca",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Molise",
      "articleRefs": [
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Mons",
      "articleRefs": [
        {
          "pageNumber": 181,
          "articleName": "On the Impact of Security Vulnerabilities in the npm Package Dependency Network",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/smpJmx8mh2G24jvMxWglO/63i23sBR9g3TNrLmC7312D.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Montpellier",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Montreal",
      "articleRefs": [
        {
          "pageNumber": 189,
          "articleName": "Identifying Software Components from Object-Oriented APIs Based on Dynamic Analysis",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5cTc54OvtDmTETID3AhMGs/fP1PS1HWV0mXfR0gAkq7d.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Moratuwa",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Notre Dame",
      "articleRefs": [
        {
          "pageNumber": 117,
          "articleName": "Code Offloading Solutions for Audio Processing in Mobile Healthcare Applications: A Case Study",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5L2vNhoaCG5jOtQsnpgHoG/4hiNCOZeMggOCfSfVyazaL.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Oslo",
      "articleRefs": [
        {
          "pageNumber": 55,
          "articleName": "AnaConDebt: A Tool to Assess and Track Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4fkLBVFUWnkSDBjv5gLazl/1HX8ny04woSIZuBkiM4q0t.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Oulu",
      "articleRefs": [
        {
          "pageNumber": 387,
          "articleName": "Natural Language or Not (NLoN) - A Package for Software Engineering Text Analysis Pipeline",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/490ORfuJ26kYFGWxISDMTb/6msfl7f94DovgGfom8qaph.pdf"
        },
        {
          "pageNumber": 437,
          "articleName": "Towards Automatically Identifying Paid Open Source Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1wzhq1uWdQDa1LWZyPV4sI/4DmzkgY0iYMvl68vD51IFr.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Pará",
      "articleRefs": [
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Passau",
      "articleRefs": [
        {
          "pageNumber": 31,
          "articleName": "Descriptive Compound Identifier Names Improve Source Code Comprehension",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3BAlKZgNeTUlp0rfx3NrV5/1FFvJ5TgtNRRJgolCBJu5h.pdf"
        },
        {
          "pageNumber": 41,
          "articleName": "Evaluating Domain-Specific Metric Thresholds: An Empirical Study",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/S4664GwfkTyR4uGcC9aWu/6bgF62qXUQY8ZQEmwhe136.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Potsdam",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Regensburg",
      "articleRefs": [
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Rennes 1-IRISA",
      "articleRefs": [
        {
          "pageNumber": 110,
          "articleName": "Detection and Analysis of Behavioral T-Patterns in Debugging Activities",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/1Mpdkzr0zqNQbXbu4hkBwH/wAUYaPSJv4bKp8XUIl2iG.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Salerno",
      "articleRefs": [
        {
          "pageNumber": 43,
          "articleName": "Does Source Code Quality Reflect the Ratings of Apps?",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7owz03DYR7RdSX0ZHXkBoA/4WJIMi1KIKSr1MOsbsoP3B.pdf"
        },
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Salford",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Employee Retention and Turnover in Global Software Development: Comparing In-House Offshoring and Offshore Outsourcing",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/1PfokbiurfnDTb06zFSq5r/5Zp1sORUM1tNgCmxBRqXmI.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Sannio",
      "articleRefs": [
        {
          "pageNumber": 211,
          "articleName": "Automatically Classifying Posts Into Question Categories on Stack Overflow",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2DYhKH4nGqeAGKX12uDI4j/6XbPplw1yBN92R4kXOvESl.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        },
        {
          "pageNumber": 526,
          "articleName": "Was Self-Admitted Technical Debt Removal a Real Removal? An In-Depth Perspective",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3TnrKlopX09GVyMt5JYhRn/5IBr2u4Sx8oxHAA4ysUvHj.pdf"
        },
        {
          "pageNumber": 542,
          "articleName": "Deep Learning Similarities from Different Representations of Source Code",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/lGFFMWb8F9asVdd24L2F0/7A3FaUble4AeVKMEgt7z0a.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Saskatchewan",
      "articleRefs": [
        {
          "pageNumber": 19,
          "articleName": "Adventures in NICAD: A Ten-Year Retrospective",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3dyEgnWgi4SanttaR1D7Oq/2yxP0yLYjDnuU8PilT2tqu.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Southern California",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "An Exploratory Study on the Influence of Developers in Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/FQyiXW2dgiLV45zeYPCrl/3ZIixc0JShqhZaryyO1Eor.pdf"
        },
        {
          "pageNumber": 10,
          "articleName": "Bugs.jar: A Large-Scale, Diverse Dataset of Real-World Java Bugs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/75suu2PqvSvAnUtZNRsJuY/6f93qvSzdqrwKk1DuF8fUg.pdf"
        },
        {
          "pageNumber": 215,
          "articleName": "Toward Predicting Architectural Significance of Implementation Issues",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6YZBwy7ypYv0ELfqXGe1JQ/6O2doMdhWQsHIa9L6mtpC9.pdf"
        }
      ]
    },
    {
      "affiliation": "University of South Florida",
      "articleRefs": [
        {
          "pageNumber": 88,
          "articleName": "HR-Auth: Heart Rate Data Authentication Using Consumer Wearables",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5HLhUYQM75igdPPCF1xyPe/6WYTlxCla4Dj20Zgzpzagt.pdf"
        },
        {
          "pageNumber": 134,
          "articleName": "Technical Debt-Related Information Asymmetry between Finance and IT",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/69zACLZ55yBa2lNn06NsOW/5X6PgrnbtjGaWartOUTDUU.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Stuttgart",
      "articleRefs": [
        {
          "pageNumber": 125,
          "articleName": "Limiting Technical Debt with Maintainability Assurance – An Industry Survey on Used Techniques and Differences with Service- and Microservice-Based Systems",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/6bNpOG8ck3oKiNUAA1HZ8j/4LtTiVBrncNTBS98cuLbbw.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Technology Sydney",
      "articleRefs": [
        {
          "pageNumber": 385,
          "articleName": "CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/2iNnmASkTjfSqorMLr4f9F/TE7G2dBUZU3OH809p83zv.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Texas at Arlington",
      "articleRefs": [
        {
          "pageNumber": 224,
          "articleName": "P2A: A Tool for Converting Pixels to Animated Mobile Application User Interfaces",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/7f8hN7Pn6xO9QPMQzw9HO6/5VIEG0Hexz560riIylXdr7.pdf"
        }
      ]
    },
    {
      "affiliation": "University of the Balearic Islands ",
      "articleRefs": [
        {
          "pageNumber": 76,
          "articleName": "Governing Technology Debt: Beyond Technical Debt",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/7sqgsEpmtzPjQ7MBsepOUH/1cGGKu6zMPzxFLvM4j4eeF.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Toronto",
      "articleRefs": [
        {
          "pageNumber": 85,
          "articleName": "Trade-Off Decisions across Time in Technical Debt Management: A Systematic Literature Review",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3WNTFKHfaZu8z3CAfujDWt/4VHuM38gHAiZNZHDAn1ljA.pdf"
        },
        {
          "pageNumber": 243,
          "articleName": "Anatomy of Functionality Deletion: An Exploratory Study on Mobile Apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/46QGAeZcfjsdudd2GnATMk/5oQrdt1XDRXrRC5mya5in9.pdf"
        },
        {
          "pageNumber": 328,
          "articleName": "What Design Topics do Developers Discuss?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/14EJRJ2aBicJW9i170iwsi/6YyMzpwJnZiGLDc35JnVei.pdf"
        },
        {
          "pageNumber": 426,
          "articleName": "Large-Scale Analysis of the Co-commit Patterns of the Active Developers in GitHub's Top Repositories",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2PSyuH7pzNXAyM3k94rV14/4xBLmX21LTvLL87RoQ8NCx.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Trier",
      "articleRefs": [
        {
          "pageNumber": 319,
          "articleName": "SOTorrent: Reconstructing and Analyzing the Evolution of Stack Overflow Posts",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5M0Ca4V61vF1yhWI73ljYK/5StfwoDgvLmBhnSRtT9LyH.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Tulsa",
      "articleRefs": [
        {
          "pageNumber": 149,
          "articleName": "Toward Evaluating the Impact of Self-Adaptation on Security Control Certification",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/78OhinAgkubclG5YAunrMv/7vQwsgjQwZFNxeGNuYC858.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Twente; Radboud University Nijmegen",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Risk Management for High Tech Systems",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/6JSZKdU24pC4GbkhIh6t0P/2g1zAbL86B9v45ClHIT4JV.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Victoria",
      "articleRefs": [
        {
          "pageNumber": 82,
          "articleName": "Predicting Developers' IDE Commands with Machine Learning",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3sIkWAZkujnhOEp1TgwToe/6hZmbi8mq10FXusX1xqFGM.pdf"
        },
        {
          "pageNumber": 270,
          "articleName": "Understanding the Usage, Impact, and Adoption of Non-OSI Approved Licenses",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/53qNB6fYBfzvcFBabth6gX/3oFgLMw8M4mUEKIzTxXkUf.pdf"
        },
        {
          "pageNumber": 587,
          "articleName": "Bayesian Hierarchical Modelling for Tailoring Metric Thresholds",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/380KUb1utXnZLErlFBBPxZ/6tPKF62ccqWlVS7oF9rRSc.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Virginia",
      "articleRefs": [
        {
          "pageNumber": 465,
          "articleName": "Evaluating How Developers Use General-Purpose Web-Search for Code Retrieval",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2oapMFtBpNlc2fVTsyXG6h/2IYbOpY5H26xPQ1NDFhzpY.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Waikato",
      "articleRefs": [
        {
          "pageNumber": 389,
          "articleName": "MetropolJS: Visualizing and Debugging Large-Scale JavaScript Program Structure with Treemaps",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/3prnLtREXUK9xxeBB6qjLz/6wtk2dT0SXnBxrKhHWo0VX.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Washington",
      "articleRefs": [
        {
          "pageNumber": 1,
          "articleName": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7nXU0IkIFHGveFQPA0yuZv/zrtUB2xMi9g56p4CkTDY2.pdf"
        },
        {
          "pageNumber": 118,
          "articleName": "Mining the Mind, Minding the Mine: Grand Challenges in Comprehension and Mining",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4uQ9qNYdtevyu0Cpsh8V1P/3ipiI14cuE2PUzjnTOswW2.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Waterloo",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Trace Checking for Dynamic Software Product Lines",
          "articleLocation": "pdfs/SEAMS2018-5hrrlcRUEMNl4YkiM4TJQC/67X7WtLbhbBdR6QXEHn7gU/5FLmg9Gu86UZlLAtsRBXAr.pdf"
        },
        {
          "pageNumber": 454,
          "articleName": "Towards Extracting Web API Specifications from Documentation",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3Xo296FXAH3D8UWgtvA1hb/2DWN3MKlZBy8xdGcDFj6Sc.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Western Macedonia",
      "articleRefs": [
        {
          "pageNumber": 115,
          "articleName": "A Framework for Managing Interest in Technical Debt: An Industrial Validation",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/4wybWlPsAF5vuFyRghV5r6/2sXJ3EqoUMLe1qD5j2J8fx.pdf"
        }
      ]
    },
    {
      "affiliation": "University of York",
      "articleRefs": [
        {
          "pageNumber": 537,
          "articleName": "RestMule: Enabling Resilient Clients for Remote APIs",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/4d3jCF9PNi7m739nzkrkg7/34W4eYTHtC7c9FNjfuJuL.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Zagreb",
      "articleRefs": [
        {
          "pageNumber": 112,
          "articleName": "Team Resilience in Distributed Student Projects",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/9xrYvdkZUJ4SsOoN7AUk4/5gWaxwm8gDtppv8ZvECrTV.pdf"
        }
      ]
    },
    {
      "affiliation": "University of Zurich",
      "articleRefs": [
        {
          "pageNumber": 2,
          "articleName": "Sensing and Supporting Software Developers' Focus",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/425jFDIu1dUo8PziPBl09U/2MJIh8Up6F6RR6jTDsv20f.pdf"
        },
        {
          "pageNumber": 26,
          "articleName": "Structured Information on State and Evolution of Dockerfiles on GitHub",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5tbcdm06zSC6TEH3VA6arE/4bOo28bCYpLh3XngDSLPNJ.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 41,
          "articleName": "Un-break My Build: Assisting Developers with Build Repair Hints",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/7gExHXKQnXtxnRrk83P2ce/3qP1QwTWqgE3RrmR6kXHQY.pdf"
        },
        {
          "pageNumber": 62,
          "articleName": "Enriched Event Streams: A General Dataset for Empirical Studies on In-IDE Activities of Software Developers",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/5o2wcIlc4L03mQbGWrxw7A/7BHsKbNcpPOdiTbGDBwjA6.pdf"
        },
        {
          "pageNumber": 72,
          "articleName": "TYDR – Track Your Daily Routine. Android App for Tracking Smartphone Sensor and Usage Data",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4uKH5WR1CSJxlapjC28d0T/2l853uqOcRgVHBSZ0lSg2s.pdf"
        },
        {
          "pageNumber": 119,
          "articleName": "An Evaluation of Open-Source Software Microbenchmark Suites for Continuous Performance Assessment",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/2DWxqlc5iQplTQUfk3oeNF/49oaZppQ9s9hYjL0yM0o3G.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        },
        {
          "pageNumber": 348,
          "articleName": "An Empirical Investigation on the Readability of Manual and Generated Test Cases",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4XzpfE1djMyDjX0jO8UFYu/6z349n2V8cxM1GgAPixNqD.pdf"
        },
        {
          "pageNumber": 392,
          "articleName": "How Is Video Game Development Different from Software Development in Open Source?",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6PEuNELFPT6nXJRz1RYwsS/67yA7ZLqjuwaTP7fJE5nDH.pdf"
        }
      ]
    },
    {
      "affiliation": "Univ. Grenoble Alpes - CNRS",
      "articleRefs": [
        {
          "pageNumber": 10,
          "articleName": "Extending Specification Patterns for Verification of Parametric Traces",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/1yls6m3uejDC0uRfF3y5bA/7rPPzaBmDLND9korWLjezP.pdf"
        }
      ]
    },
    {
      "affiliation": "USI Università della Svizzera Italiana",
      "articleRefs": [
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "affiliation": "Utrecht University",
      "articleRefs": [
        {
          "pageNumber": 60,
          "articleName": "Domain-Specific Design of Patient Classification in Cancer-Related Cachexia Research",
          "articleLocation": "pdfs/FormaliSE2018-6b9aWp50lWtWvjvTXEoQ4v/4Mi22PZWN3RfUam0sLypF1/4g5vjXFfMurTANl4Fxk6cW.pdf"
        }
      ]
    },
    {
      "affiliation": "Vector Consulting Services",
      "articleRefs": [
        {
          "pageNumber": 69,
          "articleName": "Managing Software Products in a Global Context",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/2zqtweKqvE0uqWxVsrtdsx/4WdIRvDTtKfi1Uhg4WXiLF.pdf"
        }
      ]
    },
    {
      "affiliation": "Virginia Commonwealth University",
      "articleRefs": [
        {
          "pageNumber": 94,
          "articleName": "Detecting and Characterizing Developer Behavior Following Opportunistic Reuse of Code Snippets from the Web",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6KcQ31IrPfTObBao8lqQ9N/1tVLpKfDNx1bQQFP55Nbye.pdf"
        }
      ]
    },
    {
      "affiliation": "Virginia Polytechnic Institute and State University (Virginia Tech)",
      "articleRefs": [
        {
          "pageNumber": 37,
          "articleName": "Programming Support for Data Intensive Distributed Mobile Applications at the Edge",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/6AInFsuS2npMMVQb2C0TNM/2Szrs7IunbJrTEJ0wVFXwV.pdf"
        }
      ]
    },
    {
      "affiliation": "Virginia Tech",
      "articleRefs": [
        {
          "pageNumber": 70,
          "articleName": "The Hidden Cost of Code Completion: Understanding the Impact of the Recommendation-List Length on its Efficiency",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/NW7H41z6ua4JPpVmIO4af/7tWrBYn4tHTBMYDxHnitYt.pdf"
        },
        {
          "pageNumber": 94,
          "articleName": "Intent to Share: Enhancing Android Inter-Component Communication for Distributed Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1S3Dd6OotKwfzlcbu8Wh4b/6GRtupRJo5b5742PvsDHTl.pdf"
        },
        {
          "pageNumber": 105,
          "articleName": "Programming Support for Sharing Resources across Heterogeneous Mobile Devices",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/2qS2MLNDksp0olqz3dj8bd/6QknURgvoSi5K0DiwFGhSw.pdf"
        },
        {
          "pageNumber": 180,
          "articleName": "Automatic Inference of Java-to-Swift Translation Rules for Porting Mobile Applications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/67gfBNc0dr0P1DQH78eAGU/2g2EA4pFdwSe4GsF2eqxyq.pdf"
        }
      ]
    },
    {
      "affiliation": "Vrije Universiteit Amsterdam",
      "articleRefs": [
        {
          "pageNumber": 11,
          "articleName": "Architectural Technical Debt Identification: The Research Landscape",
          "articleLocation": "pdfs/TechDebt2018-2HoZsiQwsZRv1YOJJn8iEn/3GmqPcGIqhXeqf1O5gy3FL/1JeU3v1573oRlVrgArmS2i.pdf"
        },
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 45,
          "articleName": "An Investigation Into Android Run-Time Permissions from the End Users' Perspective",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5mc0kLEWHeUnlWbSGdRse5/0mFG0qh5s6PguZrOxbYZj.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        }
      ]
    },
    {
      "affiliation": "Vrije Universiteit Brussel",
      "articleRefs": [
        {
          "pageNumber": 30,
          "articleName": "A Graph-Based Dataset of Commit History of Real-World Android apps",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/3nlgYUfHGvoKNox0EsH4dD/33L4X57nlB8x5dWbttAL6t.pdf"
        },
        {
          "pageNumber": 144,
          "articleName": "Self-Reported Activities of Android Developers",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/5YaToaGIm4M0u4JkNRWOJE/3729AWIqyJryeA7cn29r2D.pdf"
        },
        {
          "pageNumber": 255,
          "articleName": "Do Developers Update Third-Party Libraries in Mobile Apps?",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1yzQr6mQ8f1rzN0b3iKyzJ/4T7WYtOZppQX2k9DyKzhKZ.pdf"
        }
      ]
    },
    {
      "affiliation": "Washington State University",
      "articleRefs": [
        {
          "pageNumber": 67,
          "articleName": "Automated Detection and Repair of Incompatible Uses of Runtime Permissions in Android Apps",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/1YBsXncsTb8kGFhwXqKQe1/3GyEJv1Q0HtfxbKQmUezDM.pdf"
        },
        {
          "pageNumber": 80,
          "articleName": "ICC-Inspect: Supporting Runtime Inspection of Android Inter-Component Communications",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/79ZgCqLFF9opAYHe8coy4l/25kpTIpW1VVxjjoh3biB75.pdf"
        },
        {
          "pageNumber": 286,
          "articleName": "The Effect of Poor Source Code Lexicon and Readability on Developers' Cognitive Load",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1VkuqNkRQN8FS0Ggx5aJ4M/7zVIGzHHMLiVBZ7DjRpw9E.pdf"
        },
        {
          "pageNumber": 414,
          "articleName": "Automatic Classification of Software Artifacts in Open-Source Applications",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/6umFhWPE5KWcmGcG0AQZ9x/ibEbKOVhJO7JgT5nMXElg.pdf"
        }
      ]
    },
    {
      "affiliation": "Washington State University - Pullman",
      "articleRefs": [
        {
          "pageNumber": 265,
          "articleName": "Leveraging Historical Versions of Android Apps for Efficient and Precise Taint Analysis",
          "articleLocation": "pdfs/MSR2018-49tRVjfpGbKi8yAwVb51ik/YO2FQIRP9udip8vAOMYyN/41wfwDnmzQjsSxizDP6kZ7.pdf"
        }
      ]
    },
    {
      "affiliation": "Weizmann Institute of Science",
      "articleRefs": [
        {
          "pageNumber": 122,
          "articleName": "Automation of Android Applications Functional Testing Using Machine Learning Activities Classification",
          "articleLocation": "pdfs/MOBILESoft2018-GMs9pTcfksAVL49sAkKuL/4Zc1J03nN8iRFGBduCsH6c/6iDGxVAUBDoUz9wlQf5gm6.pdf"
        }
      ]
    },
    {
      "affiliation": "Western Sydney University",
      "articleRefs": [
        {
          "pageNumber": 54,
          "articleName": "Global Software Engineering Experience through International Capstone Project Exchanges",
          "articleLocation": "pdfs/ICGSE2018-16fwbfXoX1FeZfTFY9k4Gl/7AwGzVk3Jfga8a3GYcWx8Y/6BO3SGnFzLIBeFNh2Dn27v.pdf"
        }
      ]
    },
    {
      "affiliation": "Wuhan University",
      "articleRefs": [
        {
          "pageNumber": 132,
          "articleName": "Cross Version Defect Prediction with Representative Data via Sparse Subset Selection",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/5B1O7ehLpP7AZJ9IuCnBtA/6MWy9BMrDQqbGx2MvFxSyL.pdf"
        }
      ]
    },
    {
      "affiliation": "Yangzhou University",
      "articleRefs": [
        {
          "pageNumber": 108,
          "articleName": "Recognizing Software Bug-Specific Named Entity in Software Bug Repository",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/4MVWMfSQxHkw82ApO3S4DY/4vIOvCi2ZHAkw6kJat4SQ8.pdf"
        }
      ]
    },
    {
      "affiliation": "Zhejiang University",
      "articleRefs": [
        {
          "pageNumber": 120,
          "articleName": "Recommending Frequently Encountered Bugs",
          "articleLocation": "pdfs/ICPC2018-7Fpoid0CPG3hZu3vucJvve/1XJMzRBE08yrqf1OH3eXKQ/3i9HZFwMe71IgYxbU9z5EY.pdf"
        }
      ]
    }
  ]
}};